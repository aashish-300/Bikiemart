[{"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\index.js":"1","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reportWebVitals.js":"2","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\store.js":"3","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\App.js":"4","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Footer.js":"5","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\userReducers.js":"6","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\productReducers.js":"7","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\orderReducers.js":"8","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Header.js":"9","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PaymentScreen.js":"10","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\HomeScreen.js":"11","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\cartReducers.js":"12","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\CartScreen.js":"13","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\LoginScreen.js":"14","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProfileScreen.js":"15","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderScreen.js":"16","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ShippingScreen.js":"17","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PlaceOrderScreen.js":"18","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserEditScreen.js":"19","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductScreen.js":"20","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\RegisterScreen.js":"21","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductListScreen.js":"22","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductEditScreen.js":"23","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserListScreen.js":"24","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderListScreen.js":"25","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\SearchBox.js":"26","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Message.js":"27","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Loader.js":"28","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Paginate.js":"30","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\FormContainer.js":"31","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\userConstants.js":"32","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Product.js":"33","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\orderConstants.js":"34","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\userActions.js":"35","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\orderActions.js":"36","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\cartConstants.js":"37","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\productConstants.js":"38","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\cartActions.js":"39","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\productActions.js":"40","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\index.js":"41","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\App.js":"42","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\store.js":"43","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reportWebVitals.js":"44","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\LoginScreen.js":"45","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\HomeScreen.js":"46","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\CartScreen.js":"47","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProfileScreen.js":"48","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductScreen.js":"49","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\RegisterScreen.js":"50","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PaymentScreen.js":"51","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ShippingScreen.js":"52","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PlaceOrderScreen.js":"53","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserEditScreen.js":"54","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderScreen.js":"55","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserListScreen.js":"56","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductEditScreen.js":"57","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductListScreen.js":"58","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Footer.js":"59","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Header.js":"60","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\productReducers.js":"61","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\orderReducers.js":"62","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\cartReducers.js":"63","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderListScreen.js":"64","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\userReducers.js":"65","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Loader.js":"66","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\FormContainer.js":"67","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Message.js":"68","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Paginate.js":"69","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\CheckoutSteps.js":"70","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Product.js":"71","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\productActions.js":"72","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\SearchBox.js":"73","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\cartActions.js":"74","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\orderConstants.js":"75","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\orderActions.js":"76","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\userConstants.js":"77","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\cartConstants.js":"78","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\userActions.js":"79","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\productConstants.js":"80"},{"size":384,"mtime":1678383153361,"results":"81","hashOfConfig":"82"},{"size":362,"mtime":1675326815416,"results":"83","hashOfConfig":"82"},{"size":2260,"mtime":1678518275045,"results":"84","hashOfConfig":"82"},{"size":2141,"mtime":1678383420548,"results":"85","hashOfConfig":"82"},{"size":360,"mtime":1675327164777,"results":"86","hashOfConfig":"82"},{"size":3926,"mtime":1678517989719,"results":"87","hashOfConfig":"82"},{"size":2943,"mtime":1678530065564,"results":"88","hashOfConfig":"82"},{"size":4079,"mtime":1675326815888,"results":"89","hashOfConfig":"82"},{"size":2493,"mtime":1678601632624,"results":"90","hashOfConfig":"82"},{"size":1705,"mtime":1675326816039,"results":"91","hashOfConfig":"82"},{"size":1513,"mtime":1676901021253,"results":"92","hashOfConfig":"82"},{"size":1486,"mtime":1676262050699,"results":"93","hashOfConfig":"82"},{"size":3974,"mtime":1678552899905,"results":"94","hashOfConfig":"82"},{"size":2565,"mtime":1675435965199,"results":"95","hashOfConfig":"82"},{"size":6774,"mtime":1675326816155,"results":"96","hashOfConfig":"82"},{"size":10402,"mtime":1677922324453,"results":"97","hashOfConfig":"82"},{"size":3100,"mtime":1678550593307,"results":"98","hashOfConfig":"82"},{"size":6564,"mtime":1675326816071,"results":"99","hashOfConfig":"82"},{"size":3912,"mtime":1675326816222,"results":"100","hashOfConfig":"82"},{"size":5518,"mtime":1676257811148,"results":"101","hashOfConfig":"82"},{"size":3921,"mtime":1678518007255,"results":"102","hashOfConfig":"82"},{"size":5682,"mtime":1678548863094,"results":"103","hashOfConfig":"82"},{"size":7916,"mtime":1678526938479,"results":"104","hashOfConfig":"82"},{"size":3511,"mtime":1675326816238,"results":"105","hashOfConfig":"82"},{"size":3541,"mtime":1675326816002,"results":"106","hashOfConfig":"82"},{"size":1048,"mtime":1677689508808,"results":"107","hashOfConfig":"82"},{"size":228,"mtime":1675326815656,"results":"108","hashOfConfig":"82"},{"size":458,"mtime":1675326815626,"results":"109","hashOfConfig":"82"},{"size":1593,"mtime":1675326815539,"results":"110","hashOfConfig":"82"},{"size":859,"mtime":1675326815681,"results":"111","hashOfConfig":"82"},{"size":378,"mtime":1675326815587,"results":"112","hashOfConfig":"82"},{"size":1479,"mtime":1678517995771,"results":"113","hashOfConfig":"82"},{"size":850,"mtime":1676519536622,"results":"114","hashOfConfig":"82"},{"size":1240,"mtime":1675326815809,"results":"115","hashOfConfig":"82"},{"size":7372,"mtime":1678517979750,"results":"116","hashOfConfig":"82"},{"size":6009,"mtime":1675326815487,"results":"117","hashOfConfig":"82"},{"size":287,"mtime":1675326815795,"results":"118","hashOfConfig":"82"},{"size":1265,"mtime":1678263782579,"results":"119","hashOfConfig":"82"},{"size":1310,"mtime":1678550195029,"results":"120","hashOfConfig":"82"},{"size":4598,"mtime":1679142904136,"results":"121","hashOfConfig":"82"},{"size":384,"mtime":1678383153361,"results":"122","hashOfConfig":"123"},{"size":2141,"mtime":1678383420548,"results":"124","hashOfConfig":"123"},{"size":2260,"mtime":1678518275045,"results":"125","hashOfConfig":"123"},{"size":362,"mtime":1675326815416,"results":"126","hashOfConfig":"123"},{"size":2565,"mtime":1675435965199,"results":"127","hashOfConfig":"123"},{"size":1513,"mtime":1676901021253,"results":"128","hashOfConfig":"123"},{"size":3963,"mtime":1679143958958,"results":"129","hashOfConfig":"123"},{"size":6774,"mtime":1675326816155,"results":"130","hashOfConfig":"123"},{"size":5518,"mtime":1676257811148,"results":"131","hashOfConfig":"123"},{"size":3921,"mtime":1678518007255,"results":"132","hashOfConfig":"123"},{"size":1705,"mtime":1679144944245,"results":"133","hashOfConfig":"123"},{"size":3100,"mtime":1678550593307,"results":"134","hashOfConfig":"123"},{"size":6564,"mtime":1675326816071,"results":"135","hashOfConfig":"123"},{"size":3912,"mtime":1675326816222,"results":"136","hashOfConfig":"123"},{"size":9844,"mtime":1679144025533,"results":"137","hashOfConfig":"123"},{"size":3511,"mtime":1675326816238,"results":"138","hashOfConfig":"123"},{"size":7916,"mtime":1679204073789,"results":"139","hashOfConfig":"123"},{"size":5682,"mtime":1679203051632,"results":"140","hashOfConfig":"123"},{"size":360,"mtime":1675327164777,"results":"141","hashOfConfig":"123"},{"size":2739,"mtime":1679201906778,"results":"142","hashOfConfig":"123"},{"size":2943,"mtime":1678530065564,"results":"143","hashOfConfig":"123"},{"size":4079,"mtime":1675326815888,"results":"144","hashOfConfig":"123"},{"size":1486,"mtime":1676262050699,"results":"145","hashOfConfig":"123"},{"size":3541,"mtime":1675326816002,"results":"146","hashOfConfig":"123"},{"size":3926,"mtime":1678517989719,"results":"147","hashOfConfig":"123"},{"size":458,"mtime":1675326815626,"results":"148","hashOfConfig":"123"},{"size":378,"mtime":1675326815587,"results":"149","hashOfConfig":"123"},{"size":228,"mtime":1675326815656,"results":"150","hashOfConfig":"123"},{"size":859,"mtime":1675326815681,"results":"151","hashOfConfig":"123"},{"size":1593,"mtime":1675326815539,"results":"152","hashOfConfig":"123"},{"size":850,"mtime":1676519536622,"results":"153","hashOfConfig":"123"},{"size":4598,"mtime":1679142904136,"results":"154","hashOfConfig":"123"},{"size":1048,"mtime":1677689508808,"results":"155","hashOfConfig":"123"},{"size":1310,"mtime":1678550195029,"results":"156","hashOfConfig":"123"},{"size":1240,"mtime":1675326815809,"results":"157","hashOfConfig":"123"},{"size":6009,"mtime":1675326815487,"results":"158","hashOfConfig":"123"},{"size":1479,"mtime":1678517995771,"results":"159","hashOfConfig":"123"},{"size":287,"mtime":1675326815795,"results":"160","hashOfConfig":"123"},{"size":7372,"mtime":1678517979750,"results":"161","hashOfConfig":"123"},{"size":1265,"mtime":1678263782579,"results":"162","hashOfConfig":"123"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tz5d68",{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jw56l1",{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\index.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reportWebVitals.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\store.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\App.js",["343"],"\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          \n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          \n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Footer.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\userReducers.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\productReducers.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Header.js",["344"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>BikieMart</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                \n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                     \n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Stocks</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    \n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PaymentScreen.js",["345"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\HomeScreen.js",["346","347","348","349"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\n\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row xs={1} sm={2} md={3} lg={4} xl={4} className=\"g-4\">\n                            {products.map(product => (\n                                <Col key={product._id} xs={6} sm={6} md={4} lg={3} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        {/* <Paginate page={page} pages={pages} keyword={keyword} /> */}\n                    </div>\n            }\n        </div>\n    )\n}\n\n\nexport default HomeScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\CartScreen.js",["350"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                    {cartItems.map(item => (\n                      <ListGroup.Item key={item.product}>\n                        <Row>\n                          <Col md={2}>\n                            <Image src={item.image} alt={item.name} fluid rounded />\n                          </Col>\n                          <Col md={3}>\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                          </Col>\n                          <Col md={2}>\n                            Rs{item.price}\n                          </Col>\n                          <Col md={3}>\n                            <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => dispatch(addToCart(item.product, Math.max(item.qty - 1, 1)))}>-</Button>\n                            <span className=\"mx-3\">{item.qty}</span>\n                            <Button variant=\"success\"style={{ padding: \"5px 10px\" }}  onClick={() => dispatch(addToCart(item.product, Math.min(item.qty + 1, (item.countInStock < 5 ? item.countInStock : 5))))}>+</Button>\n                          </Col>\n                          <Col md={1}>\n                            <Button\n                              type='button'\n                              variant='light'\n                              onClick={() => removeFromCartHandler(item.product)}\n                            >\n                              <i className='fas fa-trash'></i>\n                            </Button>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            Rs {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button disabled\n                            type='button'\n                            className='btn-block'\n                            // disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                            \n                        </Button>\n                        \n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProfileScreen.js",["351","352"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderScreen.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ShippingScreen.js",["353"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    \n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                {/* <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group> */}\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PlaceOrderScreen.js",["354","355"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserEditScreen.js",["356"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductScreen.js",["357","358"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails } from '../actions/productActions'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    return (\n        <div>\n            <Link to='/' className='btn btn-success my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        \n\n                                        <ListGroup.Item>\n                                            Price: Rs {product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>RS {product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                            <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                    {product.countInStock > 0 ? \n                                                    (product.countInStock <= 5 ? \n                                                        `Only ${product.countInStock} left` : \n                                                        'In Stock') : \n                                                        <span style={{color: \"red\", fontWeight: \"bold\"}}>Out of Stock</span> \n  }\n                                                         </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                            <ListGroup.Item><Row>\n                                                <Col>Qty</Col>\n                                                <Col xs='auto' className='my-1'>\n                                                    <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => setQty(Math.max(qty - 1, 1))}>-</Button>\n                                                    <span className=\"mx-3\">{qty}</span>\n                                                    <Button variant=\"success\" style={{ padding: \"5px 10px\" }} onClick={() => setQty(Math.min(qty + 1, Math.min(5, product.countInStock)))}>+</Button>\n                                                    </Col></Row></ListGroup.Item>\n                                                    )}\n                                                    <ListGroup.Item>\n                                                <Button variant=\"info\"\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            \n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\RegisterScreen.js",["359"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Log In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductListScreen.js",["360","361","362"],"import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductListScreen({ history, match }) {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n              <h1>Minimum Stocks</h1>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n\n              <tr>\n                {/* <th>ID</th> */}\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th>stock</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products\n                .filter((product) => product.countInStock <= 5)\n                .map((product) => (\n                  <tr key={product._id}>\n                    {/* <td>{product._id}</td> */}\n                    <td>{product.name}</td>\n                    <td>Rs{product.price}</td>\n                    <td>{product.category}</td>\n                    <td>{product.brand}</td>\n                    <td>{product.countInStock}</td>\n\n                    <td>\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                        <Button variant=\"light\" className=\"btn-sm\">\n                          <i className=\"fas fa-edit\"></i>\n                        </Button>\n                      </LinkContainer>\n\n                      <Button\n                        variant=\"danger\"\n                        className=\"btn-sm\"\n                        onClick={() => deleteHandler(product._id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n\n            <h1>All Stocks</h1>\n          </Table>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                {/* <th>stock</th> */}\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>Rs{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  {/* <td>{product.countInStock}</td> */}\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserListScreen.js",["363"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderListScreen.js",["364"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\SearchBox.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Message.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Loader.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Paginate.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\FormContainer.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\userConstants.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\components\\Product.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\orderConstants.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\userActions.js",["365"],"import axios from 'axios'\n\n\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\orderActions.js",["366","367","368"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\cartConstants.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\constants\\productConstants.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\cartActions.js",[],"D:\\fyp\\Ecommerce_Bikiemart\\frontend\\src\\actions\\productActions.js",["369"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\index.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\App.js",["370"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\store.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\HomeScreen.js",["371","372","373","374"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\CartScreen.js",["375"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                    {cartItems.map(item => (\n                      <ListGroup.Item key={item.product}>\n                        <Row>\n                          <Col md={2}>\n                            <Image src={item.image} alt={item.name} fluid rounded />\n                          </Col>\n                          <Col md={3}>\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                          </Col>\n                          <Col md={2}>\n                            Rs{item.price}\n                          </Col>\n                          <Col md={3}>\n                            <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => dispatch(addToCart(item.product, Math.max(item.qty - 1, 1)))}>-</Button>\n                            <span className=\"mx-3\">{item.qty}</span>\n                            <Button variant=\"success\"style={{ padding: \"5px 10px\" }}  onClick={() => dispatch(addToCart(item.product, Math.min(item.qty + 1, (item.countInStock < 5 ? item.countInStock : 5))))}>+</Button>\n                          </Col>\n                          <Col md={1}>\n                            <Button\n                              type='button'\n                              variant='light'\n                              onClick={() => removeFromCartHandler(item.product)}\n                            >\n                              <i className='fas fa-trash'></i>\n                            </Button>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            Rs {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button \n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                            \n                        </Button>\n                        \n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProfileScreen.js",["376","377"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductScreen.js",["378","379"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\RegisterScreen.js",["380"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PaymentScreen.js",["381"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ShippingScreen.js",["382"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\PlaceOrderScreen.js",["383","384"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserEditScreen.js",["385"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderScreen.js",["386"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <Button\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\UserListScreen.js",["387"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\ProductListScreen.js",["388","389","390"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Header.js",["391"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>BikieMart</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                \n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    \n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                     \n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Stocks</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    \n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\screens\\OrderListScreen.js",["392"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Message.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\Product.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\productActions.js",["393"],"import axios from 'axios'\n\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    \n\n\n\n\n\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n    \n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        if (product.price < 0 || product.countInStock < 0) {\n            throw new Error(\"Price or count in stock cannot be negative\");\n        }\n\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n\n        if (data.price < 0 || data.countInStock < 0) {\n            throw new Error(\"Price or count in stock cannot be negative\");\n        }\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\orderActions.js",["394","395","396"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\actions\\userActions.js",["397"],"C:\\Users\\user\\OneDrive\\Desktop\\Ecommerce_Bikiemart\\frontend\\src\\constants\\productConstants.js",[],{"ruleId":"398","severity":1,"message":"399","line":20,"column":8,"nodeType":"400","messageId":"401","endLine":20,"endColumn":23},{"ruleId":"398","severity":1,"message":"402","line":3,"column":34,"nodeType":"400","messageId":"401","endLine":3,"endColumn":37},{"ruleId":"398","severity":1,"message":"403","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"405","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":16},{"ruleId":"398","severity":1,"message":"406","line":15,"column":39,"nodeType":"400","messageId":"401","endLine":15,"endColumn":43},{"ruleId":"398","severity":1,"message":"407","line":15,"column":45,"nodeType":"400","messageId":"401","endLine":15,"endColumn":50},{"ruleId":"398","severity":1,"message":"408","line":4,"column":38,"nodeType":"400","messageId":"401","endLine":4,"endColumn":42},{"ruleId":"398","severity":1,"message":"409","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"411","line":53,"column":22,"nodeType":"412","messageId":"413","endLine":53,"endColumn":24},{"ruleId":"398","severity":1,"message":"403","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"415","line":35,"column":8,"nodeType":"416","endLine":35,"endColumn":26,"suggestions":"417"},{"ruleId":"414","severity":1,"message":"418","line":43,"column":8,"nodeType":"416","endLine":43,"endColumn":46,"suggestions":"419"},{"ruleId":"398","severity":1,"message":"408","line":4,"column":52,"nodeType":"400","messageId":"401","endLine":4,"endColumn":56},{"ruleId":"410","severity":1,"message":"420","line":97,"column":84,"nodeType":"412","messageId":"413","endLine":97,"endColumn":86},{"ruleId":"410","severity":1,"message":"411","line":34,"column":22,"nodeType":"412","messageId":"413","endLine":34,"endColumn":24},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"407","line":19,"column":37,"nodeType":"400","messageId":"401","endLine":19,"endColumn":42},{"ruleId":"398","severity":1,"message":"406","line":19,"column":44,"nodeType":"400","messageId":"401","endLine":19,"endColumn":48},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"421","line":23,"column":5,"nodeType":"400","messageId":"401","endLine":23,"endColumn":30},{"ruleId":"398","severity":1,"message":"422","line":14,"column":5,"nodeType":"400","messageId":"401","endLine":14,"endColumn":20},{"ruleId":"398","severity":1,"message":"423","line":19,"column":5,"nodeType":"400","messageId":"401","endLine":19,"endColumn":24},{"ruleId":"398","severity":1,"message":"424","line":28,"column":5,"nodeType":"400","messageId":"401","endLine":28,"endColumn":24},{"ruleId":"398","severity":1,"message":"425","line":96,"column":17,"nodeType":"400","messageId":"401","endLine":96,"endColumn":21},{"ruleId":"398","severity":1,"message":"399","line":20,"column":8,"nodeType":"400","messageId":"401","endLine":20,"endColumn":23},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"405","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":16},{"ruleId":"398","severity":1,"message":"406","line":15,"column":39,"nodeType":"400","messageId":"401","endLine":15,"endColumn":43},{"ruleId":"398","severity":1,"message":"407","line":15,"column":45,"nodeType":"400","messageId":"401","endLine":15,"endColumn":50},{"ruleId":"398","severity":1,"message":"408","line":4,"column":38,"nodeType":"400","messageId":"401","endLine":4,"endColumn":42},{"ruleId":"398","severity":1,"message":"409","line":2,"column":10,"nodeType":"400","messageId":"401","endLine":2,"endColumn":14},{"ruleId":"410","severity":1,"message":"411","line":53,"column":22,"nodeType":"412","messageId":"413","endLine":53,"endColumn":24},{"ruleId":"398","severity":1,"message":"408","line":4,"column":52,"nodeType":"400","messageId":"401","endLine":4,"endColumn":56},{"ruleId":"410","severity":1,"message":"420","line":97,"column":84,"nodeType":"412","messageId":"413","endLine":97,"endColumn":86},{"ruleId":"410","severity":1,"message":"411","line":34,"column":22,"nodeType":"412","messageId":"413","endLine":34,"endColumn":24},{"ruleId":"398","severity":1,"message":"403","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"403","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"414","severity":1,"message":"415","line":35,"column":8,"nodeType":"416","endLine":35,"endColumn":26,"suggestions":"426"},{"ruleId":"414","severity":1,"message":"418","line":43,"column":8,"nodeType":"416","endLine":43,"endColumn":46,"suggestions":"427"},{"ruleId":"414","severity":1,"message":"428","line":65,"column":8,"nodeType":"416","endLine":65,"endColumn":62,"suggestions":"429"},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"407","line":19,"column":37,"nodeType":"400","messageId":"401","endLine":19,"endColumn":42},{"ruleId":"398","severity":1,"message":"406","line":19,"column":44,"nodeType":"400","messageId":"401","endLine":19,"endColumn":48},{"ruleId":"398","severity":1,"message":"402","line":3,"column":34,"nodeType":"400","messageId":"401","endLine":3,"endColumn":37},{"ruleId":"398","severity":1,"message":"404","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":25},{"ruleId":"398","severity":1,"message":"425","line":96,"column":17,"nodeType":"400","messageId":"401","endLine":96,"endColumn":21},{"ruleId":"398","severity":1,"message":"422","line":14,"column":5,"nodeType":"400","messageId":"401","endLine":14,"endColumn":20},{"ruleId":"398","severity":1,"message":"423","line":19,"column":5,"nodeType":"400","messageId":"401","endLine":19,"endColumn":24},{"ruleId":"398","severity":1,"message":"424","line":28,"column":5,"nodeType":"400","messageId":"401","endLine":28,"endColumn":24},{"ruleId":"398","severity":1,"message":"421","line":23,"column":5,"nodeType":"400","messageId":"401","endLine":23,"endColumn":30},"no-unused-vars","'OrderListScreen' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Paginate' is defined but never used.","'page' is assigned a value but never used.","'pages' is assigned a value but never used.","'Form' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["430"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["431"],"Expected '===' and instead saw '=='.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.",["432"],["433"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["434"],{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"435","fix":"439"},{"desc":"437","fix":"440"},{"desc":"441","fix":"442"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"443","text":"444"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"445","text":"446"},{"range":"447","text":"444"},{"range":"448","text":"446"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"449","text":"450"},[1268,1286],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1268,1286],[1432,1470],[2219,2273],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]