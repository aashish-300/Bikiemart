{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","actions/productActions.js","components/Header.js","components/Footer.js","components/Product.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","khalti/KhaltiConfig.js","khalti/KhaltiKey.js","khalti/Khalti.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","clicked","error","productCategory","console","log","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","placeholder","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","config","headers","Authorization","token","axios","get","data","response","detail","message","listProducts","listProductDetails","Header","useSelector","nothing","useDispatch","filterCategory","category","info","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","onClick","Dropdown","Toggle","Menu","Item","Collapse","Nav","Link","NavDropdown","title","removeItem","isAdmin","Footer","Row","Col","Product","Card","_id","Img","src","image","Body","Title","as","Text","description","slice","price","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","HomeScreen","search","useEffect","xs","sm","md","lg","xl","ProductScreen","match","qty","setQty","params","Image","alt","fluid","ListGroup","countInStock","color","fontWeight","padding","Math","max","min","disabled","addToCart","setItem","stringify","CartScreen","productId","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","post","login","Group","controlId","Label","required","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","publicTestKey","secretKey","onSuccess","onError","onClose","Khalti","checkout","KhaltiCheckout","show","amount","PlaceOrderScreen","itemsPrice","index","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","postalCode","isDelivered","deliveredAt","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","Error","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9639d4ed.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\n\n\nexport const PRODUCT_CATEGORY_LIST_REQUEST = 'PRODUCT_CATEGORY_LIST_REQUEST'\nexport const PRODUCT_CATEGORY_LIST_SUCCESS = 'PRODUCT_CATEGORY_LIST_SUCCESS'\nexport const PRODUCT_CATEGORY_LIST_FAIL = 'PRODUCT_CATEGORY_LIST_FAIL'\n\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productCategoryReducer\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productCategory: productCategoryReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n\n} from '../constants/productConstants'\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                clicked:false\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const productCategoryReducer = (state = { products: [] }, action) => {\n    console.log(action)\n    switch (action.type) {\n        case 'PRODUCT_CATEGORY_REQUEST':\n            return { loading: true,clicked:false, products: [] }\n\n        case 'PRODUCT_CATEGORY_SUCCESS':\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages,\n                clicked: true,\n            }\n\n        case 'PRODUCT_CATEGORY_FAIL':\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\n\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    \n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n            \n            placeholder='search'\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            <Button\n            \n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Search\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\n\n\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)   \r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductsCategory = (category) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'PRODUCT_CATEGORY_REQUEST' })\r\n\r\n        const { data } = await axios.get(`/api/products`)\r\n        let info = {\r\n            page:1,\r\n            pages:1,\r\n            products:[]\r\n        }\r\n         info.products = data.products.filter(e => {\r\n            return e.category === category;\r\n        })\r\n\r\n        dispatch({\r\n            type: 'PRODUCT_CATEGORY_SUCCESS',\r\n            payload: info\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log('here is error')\r\n        console.log(error);\r\n        dispatch({\r\n            type: 'PRODUCT_CATEGORY_FAIL',\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n    \r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        console.log('posted');\r\n        console.log(data);\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        if (product.price < 0 || product.countInStock < 0) {\r\n            throw new Error(\"Price or count in stock cannot be negative\");\r\n        }\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        if (data.price < 0 || data.countInStock < 0) {\r\n            throw new Error(\"Price or count in stock cannot be negative\");\r\n        }\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport { logout } from \"../actions/userActions\";\nimport { listProducts, listProductsCategory } from \"../actions/productActions\";\n\nfunction Header() {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  let nothing = \"\";\n\n  const dispatch = useDispatch();\n  // const productList = useSelector((state) => state.productList);\n  // const productCategory = useSelector((state) => state.productCategory);\n\n  // const { error, loading, products, page, pages } = click\n  //   ? productCategory\n  //   : productList;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  // let keyword = history.location.search;\n  const loadPage = () => {\n    dispatch(listProducts());\n  }\n\n  const filterCategory = () => {\n    dispatch(listProductsCategory(nothing));\n  };\n\n  return (\n    <header>\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand\n              onClick={() => {\n                loadPage()\n              }}\n            >\n              Ecommerce\n            </Navbar.Brand>\n          </LinkContainer>\n          <Dropdown>\n            <Dropdown.Toggle variant='' id='dropdown-basic'>\n              categories\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={() => {\n                  nothing = \"spare and parts\";\n                  filterCategory();\n                }}\n              >\n                spare and parts\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  nothing = \"Accessories\";\n                  filterCategory();\n                }}\n              >\n                Accessories\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  nothing = \"Modifation parts\";\n                  filterCategory();\n                }}\n              >\n                Modifation parts\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  nothing = \"Tires\";\n                  filterCategory();\n                }}\n              >\n                Tires\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  nothing = \"Helmets\";\n                  filterCategory();\n                }}\n              >\n                Helmets\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() => {\n                  nothing = \"Lubricants\";\n                  filterCategory();\n                }}\n              >\n                Lubricants\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <SearchBox />\n\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenue'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Stocks</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy;BikerMart</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product ,category}) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded card-product\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img className=\"product-image\" src={product.image} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    {product.description.slice(0, 30)}...\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">Rs {product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { AiOutlineDown } from \"react-icons/ai\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const productCategory = useSelector((state) => state.productCategory);\r\n  const { error, loading, products, page, pages } = productCategory.clicked\r\n    ? productCategory\r\n    : productList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <div style={{ display: \"flex\", \"align-items\": \"center\" }}>\r\n        \r\n        <h1>Latest Products</h1>\r\n      </div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row xs={1} sm={2} md={3} lg={4} xl={4} className='g-4'>\r\n            {products.map((product) => (\r\n              <Col key={product._id} xs={6} sm={6} md={4} lg={3} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          {/* <Paginate page={page} pages={pages} keyword={keyword} /> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails } from '../actions/productActions'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    return (\n        <div>\n            <Link to='/' className='btn btn-success my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        \n\n                                        <ListGroup.Item>\n                                            Price: Rs {product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>RS {product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                            <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                    {product.countInStock > 0 ? \n                                                    (product.countInStock <= 5 ? \n                                                        `Only ${product.countInStock} left` : \n                                                        'In Stock') : \n                                                        <span style={{color: \"red\", fontWeight: \"bold\"}}>Out of Stock</span> \n  }\n                                                         </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                            <ListGroup.Item><Row>\n                                                <Col>Qty</Col>\n                                                <Col xs='auto' className='my-1'>\n                                                    <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => setQty(Math.max(qty - 1, 1))}>-</Button>\n                                                    <span className=\"mx-3\">{qty}</span>\n                                                    <Button variant=\"success\" style={{ padding: \"5px 10px\" }} onClick={() => setQty(Math.min(qty + 1, Math.min(5, product.countInStock)))}>+</Button>\n                                                    </Col></Row></ListGroup.Item>\n                                                    )}\n                                                    <ListGroup.Item>\n                                                <Button variant=\"info\"\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            \n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                    {cartItems.map(item => (\n                      <ListGroup.Item key={item.product}>\n                        <Row>\n                          <Col md={2}>\n                            <Image src={item.image} alt={item.name} fluid rounded />\n                          </Col>\n                          <Col md={3}>\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                          </Col>\n                          <Col md={2}>\n                            Rs{item.price}\n                          </Col>\n                          <Col md={3}>\n                            <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => dispatch(addToCart(item.product, Math.max(item.qty - 1, 1)))}>-</Button>\n                            <span className=\"mx-3\">{item.qty}</span>\n                            <Button variant=\"success\"style={{ padding: \"5px 10px\" }}  onClick={() => dispatch(addToCart(item.product, Math.min(item.qty + 1, (item.countInStock < 5 ? item.countInStock : 5))))}>+</Button>\n                          </Col>\n                          <Col md={1}>\n                            <Button\n                              type='button'\n                              variant='light'\n                              onClick={() => removeFromCartHandler(item.product)}\n                            >\n                              <i className='fas fa-trash'></i>\n                            </Button>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            Rs {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button \n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                            \n                        </Button>\n                        \n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Log In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Log In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Log In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Login</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    \n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                {/* <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group> */}\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('khalti')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='khalti'\n                            id='khalti'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import myKey from \"./KhaltiKey\";\r\nlet config = {\r\n    // replace this key with yours\r\n    \"publicKey\": myKey.publicTestKey,\r\n    \"productIdentity\": \"1234567890\",\r\n    \"productName\": \"Bikiemart\",\r\n    \"productUrl\": \"http://127.0.0.1:8000\",\r\n    \"eventHandler\": {\r\n        onSuccess (payload) {\r\n            // hit merchant api for initiating verfication\r\n            console.log(payload);\r\n        },\r\n        // onError handler is optional\r\n        onError (error) {\r\n            // handle errors\r\n            console.log(error);\r\n        },\r\n        onClose () {\r\n            console.log('widget is closing');\r\n        }\r\n    },\r\n    \"paymentPreference\": [\"KHALTI\", \"EBANKING\",\"MOBILE_BANKING\", \"CONNECT_IPS\", \"SCT\"],\r\n};\r\nexport default config;","let myKey={\r\n    publicTestKey:'test_public_key_912f1b95e0d24b1b90bd75a850ae0475',\r\n    secretKey:'test_secret_key_631a6d6f32da4e85b1ddedc31cd29590'\r\n}\r\nexport default myKey;","import React from 'react'\r\nimport KhaltiCheckout from \"khalti-checkout-web\";\r\nimport config from './KhaltiConfig';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Khalti() {\r\n    const cart = useSelector(state => state.cart);\r\n    const checkout = new KhaltiCheckout(config);\r\n\r\n    const handleClick = () => {\r\n        checkout.show({amount: cart.totalPrice * 100});\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleClick}> Pay Via Khalti </button>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport Khalti from '../khalti/Khalti'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n\n\n    cart.totalPrice = (Number(cart.itemsPrice) ).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                \n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>Rs{cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            \n\n                            \n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>Rs{cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Khalti/>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    \n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductListScreen({ history, match }) {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n              <h1>Minimum Stocks</h1>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n\n              <tr>\n                {/* <th>ID</th> */}\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th>stock</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products\n                .filter((product) => product.countInStock <= 5)\n                .map((product) => (\n                  <tr key={product._id}>\n                    {/* <td>{product._id}</td> */}\n                    <td>{product.name}</td>\n                    <td>Rs{product.price}</td>\n                    <td>{product.category}</td>\n                    <td>{product.brand}</td>\n                    <td>{product.countInStock}</td>\n\n                    <td>\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                        <Button variant=\"light\" className=\"btn-sm\">\n                          <i className=\"fas fa-edit\"></i>\n                        </Button>\n                      </LinkContainer>\n\n                      <Button\n                        variant=\"danger\"\n                        className=\"btn-sm\"\n                        onClick={() => deleteHandler(product._id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n\n            <h1>All Stocks</h1>\n          </Table>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                {/* <th>stock</th> */}\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>Rs{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  {/* <td>{product.countInStock}</td> */}\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct ,createProduct} from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductEditScreen({ match, history }) {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { error, loading, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n      console.log(\"update successful\");\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n        console.log(\"not product name\");\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n        console.log(\"details\");\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch(createProduct());\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", productId);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/products/upload/\",\n        formData,\n        config\n      );\n      console.log(formData);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Link to='/admin/productlist'>Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                required\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countinstock'>\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter stock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n\n              <select\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              >\n                <option value='spare and parts'>spare and parts</option>\n                <option value='Accessories'>Accessories</option>\n                <option value='Modifation parts'>Modifation parts</option>\n                <option value='Tires'>Tires</option>\n                <option value='Helmets'>Helmets</option>\n                <option value='Lubricants'>Lubricants</option>\n              </select>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default ProductEditScreen;\n","\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          \n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          \n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}