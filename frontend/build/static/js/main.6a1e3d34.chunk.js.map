{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","khalti/KhaltiConfig.js","khalti/KhaltiKey.js","khalti/Khalti.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productCategory","console","log","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","placeholder","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Product","category","Card","_id","Img","src","image","Body","Title","as","Text","description","slice","price","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Paginate","listProducts","listProductDetails","HomeScreen","click","setClick","list","search","isShown","setIsShown","reference","useRef","setCategory","nothing","no","setNo","setInfo","useEffect","current","filterCategory","info","listProductsCategory","details","p","position","left","top","cursor","flexDirection","onMouseEnter","onMouseLeave","xs","sm","md","lg","xl","ProductScreen","match","qty","setQty","params","Image","alt","fluid","ListGroup","countInStock","color","fontWeight","padding","Math","max","min","disabled","addToCart","setItem","stringify","CartScreen","productId","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","post","login","Group","controlId","Label","required","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","publicTestKey","secretKey","onSuccess","onError","onClose","Khalti","checkout","KhaltiCheckout","show","amount","PlaceOrderScreen","itemsPrice","index","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","postalCode","isDelivered","deliveredAt","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","ProductEditScreen","setPrice","setImage","setBrand","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","Error","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"gLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uB,QCvBvBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA6B,6BAE7BC,EAA2B,2BAE3BC,EAAmB,mBCPnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA4B,4BAE5BC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAGlBC,EAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBClCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAGtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCI7BC,GAAUC,0BAAgB,CAC5BC,YCP8B,WAAuC,IAAtCC,EAAK,uDAAG,CAAEC,SAAU,IAAMC,EAAM,uCAC/D,OAAQA,EAAOC,MACX,KAAK5E,EACD,MAAO,CAAE6E,SAAS,EAAMH,SAAU,IAEtC,KAAKzE,EACD,MAAO,CACH4E,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,KAAK9E,EACD,MAAO,CAAE2E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,EAEnB,EDXIS,gBCakC,WAAuC,IAAtCT,EAAK,uDAAG,CAAEC,SAAU,IAAMC,EAAM,uCAEnE,OADAQ,QAAQC,IAAIT,GACJA,EAAOC,MACX,IAAK,2BACD,MAAO,CAAEC,SAAS,EAAMH,SAAU,IAEtC,IAAK,2BACD,MAAO,CACHG,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,IAAK,wBACD,MAAO,CAAEH,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,EAEnB,EDhCIY,eCmCiC,WAAmD,IAAlDZ,EAAK,uDAAG,CAAEa,QAAS,CAAEC,QAAS,KAAQZ,EAAM,uCAC9E,OAAQA,EAAOC,MACX,KAAKzE,EACD,OAAO,aAAE0E,SAAS,GAASJ,GAE/B,KAAKrE,EACD,MAAO,CAAEyE,SAAS,EAAOS,QAASX,EAAOG,SAE7C,KAAKzE,EACD,MAAO,CAAEwE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,EAEnB,EDhDIe,cCmDgC,WAAyB,IAAxBf,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCACnD,OAAQA,EAAOC,MACX,KAAKtE,EACD,MAAO,CAAEuE,SAAS,GAEtB,KAAKtE,EACD,MAAO,CAAEsE,SAAS,EAAOY,SAAS,GAEtC,KAAKjF,EACD,MAAO,CAAEqE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,EAEnB,EDhEIiB,cCoEgC,WAAyB,IAAxBjB,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCACnD,OAAQA,EAAOC,MACX,KAAKnE,EACD,MAAO,CAAEoE,SAAS,GAEtB,KAAKnE,EACD,MAAO,CAAEmE,SAAS,EAAOY,SAAS,EAAMH,QAASX,EAAOG,SAE5D,KAAKnE,EACD,MAAO,CAAEkE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKlE,EACD,MAAO,CAAC,EAEZ,QACI,OAAO6D,EAEnB,EDpFIkB,cCuFgC,WAAsC,IAArClB,EAAK,uDAAG,CAAEa,QAAS,CAAC,GAAKX,EAAM,uCAChE,OAAQA,EAAOC,MACX,KAAK/D,EACD,MAAO,CAAEgE,SAAS,GAEtB,KAAK/D,EACD,MAAO,CAAE+D,SAAS,EAAOY,SAAS,EAAMH,QAASX,EAAOG,SAE5D,KAAK/D,EACD,MAAO,CAAE8D,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9D,EACD,MAAO,CAAEsE,QAAS,CAAC,GAEvB,QACI,OAAOb,EAEnB,EDtGImB,KE7BuB,WAA6D,IAA5DnB,EAAK,uDAAG,CAAEoB,UAAW,GAAIC,gBAAiB,CAAC,GAAKnB,EAAM,uCAC9E,OAAQA,EAAOC,MACX,KAAK3D,EACD,IAAM8E,EAAOpB,EAAOG,QACdkB,EAAYvB,EAAMoB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,UAAYS,EAAKT,OAAO,IAEtE,OAAIU,EACO,2BACAvB,GAAK,IACRoB,UAAWpB,EAAMoB,UAAUM,KAAI,SAAAD,GAAC,OAC5BA,EAAEZ,UAAYU,EAAUV,QAAUS,EAAOG,CAAC,MAI3C,2BACAzB,GAAK,IACRoB,UAAU,GAAD,mBAAMpB,EAAMoB,WAAS,CAAEE,MAI5C,KAAK7E,EACD,OAAO,2BACAuD,GAAK,IACRoB,UAAWpB,EAAMoB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEZ,UAAYX,EAAOG,OAAO,MAG3E,KAAK3D,EACD,OAAO,2BACAsD,GAAK,IACRqB,gBAAiBnB,EAAOG,UAGhC,KAAK1D,EACD,OAAO,2BACAqD,GAAK,IACR4B,cAAe1B,EAAOG,UAG9B,KAAKzD,EACD,OAAO,2BACAoD,GAAK,IACRoB,UAAW,KAGnB,QACI,OAAOpB,EAEnB,EFjBI6B,UGJ4B,WAAyB,IAAxB7B,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCAC/C,OAAQA,EAAOC,MACX,KAAKtD,EACD,MAAO,CAAEuD,SAAS,GAEtB,KAAKtD,EACD,MAAO,CAAEsD,SAAS,EAAO0B,SAAU5B,EAAOG,SAE9C,KAAKtD,EACD,MAAO,CAAEqD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,EACD,MAAO,CAAC,EAEZ,QACI,OAAOgD,EAEnB,EHZI+B,aGe+B,WAAyB,IAAxB/B,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCAClD,OAAQA,EAAOC,MACX,KAAKlD,EACD,MAAO,CAAEmD,SAAS,GAEtB,KAAKlD,EACD,MAAO,CAAEkD,SAAS,EAAO0B,SAAU5B,EAAOG,SAE9C,KAAKlD,EACD,MAAO,CAAEiD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,EACD,MAAO,CAAC,EAEZ,QACI,OAAOgD,EAEnB,EH/BIgC,YGmC8B,WAAmC,IAAlChC,EAAK,uDAAG,CAAEiC,KAAM,CAAC,GAAK/B,EAAM,uCAC3D,OAAQA,EAAOC,MACX,KAAK/C,EACD,OAAO,2BAAK4C,GAAK,IAAEI,SAAS,IAEhC,KAAK/C,EACD,MAAO,CAAE+C,SAAS,EAAO6B,KAAM/B,EAAOG,SAE1C,KAAK/C,EACD,MAAO,CAAE8C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9C,EACD,MAAO,CAAE0E,KAAM,CAAC,GAGpB,QACI,OAAOjC,EAEnB,EHpDIkC,kBGuDoC,WAAyB,IAAxBlC,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCACvD,OAAQA,EAAOC,MACX,KAAK3C,EACD,MAAO,CAAE4C,SAAS,GAEtB,KAAK3C,EACD,MAAO,CAAE2C,SAAS,EAAOY,SAAS,EAAMc,SAAU5B,EAAOG,SAE7D,KAAK3C,EACD,MAAO,CAAE0C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK1C,EACD,MAAO,CAAC,EAEZ,QACI,OAAOqC,EAEnB,EHvEImC,SG0E2B,WAAoC,IAAnCnC,EAAK,uDAAG,CAAEoC,MAAO,IAAMlC,EAAM,uCACzD,OAAQA,EAAOC,MACX,KAAKvC,EACD,MAAO,CAAEwC,SAAS,GAEtB,KAAKvC,EACD,MAAO,CAAEuC,SAAS,EAAOgC,MAAOlC,EAAOG,SAE3C,KAAKvC,EACD,MAAO,CAAEsC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKtC,EACD,MAAO,CAAEqE,MAAO,IAEpB,QACI,OAAOpC,EAEnB,EH1FIqC,WG6F6B,WAAyB,IAAxBrC,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCAChD,OAAQA,EAAOC,MACX,KAAKnC,EACD,MAAO,CAAEoC,SAAS,GAEtB,KAAKnC,GACD,MAAO,CAAEmC,SAAS,EAAOY,SAAS,GAEtC,KAAK9C,GACD,MAAO,CAAEkC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,EAEnB,EH1GIsC,WG6G6B,WAAmC,IAAlCtC,EAAK,uDAAG,CAAEiC,KAAM,CAAC,GAAK/B,EAAM,uCAC1D,OAAQA,EAAOC,MACX,KAAKhC,GACD,MAAO,CAAEiC,SAAS,GAEtB,KAAKhC,GACD,MAAO,CAAEgC,SAAS,EAAOY,SAAS,GAEtC,KAAK3C,GACD,MAAO,CAAE+B,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK/B,GACD,MAAO,CAAE2D,KAAM,CAAC,GAEpB,QACI,OAAOjC,EAEnB,EH5HIuC,YIlB8B,WAAyB,IAAxBvC,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCACjD,OAAQA,EAAOC,MACX,KAAK5B,GACD,MAAO,CACH6B,SAAS,GAGjB,KAAK5B,GACD,MAAO,CACH4B,SAAS,EACTY,SAAS,EACTwB,MAAOtC,EAAOG,SAGtB,KAAK5B,GACD,MAAO,CACH2B,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAK3B,GACD,MAAO,CAAC,EAGZ,QACI,OAAOsB,EAEnB,EJRIyC,aIW+B,WAA6E,IAA5EzC,EAAK,uDAAG,CAAEI,SAAS,EAAMsC,WAAY,GAAIrB,gBAAiB,CAAC,GAAKnB,EAAM,uCACtG,OAAQA,EAAOC,MACX,KAAKxB,GACD,OAAO,2BACAqB,GAAK,IACRI,SAAS,IAGjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACToC,MAAOtC,EAAOG,SAGtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAItB,QACI,OAAOL,EAEnB,EJlCI2C,SIqC2B,WAAyB,IAAxB3C,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCAC9C,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAGjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTY,SAAS,GAGjB,KAAKhC,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKpB,GACD,MAAO,CAAC,EAEZ,QACI,OAAOe,EAEnB,EJ7DI4C,YI4F8B,WAAqC,IAApC5C,EAAK,uDAAG,CAAE6C,OAAQ,IAAM3C,EAAM,uCAC7D,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAGjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTyC,OAAQ3C,EAAOG,SAGvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKhB,GACD,MAAO,CACHwD,OAAQ,IAGhB,QACI,OAAO7C,EAEnB,EJtHI8C,UI0H4B,WAAqC,IAApC9C,EAAK,uDAAG,CAAE6C,OAAQ,IAAM3C,EAAM,uCAC3D,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CACHc,SAAS,GAGjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTyC,OAAQ3C,EAAOG,SAGvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,EAEnB,EJ9II+C,aI8D+B,WAAyB,IAAxB/C,EAAK,uDAAG,CAAC,EAAGE,EAAM,uCAClD,OAAQA,EAAOC,MACX,KAAKV,GACD,MAAO,CACHW,SAAS,GAGjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTY,SAAS,GAGjB,KAAKrB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKT,GACD,MAAO,CAAC,EAEZ,QACI,OAAOI,EAEnB,IJnFMgD,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAO7CI,GAAe,CACjBnC,KAAM,CACFC,UAAW4B,GACX3B,gBAP2B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,CAAC,GAQvDrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAKLC,GAHDC,sBAAY7D,GAASyD,GAC/BK,8BAAoBC,kBAAe,aAAIL,M,oHKxC5BM,OArCf,WAEI,MAA8BC,mBAAS,IAAG,oBAAnCC,EAAO,KAAEC,EAAU,KAEtBC,EAAUC,eAUd,OACI,gBAACC,GAAA,EAAI,CAACC,SATY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAK,aAAD,OAAcR,EAAO,YAEjCE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,UAEnD,EAEmCC,QAAM,YACjC,eAACP,GAAA,EAAKQ,QAAO,CAEbC,YAAY,SACRzE,KAAK,OACL0E,KAAK,IACLC,SAAU,SAACT,GAAC,OAAKL,EAAWK,EAAEU,OAAOC,MAAM,EAC3CC,UAAU,oBAGd,eAACC,GAAA,EAAM,CAEH/E,KAAK,SACLgF,QAAQ,kBACRF,UAAU,MAAK,SAClB,aAKb,E,qCCwFaG,GAAiB,SAACC,GAAE,0DAAK,WAAOC,EAAUC,GAAQ,0FAetD,OAfsD,SAEvDD,EAAS,CACLnF,KAAM/C,IACR,EAIEmI,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMC,IAAI,cAAD,OACdR,EAAE,KAChBG,GACH,gBAHOM,EAAI,EAAJA,KAKRR,EAAS,CACLnF,KAAM9C,EACNgD,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAM7C,EACN+C,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDApCgC,EAoChC,ECxFcC,OApEf,WAEI,IACQpE,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,SAAS,IAC9CC,SAEFwD,EAAWc,cAMjB,OACI,kCACI,eAACC,GAAA,EAAM,CAACC,GAAG,UAAUnB,QAAQ,OAAOoB,OAAO,KAAKC,kBAAgB,WAC5D,gBAACC,GAAA,EAAS,WACN,eAAC,iBAAa,CAACC,GAAG,IAAG,SACjB,eAACL,GAAA,EAAOM,MAAK,UAAC,aAGlB,eAACN,GAAA,EAAOO,OAAM,CAAC,gBAAc,qBAC7B,gBAACP,GAAA,EAAOQ,SAAQ,CAACxB,GAAG,mBAAkB,UAClC,eAAC,GAAS,IAEV,gBAACyB,GAAA,EAAG,CAAC7B,UAAU,UAAS,UAEpB,eAAC,iBAAa,CAACyB,GAAG,QAAO,SACrB,gBAACI,GAAA,EAAIC,KAAI,WAAE,oBAAG9B,UAAU,yBAA2B,YAGtDnD,EACG,eAACkF,GAAA,EAAW,CAACC,MAAOnF,EAAS+C,KAAMQ,GAAG,WAAU,SAG5C,eAAC2B,GAAA,EAAYE,KAAI,CAACC,QA1B5B,WAClB7B,GD8DoB,SAACA,GACzBrC,aAAamE,WAAW,YACxB9B,EAAS,CAAEnF,KAAMnD,IACjBsI,EAAS,CAAEnF,KAAM5C,IACjB+H,EAAS,CAAEnF,KAAMd,KACjBiG,EAAS,CAAEnF,KAAMpC,GACrB,GCnEI,EAwByE,SAAC,aAI1C,eAAC,iBAAa,CAAC2I,GAAG,SAAQ,SACtB,gBAACI,GAAA,EAAIC,KAAI,WAAC,oBAAG9B,UAAU,gBAAkB,aAKpDnD,GAAYA,EAASuF,SAClB,gBAACL,GAAA,EAAW,CAACC,MAAM,QAAQ5B,GAAG,aAAY,UAEtC,eAAC,iBAAa,CAACqB,GAAG,kBAAiB,SAC/B,eAACM,GAAA,EAAYE,KAAI,UAAC,YAItB,eAAC,iBAAa,CAACR,GAAG,qBAAoB,SAClC,eAACM,GAAA,EAAYE,KAAI,UAAC,4BAc1D,E,mBC1DeI,OAZf,WACI,OACI,kCACI,eAACb,GAAA,EAAS,UACN,eAACc,GAAA,EAAG,UACA,eAACC,GAAA,EAAG,CAACvC,UAAU,mBAAkB,SAAC,iCAKtD,E,UCeewC,OAxBf,SAAiB,GAAuB,IAArB5G,EAAO,EAAPA,QAIf,OAJgC,EAAR6G,SAKpB,gBAACC,GAAA,EAAI,CAAC1C,UAAU,gCAA+B,UAC3C,eAAC,QAAI,CAACyB,GAAE,mBAAc7F,EAAQ+G,KAAM,SAChC,eAACD,GAAA,EAAKE,IAAG,CAAC5C,UAAU,gBAAgB6C,IAAKjH,EAAQkH,UAErD,gBAACJ,GAAA,EAAKK,KAAI,WACN,eAAC,QAAI,CAACtB,GAAE,mBAAc7F,EAAQ+G,KAAM,SAChC,eAACD,GAAA,EAAKM,MAAK,CAACC,GAAG,MAAK,SAChB,kCAASrH,EAAQgE,WAGzB,gBAAC8C,GAAA,EAAKQ,KAAI,CAACD,GAAG,MAAK,UACdrH,EAAQuH,YAAYC,MAAM,EAAG,IAAI,SAEtC,gBAACV,GAAA,EAAKQ,KAAI,CAACD,GAAG,KAAI,UAAC,MAAIrH,EAAQyH,cAI/C,E,UCNeC,OAjBf,WACI,OACI,eAACC,GAAA,EAAO,CACJC,UAAU,SACVC,KAAK,SACLC,MAAO,CACHC,OAAQ,QACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SACX,SAEF,uBAAM9D,UAAU,UAAS,SAAC,gBAGtC,E,UCPe+D,OARf,SAAiB,GAAwB,IAAtB7D,EAAO,EAAPA,QAAS8D,EAAQ,EAARA,SACxB,OACI,eAACC,GAAA,EAAK,CAAC/D,QAASA,EAAQ,SACnB8D,GAGb,E,OCkBeE,I,SCKFC,GAAe,WAAH,IAAIrF,EAAO,uDAAG,GAAE,0DAAK,WAAOuB,GAAQ,oFAEb,OAFa,SAErDA,EAAS,CAAEnF,KAAM5E,IAAuB,SAEjBqK,KAAMC,IAAI,gBAAD,OAAiB9B,IAAU,gBAAnD+B,EAAI,EAAJA,KACRpF,QAAQC,IAAI,iBACZD,QAAQC,IAAImF,GASZR,EAAS,CACLnF,KAAM3E,EACN6E,QAASyF,IACX,kDAGFpF,QAAQC,IAAI,iBACZD,QAAQC,IAAI,EAAD,IACX2E,EAAS,CACLnF,KAAM1E,EACN4E,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,mDA9BwC,EA8BxC,EA0CYoD,GAAqB,SAAChE,GAAE,0DAAK,WAAOC,GAAQ,oFAEN,OAFM,SAEjDA,EAAS,CAAEnF,KAAMzE,IAA0B,SAEpBkK,KAAMC,IAAI,iBAAD,OAAkBR,IAAK,gBAA/CS,EAAI,EAAJA,KAERR,EAAS,CACLnF,KAAMxE,EACN0E,QAASyF,IACX,gDAGFR,EAAS,CACLnF,KAAMvE,EACNyE,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,yDAET,mDAnBoC,EAmBpC,EC6BcqD,OA7If,SAAoB,GAAc,IAAZrF,EAAO,EAAPA,QACpB,EAA0BH,oBAAS,GAAM,oBAAlCyF,EAAK,KAAEC,EAAQ,KAChBlE,EAAWc,cACXrG,EAAcoG,aAAY,SAACnG,GAAK,OAAKA,EAAMD,WAAW,IACtDU,EAAkB0F,aAAY,SAACnG,GAAK,OAAKA,EAAMS,eAAe,IAC9DgJ,EAAOtD,aAAY,SAACnG,GAAK,OAAKA,CAAK,IACzCU,QAAQC,IAAI8I,GACZ,MAAkDF,EAC9C9I,EACAV,EAFIS,EAAK,EAALA,MAAOJ,EAAO,EAAPA,QAASH,EAAQ,EAARA,SAKpB8D,GALkC,EAAJzD,KAAW,EAALC,MAK1B0D,EAAQO,SAASkF,QAC/BhJ,QAAQC,IAAI,sBACZD,QAAQC,IAAIoD,GAGZ,MAA8BD,oBAAS,GAAM,oBAAtC6F,EAAO,KAAEC,EAAU,KACpBC,EAAYC,iBAAO,IAEzB,EAAgChG,mBAAS,IAAG,oBAArC4D,EAAQ,KAAEqC,EAAW,KACxBC,EAAU,GACd,EAAoBlG,mBAAS7D,GAAS,oBAA/BgK,EAAE,KAAEC,EAAK,KAGhB,EAAwBpG,mBAAS/D,EAAYE,UAAS,oBAAzCkK,GAAF,KAAS,MACpBC,qBAAU,WAERP,EAAUQ,QAAUJ,EAMpB3E,EAAS8D,GAAarF,GAExB,GAAG,CAACuB,EAAUvB,EAAS2D,EAAUmC,EAAWI,IAM5C,IAAMK,EAAiB,WACrB5J,QAAQC,IAAI,oBACZD,QAAQC,IAAIqJ,GACZ1E,EDQgC,SAACoC,GAAQ,0DAAK,WAAOpC,GAAQ,sFAEX,OAFW,SAEzDA,EAAS,CAAEnF,KAAM,6BAA6B,SAEvByF,KAAMC,IAAI,iBAAgB,gBAAzCC,EAAI,EAAJA,KACRpF,QAAQC,IAAI,iCACZD,QAAQC,IAAImF,GACRyE,EAAO,CACPjK,KAAK,EACLC,MAAM,EACNN,SAAS,IAEbS,QAAQC,IAAI,mBACZD,QAAQC,IAAI+G,GACX6C,EAAKtK,SAAW6F,EAAK7F,SAAS0B,QAAO,SAAA0C,GAClC,OAAOA,EAAEqD,WAAaA,CAC1B,IACAhH,QAAQC,IAAI4J,GAGZjF,EAAS,CACLnF,KAAM,2BACNE,QAASkK,IACX,kDAGF7J,QAAQC,IAAI,iBACZD,QAAQC,IAAI,EAAD,IACX2E,EAAS,CACLnF,KAAM,wBACNE,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,mDAnC4C,EAmC5C,CC3CYuE,CAAqBR,IAE9BR,GAAS,GAET,IAAIiB,EAAUxK,EAAS0B,QAAO,SAAC+I,GAG7B,OAAOA,EAAEhD,WAAaA,CACxB,IACAwC,EAAMO,GACNN,EAAQM,GAIRZ,EAAUQ,QAAUI,CAEtB,EAEA,OACE,uBAAK9B,MAAO,CAAC,EAAE,UACb,uBAAKA,MAAO,CAAEI,QAAS,OAAQ,cAAe,UAAW,UACvD,uBACE9D,UAAU,oBACV0D,MAAO,CACLgC,SAAU,WACVC,KAAM,MACNC,IAAK,QACL,YAAa,OACb,cAAe,YACfC,OAAQ,UACR/B,QAAS,OACTgC,cAAe,UAEjBC,aAAc,kBAAMpB,GAAW,EAAK,EACpCqB,aAAc,kBAAMrB,GAAW,EAAM,EAAC,UAEtC,kCAAM,aAEJ,eAAC,KAAa,OAEfD,GACC,iCACE,sBACExC,QAAS,WACP6C,EAAU,UACVD,EAAY,WACZO,GACF,EAAE,SACH,YAGD,sBACEnD,QAAS,WACP6C,EAAU,OAEVD,EAAY,QACZO,GACF,EAAE,SACH,SACD,sBACAnD,QAAS,WACP4C,EAAY,QACZO,GACF,EAAE,SACD,WACD,sBACAnD,QAAS,WACP4C,EAAY,QACZO,GACF,EAAE,SACD,iBAIP,8BAAI,uBAELlK,EACC,eAAC,GAAM,IACLI,EACF,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAE3B,+BACE,eAAC+G,GAAA,EAAG,CAAC2D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGrG,UAAU,MAAK,SACpDhF,EAASyB,KAAI,SAACb,GAAO,OACpB,eAAC2G,GAAA,EAAG,CAAmB0D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,SACvD,eAAC,GAAO,CAACzK,QAASA,EAAS6G,SAAUA,KAD7B7G,EAAQ+G,IAEZ,UAQpB,E,oBClCe2D,OA5Gf,SAAuB,GAAqB,IAAnBC,EAAK,EAALA,MAAOvH,EAAO,EAAPA,QAC5B,EAAsBH,mBAAS,GAAE,oBAA1B2H,EAAG,KAAEC,EAAM,KAEZpG,EAAWc,cAEXxF,EAAiBuF,aAAY,SAAAnG,GAAK,OAAIA,EAAMY,cAAc,IACxDR,EAA4BQ,EAA5BR,QAASI,EAAmBI,EAAnBJ,MAAOK,EAAYD,EAAZC,QAUxB,OARAuJ,qBAAU,WACN9E,EAAS+D,GAAmBmC,EAAMG,OAAOtG,IAE7C,GAAG,CAACC,EAAUkG,IAMV,iCACI,eAAC,QAAI,CAAC9E,GAAG,IAAIzB,UAAU,uBAAsB,SAAC,YAC7C7E,EACG,eAAC,GAAM,IACLI,EACI,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAEzB,+BACI,gBAAC+G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,eAACQ,GAAA,EAAK,CAAC9D,IAAKjH,EAAQkH,MAAO8D,IAAKhL,EAAQgE,KAAMiH,OAAK,MAIvD,eAACtE,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,gBAACW,GAAA,EAAS,CAAC5G,QAAQ,QAAO,UACtB,eAAC4G,GAAA,EAAU7E,KAAI,UACX,8BAAKrG,EAAQgE,SAKjB,gBAACkH,GAAA,EAAU7E,KAAI,WAAC,aACDrG,EAAQyH,SAGvB,gBAACyD,GAAA,EAAU7E,KAAI,WAAC,gBACErG,EAAQuH,oBAMlC,eAACZ,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,eAACzD,GAAA,EAAI,UACD,gBAACoE,GAAA,EAAS,CAAC5G,QAAQ,QAAO,UACtB,eAAC4G,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,WACL,eAACA,GAAA,EAAG,UACA,oCAAQ,MAAI3G,EAAQyH,gBAIhC,eAACyD,GAAA,EAAU7E,KAAI,UACf,gBAACK,GAAA,EAAG,WACI,eAACC,GAAA,EAAG,UAAC,YACL,eAACA,GAAA,EAAG,UACH3G,EAAQmL,aAAe,EACvBnL,EAAQmL,cAAgB,EAAC,eACdnL,EAAQmL,aAAY,SAC5B,WACA,uBAAMrD,MAAO,CAACsD,MAAO,MAAOC,WAAY,QAAQ,SAAC,wBAM5DrL,EAAQmL,aAAe,GACxB,eAACD,GAAA,EAAU7E,KAAI,UAAC,gBAACK,GAAA,EAAG,WAChB,eAACC,GAAA,EAAG,UAAC,QACL,gBAACA,GAAA,EAAG,CAAC0D,GAAG,OAAOjG,UAAU,OAAM,UAC3B,eAACC,GAAA,EAAM,CAACC,QAAQ,SAASwD,MAAO,CAAEwD,QAAS,YAAchF,QAAS,kBAAMuE,EAAOU,KAAKC,IAAIZ,EAAM,EAAG,GAAG,EAAC,SAAC,MACtG,uBAAMxG,UAAU,OAAM,SAAEwG,IACxB,eAACvG,GAAA,EAAM,CAACC,QAAQ,UAAUwD,MAAO,CAAEwD,QAAS,YAAchF,QAAS,kBAAMuE,EAAOU,KAAKE,IAAIb,EAAM,EAAGW,KAAKE,IAAI,EAAGzL,EAAQmL,eAAe,EAAC,SAAC,cAGvI,eAACD,GAAA,EAAU7E,KAAI,UACnB,eAAChC,GAAA,EAAM,CAACC,QAAQ,OACZgC,QAzEvB,WACrBlD,EAAQM,KAAK,SAAD,OAAUiH,EAAMG,OAAOtG,GAAE,gBAAQoG,GACjD,EAwEgDxG,UAAU,YACVsH,SAAkC,GAAxB1L,EAAQmL,aAClB7L,KAAK,SAAQ,SAAC,gCAiBlE,ECxGaqM,GAAY,SAACnH,EAAIoG,GAAG,0DAAK,WAAOnG,EAAUC,GAAQ,oGACpCK,KAAMC,IAAI,iBAAD,OAAkBR,IAAK,gBAA/CS,EAAI,EAAJA,KAERR,EAAS,CACLnF,KAAM3D,EACN6D,QAAS,CACLQ,QAASiF,EAAK8B,IACd/C,KAAMiB,EAAKjB,KACXkD,MAAOjC,EAAKiC,MACZO,MAAOxC,EAAKwC,MACZ0D,aAAclG,EAAKkG,aACnBP,SAGRxI,aAAawJ,QAAQ,YAAatJ,KAAKuJ,UAAUnH,IAAWpE,KAAKC,YAAW,2CAC/E,qDAfgC,EAehC,EC6EcuL,OA/Ff,SAAoB,GAA+B,IAA7BnB,EAAK,EAALA,MAAOhH,EAAQ,EAARA,SAAUP,EAAO,EAAPA,QAC7B2I,EAAYpB,EAAMG,OAAOtG,GACzBoG,EAAMjH,EAASkF,OAASmD,OAAOrI,EAASkF,OAAOoD,MAAM,KAAK,IAAM,EAChExH,EAAWc,cAGThF,EADK+E,aAAY,SAAAnG,GAAK,OAAIA,EAAMmB,IAAI,IACpCC,UAERgJ,qBAAU,WACFwC,GACAtH,EAASkH,GAAUI,EAAWnB,GAEtC,GAAG,CAACnG,EAAUsH,EAAWnB,IAGzB,IAAMsB,EAAwB,SAAC1H,GAC3BC,EDMsB,SAACD,GAAE,OAAK,SAACC,EAAUC,GAC7CD,EAAS,CACLnF,KAAM1D,EACN4D,QAASgF,IAGbpC,aAAawJ,QAAQ,YAAatJ,KAAKuJ,UAAUnH,IAAWpE,KAAKC,WACrE,CAAC,CCbgB4L,CAAe3H,GAC5B,EAMA,OACI,gBAACkC,GAAA,EAAG,WACA,gBAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,UACP,8BAAI,kBACkB,IAArBhK,EAAU6L,OACP,gBAAC,GAAO,CAAC9H,QAAQ,OAAM,UAAC,sBACD,eAAC,QAAI,CAACuB,GAAG,IAAG,SAAC,eAGpC,eAACqF,GAAA,EAAS,CAAC5G,QAAQ,QAAO,SACzB/D,EAAUM,KAAI,SAAAJ,GAAI,OACjB,eAACyK,GAAA,EAAU7E,KAAI,UACb,gBAACK,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACT,eAACQ,GAAA,EAAK,CAAC9D,IAAKxG,EAAKyG,MAAO8D,IAAKvK,EAAKuD,KAAMiH,OAAK,EAACoB,SAAO,MAEvD,eAAC1F,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACT,eAAC,QAAI,CAAC1E,GAAE,mBAAcpF,EAAKT,SAAU,SAAES,EAAKuD,SAE9C,gBAAC2C,GAAA,EAAG,CAAC4D,GAAI,EAAE,UAAC,KACP9J,EAAKgH,SAEV,gBAACd,GAAA,EAAG,CAAC4D,GAAI,EAAE,UACT,eAAClG,GAAA,EAAM,CAACC,QAAQ,SAASwD,MAAO,CAAEwD,QAAS,YAAchF,QAAS,kBAAM7B,EAASkH,GAAUlL,EAAKT,QAASuL,KAAKC,IAAI/K,EAAKmK,IAAM,EAAG,IAAI,EAAC,SAAC,MACtI,uBAAMxG,UAAU,OAAM,SAAE3D,EAAKmK,MAC7B,eAACvG,GAAA,EAAM,CAACC,QAAQ,UAASwD,MAAO,CAAEwD,QAAS,YAAehF,QAAS,kBAAM7B,EAASkH,GAAUlL,EAAKT,QAASuL,KAAKE,IAAIhL,EAAKmK,IAAM,EAAInK,EAAK0K,aAAe,EAAI1K,EAAK0K,aAAe,IAAK,EAAC,SAAC,SAEvL,eAACxE,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACT,eAAClG,GAAA,EAAM,CACL/E,KAAK,SACLgF,QAAQ,QACRgC,QAAS,kBAAM4F,EAAsBzL,EAAKT,QAAQ,EAAC,SAEnD,oBAAGoE,UAAU,yBAtBA3D,EAAKT,QA0BT,SAM3B,eAAC2G,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,gBAACzD,GAAA,EAAI,WACD,eAACoE,GAAA,EAAS,CAAC5G,QAAQ,QAAO,SACtB,gBAAC4G,GAAA,EAAU7E,KAAI,WACX,gCAAI,aAAW9F,EAAU+L,QAAO,SAACC,EAAK9L,GAAI,OAAK8L,EAAM9L,EAAKmK,GAAG,GAAE,GAAG,aAAY,MAC1ErK,EAAU+L,QAAO,SAACC,EAAK9L,GAAI,OAAK8L,EAAM9L,EAAKmK,IAAMnK,EAAKgH,KAAK,GAAE,GAAG+E,QAAQ,QAIpF,eAACtB,GAAA,EAAU7E,KAAI,UACX,eAAChC,GAAA,EAAM,CACH/E,KAAK,SACL8E,UAAU,YACVsH,SAA+B,IAArBnL,EAAU6L,OACpB9F,QA7DA,WACpBlD,EAAQM,KAAK,2BACjB,EA2DiD,SAC5B,iCAYzB,ECrFe+I,OAZf,SAAuB,GAAe,IAAbrE,EAAQ,EAARA,SACrB,OACI,eAACxC,GAAA,EAAS,UACN,eAACc,GAAA,EAAG,CAACtC,UAAU,4BAA2B,SACtC,eAACuC,GAAA,EAAG,CAAC0D,GAAI,GAAIE,GAAI,EAAE,SACdnC,OAKrB,ECkEesE,OAtEf,SAAqB,GAAwB,IAAtB/I,EAAQ,EAARA,SAAUP,EAAO,EAAPA,QAC7B,EAA0BH,mBAAS,IAAG,oBAA/B0J,EAAK,KAAEC,EAAQ,KACtB,EAAgC3J,mBAAS,IAAG,oBAArC4J,EAAQ,KAAEC,EAAW,KAEtBrI,EAAWc,cAEXwH,EAAWpJ,EAASkF,OAASlF,EAASkF,OAAOoD,MAAM,KAAK,GAAK,IAE7DjL,EAAYsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,SAAS,IAC9CrB,EAA6BqB,EAA7BrB,MAAOJ,EAAsByB,EAAtBzB,QAAS0B,EAAaD,EAAbC,SAaxB,OAXAsI,qBAAU,WACFtI,GACAmC,EAAQM,KAAKqJ,EAErB,GAAG,CAAC3J,EAASnC,EAAU8L,IAQnB,gBAAC,GAAa,WACV,8BAAI,WACHpN,GAAS,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IACpCJ,GAAW,eAAC,GAAM,IACnB,gBAAC+D,GAAA,EAAI,CAACC,SAVQ,SAACC,GACnBA,EAAEC,iBACFgB,Ebaa,SAACkI,EAAOE,GAAQ,0DAAK,WAAOpI,GAAQ,sFAUhD,OAVgD,SAEjDA,EAAS,CACLnF,KAAMtD,IAGJ2I,EAAS,CACXC,QAAS,CACL,eAAgB,qBAEvB,SAEsBG,KAAMiI,KACzB,oBACA,CAAE,SAAYL,EAAO,SAAYE,GACjClI,GACH,gBAJOM,EAAI,EAAJA,KAMRR,EAAS,CACLnF,KAAMrD,EACNuD,QAASyF,IAGb7C,aAAawJ,QAAQ,WAAYtJ,KAAKuJ,UAAU5G,IAAM,kDAGtDR,EAAS,CACLnF,KAAMpD,EACNsD,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,mDAjCoC,EAiCpC,Ca9CgB6H,CAAMN,EAAOE,GAC1B,EAOsC,UAE1B,gBAACvJ,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,kBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CAACuJ,UAAQ,EAClB/N,KAAK,QACLyE,YAAY,cACZI,MAAOwI,EACP1I,SAAU,SAACT,GAAC,OAAKoJ,EAASpJ,EAAEU,OAAOC,MAAM,OAMjD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,aACZ,eAAC9J,GAAA,EAAKQ,QAAO,CAACuJ,UAAQ,EAClB/N,KAAK,WACLyE,YAAY,iBACZI,MAAO0I,EACP5I,SAAU,SAACT,GAAC,OAAKsJ,EAAYtJ,EAAEU,OAAOC,MAAM,OAKpD,eAACE,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,cAK5C,eAACoC,GAAA,EAAG,CAACtC,UAAU,OAAM,SACjB,gBAACuC,GAAA,EAAG,WAAC,iBACa,eAAC,QAAI,CACfd,GAAIkH,EAAQ,6BAAyBA,GAAa,YAAY,SAAC,oBAQvF,ECsCeO,OA1Gf,SAAwB,GAAwB,IAAtB3J,EAAQ,EAARA,SAAUP,EAAO,EAAPA,QAEhC,EAAwBH,mBAAS,IAAG,oBAA7Be,EAAI,KAAEuJ,EAAO,KACpB,EAA0BtK,mBAAS,IAAG,oBAA/B0J,EAAK,KAAEC,EAAQ,KACtB,EAAgC3J,mBAAS,IAAG,oBAArC4J,EAAQ,KAAEC,EAAW,KAC5B,EAA8C7J,mBAAS,IAAG,oBAAnDuK,EAAe,KAAEC,EAAkB,KAC1C,EAA8BxK,mBAAS,IAAG,oBAAnCmC,EAAO,KAAEsI,EAAU,KAEpBjJ,EAAWc,cAEXwH,EAAWpJ,EAASkF,OAASlF,EAASkF,OAAOoD,MAAM,KAAK,GAAK,IAE7D/K,EAAeoE,aAAY,SAAAnG,GAAK,OAAIA,EAAM+B,YAAY,IACpDvB,EAA6BuB,EAA7BvB,MAAOJ,EAAsB2B,EAAtB3B,QAAS0B,EAAaC,EAAbD,SAmBxB,OAjBAsI,qBAAU,WACFtI,GACAmC,EAAQM,KAAKqJ,EAErB,GAAG,CAAC3J,EAASnC,EAAU8L,IAcnB,gBAAC,GAAa,WACV,8BAAI,YACH3H,GAAW,eAAC,GAAO,CAACd,QAAQ,SAAQ,SAAEc,IACtCzF,GAAS,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IACpCJ,GAAW,eAAC,GAAM,IACnB,gBAAC+D,GAAA,EAAI,CAACC,SAjBQ,SAACC,GACnBA,EAAEC,iBAEEoJ,GAAYW,EACZE,EAAW,0BAEXjJ,EdiDY,SAACT,EAAM2I,EAAOE,GAAQ,0DAAK,WAAOpI,GAAQ,sFAUzD,OAVyD,SAE1DA,EAAS,CACLnF,KAAMlD,IAGJuI,EAAS,CACXC,QAAS,CACL,eAAgB,qBAEvB,SAEsBG,KAAMiI,KACzB,uBACA,CAAE,KAAQhJ,EAAM,MAAS2I,EAAO,SAAYE,GAC5ClI,GACH,gBAJOM,EAAI,EAAJA,KAMRR,EAAS,CACLnF,KAAMjD,EACNmD,QAASyF,IAGbR,EAAS,CACLnF,KAAMrD,EACNuD,QAASyF,IAGb7C,aAAawJ,QAAQ,WAAYtJ,KAAKuJ,UAAU5G,IAAM,kDAGtDR,EAAS,CACLnF,KAAMhD,EACNkD,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,mDAtC6C,EAsC7C,CcvFoBuI,CAAS3J,EAAM2I,EAAOE,GAGvC,EAQsC,UAE1B,gBAACvJ,GAAA,EAAK4J,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,SACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,OACLyE,YAAY,aACZI,MAAOH,EACPC,SAAU,SAACT,GAAC,OAAK+J,EAAQ/J,EAAEU,OAAOC,MAAM,OAKhD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,kBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,QACLyE,YAAY,cACZI,MAAOwI,EACP1I,SAAU,SAACT,GAAC,OAAKoJ,EAASpJ,EAAEU,OAAOC,MAAM,OAKjD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,aACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,WACLyE,YAAY,iBACZI,MAAO0I,EACP5I,SAAU,SAACT,GAAC,OAAKsJ,EAAYtJ,EAAEU,OAAOC,MAAM,OAKpD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,qBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,WACLyE,YAAY,mBACZI,MAAOqJ,EACPvJ,SAAU,SAACT,GAAC,OAAKiK,EAAmBjK,EAAEU,OAAOC,MAAM,OAK3D,eAACE,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,gBAM5C,eAACoC,GAAA,EAAG,CAACtC,UAAU,OAAM,SACjB,gBAACuC,GAAA,EAAG,WAAC,oBACgB,eAAC,QAAI,CAClBd,GAAIkH,EAAQ,0BAAsBA,GAAa,SAAS,SAAC,kBAOjF,E,UC4Dea,OAlKf,SAAuB,GAAc,IAAZxK,EAAO,EAAPA,QAErB,EAAwBH,mBAAS,IAAG,oBAA7Be,EAAI,KAAEuJ,EAAO,KACpB,EAA0BtK,mBAAS,IAAG,oBAA/B0J,EAAK,KAAEC,EAAQ,KACtB,EAAgC3J,mBAAS,IAAG,oBAArC4J,EAAQ,KAAEC,EAAW,KAC5B,EAA8C7J,mBAAS,IAAG,oBAAnDuK,EAAe,KAAEC,EAAkB,KAC1C,EAA8BxK,mBAAS,IAAG,oBAAnCmC,EAAO,KAAEsI,EAAU,KAEpBjJ,EAAWc,cAEXpE,EAAcmE,aAAY,SAAAnG,GAAK,OAAIA,EAAMgC,WAAW,IAClDxB,EAAyBwB,EAAzBxB,MAAOJ,EAAkB4B,EAAlB5B,QAAS6B,EAASD,EAATC,KAGhBH,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,SAAS,IAC9CC,SAGAd,EADkBmF,aAAY,SAAAnG,GAAK,OAAIA,EAAMkC,iBAAiB,IAC9DlB,QAEF4B,EAAcuD,aAAY,SAAAnG,GAAK,OAAIA,EAAM4C,WAAW,IACzC8L,EAA8C9L,EAAvDxC,QAA+BuO,EAAwB/L,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAkCpD,OA/BAuH,qBAAU,WACDtI,EAGIG,GAASA,EAAK4C,OAAQ7D,GAAWc,EAAS8F,MAAQ3F,EAAK2F,KAKxDwG,EAAQnM,EAAK4C,MACb4I,EAASxL,EAAKuL,SALdlI,EAAS,CAAEnF,KAAMxC,IACjB2H,EAASF,GAAe,YACxBE,ECgKS,mDAAS,WAAOA,EAAUC,GAAQ,0FAelD,OAfkD,SAEnDD,EAAS,CACLnF,KAAMjB,KACR,EAIEqG,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMC,IAAI,wBAE7BL,GACH,gBAHOM,EAAI,EAAJA,KAKRR,EAAS,CACLnF,KAAMhB,GACNkB,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMf,GACNiB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDApCwB,KDrKbhC,EAAQM,KAAK,SAWrB,GAAG,CAACe,EAAUrB,EAASnC,EAAUG,EAAMjB,IAmBnC,gBAACuG,GAAA,EAAG,WACA,gBAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,UACP,8BAAI,iBAEHnF,GAAW,eAAC,GAAO,CAACd,QAAQ,SAAQ,SAAEc,IACtCzF,GAAS,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IACpCJ,GAAW,eAAC,GAAM,IACnB,gBAAC+D,GAAA,EAAI,CAACC,SAxBI,SAACC,GACnBA,EAAEC,iBAEEoJ,GAAYW,EACZE,EAAW,2BAEXjJ,Ef+GqB,SAACrD,GAAI,0DAAK,WAAOqD,EAAUC,GAAQ,0FAe3D,OAf2D,SAE5DD,EAAS,CACLnF,KAAM3C,IACR,EAIE+H,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMgJ,IAAI,6BAE7B3M,EACAuD,GACH,gBAJOM,EAAI,EAAJA,KAMRR,EAAS,CACLnF,KAAM1C,EACN4C,QAASyF,IAGbR,EAAS,CACLnF,KAAMrD,EACNuD,QAASyF,IAGb7C,aAAawJ,QAAQ,WAAYtJ,KAAKuJ,UAAU5G,IAAM,kDAGtDR,EAAS,CACLnF,KAAMzC,EACN2C,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDA3CqC,EA2CrC,Ce1JoB4I,CAAkB,CACvB,GAAM5M,EAAK2F,IACX,KAAQ/C,EACR,MAAS2I,EACT,SAAYE,KAEhBa,EAAW,IAGnB,EAS0C,UAE1B,gBAACpK,GAAA,EAAK4J,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,SACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,OACLyE,YAAY,aACZI,MAAOH,EACPC,SAAU,SAACT,GAAC,OAAK+J,EAAQ/J,EAAEU,OAAOC,MAAM,OAKhD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,kBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,QACLyE,YAAY,cACZI,MAAOwI,EACP1I,SAAU,SAACT,GAAC,OAAKoJ,EAASpJ,EAAEU,OAAOC,MAAM,OAKjD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,aACZ,eAAC9J,GAAA,EAAKQ,QAAO,CAETxE,KAAK,WACLyE,YAAY,iBACZI,MAAO0I,EACP5I,SAAU,SAACT,GAAC,OAAKsJ,EAAYtJ,EAAEU,OAAOC,MAAM,OAKpD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,qBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CAETxE,KAAK,WACLyE,YAAY,mBACZI,MAAOqJ,EACPvJ,SAAU,SAACT,GAAC,OAAKiK,EAAmBjK,EAAEU,OAAOC,MAAM,OAK3D,eAACE,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,iBAOhD,gBAACqC,GAAA,EAAG,CAAC4D,GAAI,EAAE,UACP,8BAAI,cACHsD,EACG,eAAC,GAAM,IACPC,EACA,eAAC,GAAO,CAACxJ,QAAQ,SAAQ,SAAEwJ,IAEnB,gBAACG,GAAA,EAAK,CAACC,SAAO,EAACC,YAAU,EAAC/J,UAAU,WAAU,UAC1C,iCACI,gCACI,8BAAI,OACJ,8BAAI,SACJ,8BAAI,UACJ,8BAAI,SACJ,8BAAI,cACJ,6BAIR,iCACKpC,EAAOnB,KAAI,SAAAc,GAAK,OACb,gCACI,8BAAKA,EAAMoF,MACX,8BAAKpF,EAAMyM,UAAUC,UAAU,EAAG,MAClC,gCAAI,IAAE1M,EAAM2M,cACZ,8BAAK3M,EAAM4M,OAAS5M,EAAM6M,OAAOH,UAAU,EAAG,IAC1C,oBAAGjK,UAAU,eAAe0D,MAAO,CAAEsD,MAAO,WAEhD,8BACI,eAAC,iBAAa,CAACvF,GAAE,iBAAYlE,EAAMoF,KAAM,SACrC,eAAC1C,GAAA,EAAM,CAACD,UAAU,SAAQ,SAAC,kBAT9BzC,EAAMoF,IAYV,cAQ7C,EExHe0H,OA/Cf,SAAuB,GAAiC,IAA/BC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAE1C,OACI,gBAAC5I,GAAA,EAAG,CAAC7B,UAAU,8BAA6B,UACxC,eAAC6B,GAAA,EAAII,KAAI,UACJqI,EACG,eAAC,iBAAa,CAAC7I,GAAG,SAAQ,SACtB,eAACI,GAAA,EAAIC,KAAI,UAAC,YAGV,eAACD,GAAA,EAAIC,KAAI,CAACwF,UAAQ,WAAC,YAI/B,eAACzF,GAAA,EAAII,KAAI,UACJsI,EACG,eAAC,iBAAa,CAAC9I,GAAG,YAAW,SACzB,eAACI,GAAA,EAAIC,KAAI,UAAC,eAGV,eAACD,GAAA,EAAIC,KAAI,CAACwF,UAAQ,WAAC,eAI/B,eAACzF,GAAA,EAAII,KAAI,UACJuI,EACG,eAAC,iBAAa,CAAC/I,GAAG,WAAU,SACxB,eAACI,GAAA,EAAIC,KAAI,UAAC,cAGV,eAACD,GAAA,EAAIC,KAAI,CAACwF,UAAQ,WAAC,cAI/B,eAACzF,GAAA,EAAII,KAAI,UACJwI,EACG,eAAC,iBAAa,CAAChJ,GAAG,cAAa,SAC3B,eAACI,GAAA,EAAIC,KAAI,UAAC,kBAGV,eAACD,GAAA,EAAIC,KAAI,CAACwF,UAAQ,WAAC,oBAK3C,ECsCeoD,OAhFf,SAAwB,GAAc,IAAZ1L,EAAO,EAAPA,QAGd5C,EADK8E,aAAY,SAAAnG,GAAK,OAAIA,EAAMmB,IAAI,IACpCE,gBAEFiE,EAAWc,cAEjB,EAA8BtC,mBAASzC,EAAgBuO,SAAQ,oBAAxDA,EAAO,KAAEC,EAAU,KAC1B,EAAwB/L,mBAASzC,EAAgByO,MAAK,oBAA/CA,EAAI,KAAEC,EAAO,KAEpB,EAA8BjM,mBAASzC,EAAgB2O,SAAQ,oBAAxDA,EAAO,KAAEC,EAAU,KAQ1B,OACI,gBAAC,GAAa,WACV,eAAC,GAAa,CAACV,OAAK,EAACC,OAAK,IAC1B,8BAAI,aACJ,gBAACrL,GAAA,EAAI,CAACC,SAVQ,SAACC,GRoBQ,IAACyB,EQnB5BzB,EAAEC,iBACFgB,GRkB4BQ,EQlBC,CAAE8J,UAASE,OAAME,WRkBT,SAAC1K,GAC1CA,EAAS,CACLnF,KAAMzD,EACN2D,QAASyF,IAGb7C,aAAawJ,QAAQ,kBAAmBtJ,KAAKuJ,UAAU5G,GAC3D,IQxBQ7B,EAAQM,KAAK,WACjB,EAMsC,UAE1B,gBAACJ,GAAA,EAAK4J,MAAK,CAACC,UAAU,UAAS,UAC3B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,YACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,OACLyE,YAAY,gBACZI,MAAO4K,GAAoB,GAC3B9K,SAAU,SAACT,GAAC,OAAKwL,EAAWxL,EAAEU,OAAOC,MAAM,OAKnD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,SACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,OACLyE,YAAY,aACZI,MAAO8K,GAAc,GACrBhL,SAAU,SAACT,GAAC,OAAK0L,EAAQ1L,EAAEU,OAAOC,MAAM,OAiBhD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,UAAS,UAC3B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,YACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTuJ,UAAQ,EACR/N,KAAK,OACLyE,YAAY,gBACZI,MAAOgL,GAAoB,GAC3BlL,SAAU,SAACT,GAAC,OAAK4L,EAAW5L,EAAEU,OAAOC,MAAM,OAKnD,eAACE,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,kBAMxD,EC9Be+K,OAhDf,SAAuB,GAAc,IAAZjM,EAAO,EAAPA,QAGb5C,EADK8E,aAAY,SAAAnG,GAAK,OAAIA,EAAMmB,IAAI,IACpCE,gBAEFiE,EAAWc,cAEjB,EAA0CtC,mBAAS,UAAS,oBAArDlC,EAAa,KAAEuO,EAAgB,KAYtC,OAVK9O,EAAgBuO,SACjB3L,EAAQM,KAAK,aAUb,gBAAC,GAAa,WACV,eAAC,GAAa,CAACgL,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,gBAACtL,GAAA,EAAI,CAACC,SAVQ,SAACC,GT4BM,IAACyB,ES3B1BzB,EAAEC,iBACFgB,GT0B0BQ,ES1BClE,ET0BQ,SAAC0D,GACxCA,EAAS,CACLnF,KAAMxD,EACN0D,QAASyF,IAGb7C,aAAawJ,QAAQ,gBAAiBtJ,KAAKuJ,UAAU5G,GACzD,IShCQ7B,EAAQM,KAAK,cACjB,EAMsC,UAC1B,gBAACJ,GAAA,EAAK4J,MAAK,WACP,eAAC5J,GAAA,EAAK8J,MAAK,CAAC/F,GAAG,SAAQ,SAAC,kBACxB,eAACV,GAAA,EAAG,UACA,eAACrD,GAAA,EAAKiM,MAAK,CACPjQ,KAAK,QACLkQ,MAAM,SACNhL,GAAG,SACHR,KAAK,gBACLyL,SAAO,EACPxL,SAAU,SAACT,GAAC,OAAK8L,EAAiB9L,EAAEU,OAAOC,MAAM,SAO7D,eAACE,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,kBAMxD,E,oBC9BeK,GAtBF,CAET,UCHM,CACN+K,cAAc,mDACdC,UAAU,oDDCSD,cACnB,gBAAmB,aACnB,YAAe,YACf,WAAc,wBACd,aAAgB,CACZE,UAAS,SAAEpQ,GAEPK,QAAQC,IAAIN,EAChB,EAEAqQ,QAAO,SAAElQ,GAELE,QAAQC,IAAIH,EAChB,EACAmQ,QAAO,WACHjQ,QAAQC,IAAI,oBAChB,GAEJ,kBAAqB,CAAC,SAAU,WAAW,iBAAkB,cAAe,QEhBjE,SAASiQ,KACpB,IAAMzP,EAAOgF,aAAY,SAAAnG,GAAK,OAAIA,EAAMmB,IAAI,IACtC0P,EAAW,IAAIC,KAAetL,IAMpC,OACI,yBAAQ2B,QALQ,WAChB0J,EAASE,KAAK,CAACC,OAA0B,IAAlB7P,EAAKgO,YAChC,EAGiC,SAAC,oBAEtC,CCmIe8B,OAzIf,SAA0B,GAAc,IAAZhN,EAAO,EAAPA,QAElB1B,EAAc4D,aAAY,SAAAnG,GAAK,OAAIA,EAAMuC,WAAW,IAClDC,EAA0BD,EAA1BC,MAAOhC,EAAmB+B,EAAnB/B,MAAOQ,EAAYuB,EAAZvB,QAEhBsE,EAAWc,cAEXjF,EAAOgF,aAAY,SAAAnG,GAAK,OAAIA,EAAMmB,IAAI,IA+B5C,OA7BAA,EAAK+P,WAAa/P,EAAKC,UAAU+L,QAAO,SAACC,EAAK9L,GAAI,OAAK8L,EAAM9L,EAAKgH,MAAQhH,EAAKmK,GAAG,GAAE,GAAG4B,QAAQ,GAG/FlM,EAAKgO,WAActC,OAAO1L,EAAK+P,YAAc7D,QAAQ,GAGhDlM,EAAKS,eACNqC,EAAQM,KAAK,YAGjB6F,qBAAU,WACFpJ,IACAiD,EAAQM,KAAK,UAAD,OAAW/B,EAAMoF,MAC7BtC,EAAS,CAAEnF,KAAMzB,KAEzB,GAAG,CAACsC,EAASiD,IAeT,iCACI,eAAC,GAAa,CAACsL,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACnI,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,gBAACW,GAAA,EAAS,CAAC5G,QAAQ,QAAO,UACtB,gBAAC4G,GAAA,EAAU7E,KAAI,WACX,8BAAI,aAEJ,+BACI,kCAAQ,eACP/F,EAAKE,gBAAgBuO,QAAQ,MAAIzO,EAAKE,gBAAgByO,KACtD,KAEA3O,EAAKE,gBAAgB2O,cAI9B,gBAACjE,GAAA,EAAU7E,KAAI,WACX,8BAAI,mBACJ,+BACI,kCAAQ,aACP/F,EAAKS,oBAId,gBAACmK,GAAA,EAAU7E,KAAI,WACX,8BAAI,gBACuB,IAA1B/F,EAAKC,UAAU6L,OAAe,eAAC,GAAO,CAAC9H,QAAQ,OAAM,SAAC,uBAG/C,eAAC4G,GAAA,EAAS,CAAC5G,QAAQ,QAAO,SACrBhE,EAAKC,UAAUM,KAAI,SAACJ,EAAM6P,GAAK,OAC5B,eAACpF,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,eAACQ,GAAA,EAAK,CAAC9D,IAAKxG,EAAKyG,MAAO8D,IAAKvK,EAAKuD,KAAMiH,OAAK,EAACoB,SAAO,MAGzD,eAAC1F,GAAA,EAAG,UACA,eAAC,QAAI,CAACd,GAAE,mBAAcpF,EAAKT,SAAU,SAAES,EAAKuD,SAGhD,gBAAC2C,GAAA,EAAG,CAAC4D,GAAI,EAAE,UACN9J,EAAKmK,IAAI,OAAKnK,EAAKgH,MAAM,QAAMhH,EAAKmK,IAAMnK,EAAKgH,OAAO+E,QAAQ,UAXtD8D,EAcJ,cAU7C,eAAC3J,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,eAACzD,GAAA,EAAI,UACD,gBAACoE,GAAA,EAAS,CAAC5G,QAAQ,QAAO,UACtB,eAAC4G,GAAA,EAAU7E,KAAI,UACX,8BAAI,oBAGR,eAAC6E,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,WACL,gBAACA,GAAA,EAAG,WAAC,KAAGrG,EAAK+P,mBAQrB,eAACnF,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,WACL,gBAACA,GAAA,EAAG,WAAC,KAAGrG,EAAKgO,mBAKrB,eAACpD,GAAA,EAAU7E,KAAI,UACV1G,GAAS,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,MAGzC,eAACuL,GAAA,EAAU7E,KAAI,UACX,eAAC0J,GAAM,kBASvC,E,SC8DeQ,OArMf,SAAqB,GAAqB,IAAnB5F,EAAK,EAALA,MAAOvH,EAAO,EAAPA,QACpBoN,EAAU7F,EAAMG,OAAOtG,GACvBC,EAAWc,cAGjB,EAAgCtC,oBAAS,GAAM,oBAAxCwN,EAAQ,KAAEC,EAAW,KAEtB9O,EAAe0D,aAAY,SAAAnG,GAAK,OAAIA,EAAMyC,YAAY,IACpDD,EAA0BC,EAA1BD,MAAOhC,EAAmBiC,EAAnBjC,MAAOJ,EAAYqC,EAAZrC,QAEhBuC,EAAWwD,aAAY,SAAAnG,GAAK,OAAIA,EAAM2C,QAAQ,IACnC6O,EAAoC7O,EAA7CvC,QAA8BqR,EAAe9O,EAAxB3B,QAEvB+B,EAAeoD,aAAY,SAAAnG,GAAK,OAAIA,EAAM+C,YAAY,IAC3C2O,EAA4C3O,EAArD3C,QAAkCuR,EAAmB5O,EAA5B/B,QAGzBc,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,SAAS,IAC9CC,SAgDR,OA7CK1B,GAAYI,IACbgC,EAAM0O,WAAa1O,EAAME,WAAWyK,QAAO,SAACC,EAAK9L,GAAI,OAAK8L,EAAM9L,EAAKgH,MAAQhH,EAAKmK,GAAG,GAAE,GAAG4B,QAAQ,IAetGjD,qBAAU,WRkCiB,IAAC/E,EQhCnBvD,GACDmC,EAAQM,KAAK,WAGZ/B,GAASiP,GAAcjP,EAAMoF,MAAQiF,OAAOwE,IAAYM,GACzDrM,EAAS,CAAEnF,KAAMlB,KACjBqG,EAAS,CAAEnF,KAAMP,KAEjB0F,GRwBoBD,EQxBKgM,ERwBH,mDAAK,WAAO/L,EAAUC,GAAQ,0FAevD,OAfuD,SAExDD,EAAS,CACLnF,KAAMxB,KACR,EAIE4G,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMC,IAAI,eAAD,OACbR,EAAE,KACjBG,GACH,gBAHOM,EAAI,EAAJA,KAKRR,EAAS,CACLnF,KAAMvB,GACNyB,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMtB,GACNwB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDApCiC,MQvBdzD,EAAM4M,SACTwC,OAAOC,OAGRN,GAAY,GA1BA,WACpB,IAAMO,EAASC,SAASC,cAAc,UACtCF,EAAO3R,KAAO,kBACd2R,EAAOhK,IAAM,2HACbgK,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,EAChB,EACAQ,SAASI,KAAKC,YAAYN,EAC9B,CAeYO,GAKZ,GAAG,CAAC/M,EAAU9C,EAAO6O,EAASI,EAAYE,IAWnCvR,EACH,eAAC,GAAM,IACPI,EACA,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAEnB,iCACI,gCAAI,UAAQgC,EAAM8P,MAClB,gBAAC/K,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,gBAACW,GAAA,EAAS,CAAC5G,QAAQ,QAAO,UACtB,gBAAC4G,GAAA,EAAU7E,KAAI,WACX,8BAAI,aACJ,+BAAG,kCAAQ,WAAe,IAAE1E,EAAMP,KAAK4C,QACvC,+BAAG,kCAAQ,YAAgB,oBAAG0N,KAAI,iBAAY/P,EAAMP,KAAKuL,OAAQ,SAAEhL,EAAMP,KAAKuL,WAC9E,+BACI,kCAAQ,eACPhL,EAAMnB,gBAAgBuO,QAAQ,MAAIpN,EAAMnB,gBAAgByO,KACxD,KACAtN,EAAMnB,gBAAgBmR,WAAW,IACzC,KACQhQ,EAAMnB,gBAAgB2O,WAG1BxN,EAAMiQ,YACH,gBAAC,GAAO,CAACtN,QAAQ,UAAS,UAAC,gBAAc3C,EAAMkQ,eAE3C,eAAC,GAAO,CAACvN,QAAQ,UAAS,SAAC,qBAIvC,gBAAC4G,GAAA,EAAU7E,KAAI,WACX,8BAAI,mBACJ,+BACI,kCAAQ,aACP1E,EAAMZ,iBAEVY,EAAM4M,OACH,gBAAC,GAAO,CAACjK,QAAQ,UAAS,UAAC,WAAS3C,EAAM6M,UAEtC,eAAC,GAAO,CAAClK,QAAQ,UAAS,SAAC,gBAKvC,gBAAC4G,GAAA,EAAU7E,KAAI,WACX,8BAAI,gBACyB,IAA5B1E,EAAME,WAAWuK,OAAe,eAAC,GAAO,CAAC9H,QAAQ,OAAM,SAAC,mBAGjD,eAAC4G,GAAA,EAAS,CAAC5G,QAAQ,QAAO,SACrB3C,EAAME,WAAWhB,KAAI,SAACJ,EAAM6P,GAAK,OAC9B,eAACpF,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,eAACQ,GAAA,EAAK,CAAC9D,IAAKxG,EAAKyG,MAAO8D,IAAKvK,EAAKuD,KAAMiH,OAAK,EAACoB,SAAO,MAGzD,eAAC1F,GAAA,EAAG,UACA,eAAC,QAAI,CAACd,GAAE,mBAAcpF,EAAKT,SAAU,SAAES,EAAKuD,SAGhD,gBAAC2C,GAAA,EAAG,CAAC4D,GAAI,EAAE,UACN9J,EAAKmK,IAAI,OAAKnK,EAAKgH,MAAM,QAAMhH,EAAKmK,IAAMnK,EAAKgH,OAAO+E,QAAQ,UAXtD8D,EAcJ,cAU7C,eAAC3J,GAAA,EAAG,CAAC4D,GAAI,EAAE,SACP,gBAACzD,GAAA,EAAI,WACD,gBAACoE,GAAA,EAAS,CAAC5G,QAAQ,QAAO,UACtB,eAAC4G,GAAA,EAAU7E,KAAI,UACX,8BAAI,oBAGR,eAAC6E,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,WACL,gBAACA,GAAA,EAAG,WAAC,IAAEhF,EAAM0O,mBAKrB,eAACnF,GAAA,EAAU7E,KAAI,UACX,gBAACK,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,WACL,gBAACA,GAAA,EAAG,WAAC,IAAEhF,EAAM2M,oBAKnB3M,EAAM4M,QACJ,gBAACrD,GAAA,EAAU7E,KAAI,WACVsK,GAAc,eAAC,GAAM,IAEpBF,EAGM,eAAC,gBAAY,CACTN,OAAQxO,EAAM2M,WACdsB,UAnHtB,SAACkC,GAC3BrN,ERoDgB,SAACD,EAAIsN,GAAa,0DAAK,WAAOrN,EAAUC,GAAQ,0FAe/D,OAf+D,SAEhED,EAAS,CACLnF,KAAMrB,KACR,EAIEyG,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMgJ,IAAI,eAAD,OACbvJ,EAAE,SACjBsN,EACAnN,GACH,gBAJOM,EAAI,EAAJA,KAMRR,EAAS,CACLnF,KAAMpB,GACNsB,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMnB,GACNqB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDArCyC,EAqCzC,CQzFgB2M,CAASvB,EAASsB,GAC/B,IA6G4C,eAAC,GAAM,UAUtBjB,GAAkB,eAAC,GAAM,IACzB5P,GAAYA,EAASuF,SAAW7E,EAAM4M,SAAW5M,EAAMiQ,aACpD,eAAC1G,GAAA,EAAU7E,KAAI,UACX,eAAChC,GAAA,EAAM,CACH/E,KAAK,SACL8E,UAAU,gBACVkC,QA3HjB,WACnB7B,ERwFoB,SAAC9C,GAAK,0DAAK,WAAO8C,EAAUC,GAAQ,0FAevD,OAfuD,SAExDD,EAAS,CACLnF,KAAMV,KACR,EAIE8F,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMgJ,IAAI,eAAD,OACbpM,EAAMoF,IAAG,aACxB,CAAC,EACDpC,GACH,gBAJOM,EAAI,EAAJA,KAMRR,EAAS,CACLnF,KAAMT,GACNW,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMR,GACNU,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDArCiC,EAqCjC,CQ7HgB4M,CAAarQ,GAC1B,EAyHgE,SAC3B,kCAUzC,ECnHesQ,OAlFf,SAAwB,GAAc,IAAZ7O,EAAO,EAAPA,QAEhBqB,EAAWc,cAEXjE,EAAWgE,aAAY,SAAAnG,GAAK,OAAIA,EAAMmC,QAAQ,IAC5C/B,EAA0B+B,EAA1B/B,QAASI,EAAiB2B,EAAjB3B,MAAO4B,EAAUD,EAAVC,MAGhBN,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,SAAS,IAC9CC,SAGSiR,EADE5M,aAAY,SAAAnG,GAAK,OAAIA,EAAMqC,UAAU,IAChDrB,QAGRoJ,qBAAU,WACFtI,GAAYA,EAASuF,QACrB/B,EzB4LU,mDAAS,WAAOA,EAAUC,GAAQ,0FAe/C,OAf+C,SAEhDD,EAAS,CACLnF,KAAMvC,IACR,EAIE2H,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMC,IAAI,cAE7BL,GACH,gBAHOM,EAAI,EAAJA,KAKRR,EAAS,CACLnF,KAAMtC,EACNwC,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMrC,EACNuC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDApCqB,IyB1LVhC,EAAQM,KAAK,SAGrB,GAAG,CAACe,EAAUrB,EAAS8O,EAAejR,IAGtC,IAAMkR,EAAgB,SAAC3N,GAEfuM,OAAOqB,QAAQ,+CACf3N,EzBwNc,SAACD,GAAE,0DAAK,WAAOC,EAAUC,GAAQ,0FAelD,OAfkD,SAEnDD,EAAS,CACLnF,KAAMnC,IACR,EAIEuH,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMsN,OAAO,qBAAD,OACV7N,EAAE,KACvBG,GACH,gBAHOM,EAAI,EAAJA,KAKRR,EAAS,CACLnF,KAAMlC,GACNoC,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMjC,GACNmC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDApC4B,EAoC5B,CyB5PoBkN,CAAW9N,GAE5B,EAEA,OACI,iCACI,8BAAI,UACHjF,EACM,eAAC,GAAM,IACRI,EACK,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAE1B,gBAACsO,GAAA,EAAK,CAACC,SAAO,EAACqE,UAAQ,EAACC,OAAK,EAACrE,YAAU,EAAC/J,UAAU,WAAU,UACzD,iCACI,gCACI,8BAAI,OACJ,8BAAI,SACJ,8BAAI,UACJ,8BAAI,UACJ,6BAIR,iCACK7C,EAAMV,KAAI,SAAAO,GAAI,OACX,gCACI,8BAAKA,EAAK2F,MACV,8BAAK3F,EAAK4C,OACV,8BAAK5C,EAAKuL,QACV,8BAAKvL,EAAKoF,QACN,oBAAGpC,UAAU,eAAe0D,MAAO,CAAEsD,MAAO,WAExC,oBAAGhH,UAAU,eAAe0D,MAAO,CAAEsD,MAAO,WAGpD,gCACI,eAAC,iBAAa,CAACvF,GAAE,sBAAiBzE,EAAK2F,IAAG,SAAQ,SAC9C,eAAC1C,GAAA,EAAM,CAACC,QAAQ,QAAQF,UAAU,SAAQ,SACtC,oBAAGA,UAAU,oBAIrB,eAACC,GAAA,EAAM,CAACC,QAAQ,SAASF,UAAU,SAASkC,QAAS,kBAAM6L,EAAc/Q,EAAK2F,IAAI,EAAC,SAC/E,oBAAG3C,UAAU,wBAlBhBhD,EAAK2F,IAqBT,WAOzC,ECsBe0L,OApGf,SAAwB,GAAqB,IAAnB9H,EAAK,EAALA,MAAOvH,EAAO,EAAPA,QAEvBsP,EAAS/H,EAAMG,OAAOtG,GAE5B,EAAwBvB,mBAAS,IAAG,oBAA7Be,EAAI,KAAEuJ,EAAO,KACpB,EAA0BtK,mBAAS,IAAG,oBAA/B0J,EAAK,KAAEC,EAAQ,KACtB,EAA8B3J,oBAAS,GAAM,oBAAtCuD,EAAO,KAAEmM,EAAU,KAEpBlO,EAAWc,cAEXpE,EAAcmE,aAAY,SAAAnG,GAAK,OAAIA,EAAMgC,WAAW,IAClDxB,EAAyBwB,EAAzBxB,MAAOJ,EAAkB4B,EAAlB5B,QAAS6B,EAASD,EAATC,KAElBK,EAAa6D,aAAY,SAAAnG,GAAK,OAAIA,EAAMsC,UAAU,IACzCmR,EAAgEnR,EAAvE9B,MAA6BkT,EAA0CpR,EAAnDlC,QAAiCuT,EAAkBrR,EAA3BtB,QAyBpD,OAvBAoJ,qBAAU,WAEFuJ,GACArO,EAAS,CAAEnF,KAAM7B,KACjB2F,EAAQM,KAAK,oBAGRtC,EAAK4C,MAAQ5C,EAAK2F,MAAQiF,OAAO0G,IAGlCnF,EAAQnM,EAAK4C,MACb4I,EAASxL,EAAKuL,OACdgG,EAAWvR,EAAKoF,UAJhB/B,EAASF,GAAemO,GAQpC,GAAG,CAACtR,EAAMsR,EAAQI,EAAe1P,IAQ7B,iCACI,eAAC,QAAI,CAACyC,GAAG,kBAAiB,SAAC,YAI3B,gBAAC,GAAa,WACV,8BAAI,cACHgN,GAAiB,eAAC,GAAM,IACxBD,GAAe,eAAC,GAAO,CAACtO,QAAQ,SAAQ,SAAEsO,IAE1CrT,EAAU,eAAC,GAAM,IAAMI,EAAQ,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAEnD,gBAAC2D,GAAA,EAAI,CAACC,SAlBJ,SAACC,GACnBA,EAAEC,iBACFgB,E1BoPkB,SAACrD,GAAI,0DAAK,WAAOqD,EAAUC,GAAQ,0FAepD,OAfoD,SAErDD,EAAS,CACLnF,KAAMhC,KACR,EAIEoH,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMgJ,IAAI,qBAAD,OACP3M,EAAK2F,IAAG,KAC7B3F,EACAuD,GACH,gBAJOM,EAAI,EAAJA,KAMRR,EAAS,CACLnF,KAAM/B,KAGVkH,EAAS,CACLnF,KAAM9C,EACNgD,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAM9B,GACNgC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDAzC8B,EAyC9B,C0B7RgB2N,CAAW,CAAEhM,IAAK3F,EAAK2F,IAAK/C,OAAM2I,QAAOnG,YACtD,EAekD,UAE1B,gBAAClD,GAAA,EAAK4J,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,SACZ,eAAC9J,GAAA,EAAKQ,QAAO,CAETxE,KAAK,OACLyE,YAAY,aACZI,MAAOH,EACPC,SAAU,SAACT,GAAC,OAAK+J,EAAQ/J,EAAEU,OAAOC,MAAM,OAKhD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,kBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACTxE,KAAK,QACLyE,YAAY,cACZI,MAAOwI,EACP1I,SAAU,SAACT,GAAC,OAAKoJ,EAASpJ,EAAEU,OAAOC,MAAM,OAKjD,eAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,UAAS,SAC3B,eAAC7J,GAAA,EAAKiM,MAAK,CACPjQ,KAAK,WACLkQ,MAAM,WACNC,QAASjJ,EACTvC,SAAU,SAACT,GAAC,OAAKmP,EAAWnP,EAAEU,OAAOuL,QAAQ,MAKrD,eAACpL,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,mBAWpE,ECqFe0O,OAnLf,SAA2B,GAAqB,IAAnB5P,EAAO,EAAPA,QACrBqB,GADmC,EAALkG,MACnBpF,eAEXrG,EAAcoG,aAAY,SAACnG,GAAK,OAAKA,EAAMD,WAAW,IACpDK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAElBc,GAF4ChB,EAAhBQ,MAAgBR,EAATO,KAEnB6F,aAAY,SAACnG,GAAK,OAAKA,EAAMe,aAAa,KAErD+S,EAGP/S,EAHFX,QACO2T,EAELhT,EAFFP,MACSuS,EACPhS,EADFC,QAGIC,EAAgBkF,aAAY,SAACnG,GAAK,OAAKA,EAAMiB,aAAa,IAErD+S,EAIP/S,EAJFb,QACO6T,EAGLhT,EAHFT,MACS0T,EAEPjT,EAFFD,QACSmT,EACPlT,EADFJ,QAIMiB,EADUqE,aAAY,SAACnG,GAAK,OAAKA,EAAM6B,SAAS,IAChDC,SAEJiC,EAAUE,EAAQO,SAASkF,OAC/BU,qBAAU,WACR9E,EAAS,CAAEnF,KAAMhE,IAEZ2F,EAASuF,SACZpD,EAAQM,KAAK,UAGX2P,EACFjQ,EAAQM,KAAK,kBAAD,OAAmB4P,EAAevM,IAAG,UAEjDtC,EAAS8D,GAAarF,GAE1B,GAAG,CACDuB,EACArB,EACAnC,EACAiR,EACAmB,EACAC,EACApQ,IAGF,IAAMiP,EAAgB,SAAC3N,GACjBuM,OAAOqB,QAAQ,kDACjB3N,EpB+DuB,SAACD,GAAE,0DAAK,WAAOC,EAAUC,GAAQ,sFAerD,OAfqD,SAEtDD,EAAS,CACLnF,KAAMtE,IACR,EAIE0J,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMsN,OAAO,wBAAD,OACP7N,EAAE,KAC1BG,GACH,cAHOM,KAKRR,EAAS,CACLnF,KAAMrE,IACR,kDAIFwJ,EAAS,CACLnF,KAAMpE,EACNsE,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDAnC+B,EAmC/B,CoBlGcmO,CAAc/O,GAE3B,EAMA,OACE,iCACE,gBAACkC,GAAA,EAAG,CAACtC,UAAU,qBAAoB,UACjC,eAACuC,GAAA,EAAG,UACF,8BAAI,eAGN,eAACA,GAAA,EAAG,CAACvC,UAAU,aAAY,SACzB,gBAACC,GAAA,EAAM,CAACD,UAAU,OAAOkC,QAZJ,WAC3B7B,EpBkGsB,mDAAS,WAAOA,EAAUC,GAAQ,0FAenD,OAfmD,SAEpDD,EAAS,CACLnF,KAAMnE,IACR,EAIEuJ,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMiI,KAAK,wBAE9B,CAAC,EACDrI,GACH,gBAJOM,EAAI,EAAJA,KAKRR,EAAS,CACLnF,KAAMlE,EACNoE,QAASyF,IACX,kDAIFR,EAAS,CACLnF,KAAMjE,EACNmE,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDApCyB,GoBjGxB,EAU+D,UACrD,oBAAGhB,UAAU,gBAAkB,0BAKpC6O,GAAiB,eAAC,GAAM,IACxBC,GAAe,eAAC,GAAO,CAAC5O,QAAQ,SAAQ,SAAE4O,IAE1CC,GAAiB,eAAC,GAAM,IACxBC,GAAe,eAAC,GAAO,CAAC9O,QAAQ,SAAQ,SAAE8O,IAE1C7T,EACC,eAAC,GAAM,IACLI,EACF,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAE3B,iCACM,8BAAI,mBACR,gBAACsO,GAAA,EAAK,CAACC,SAAO,EAACqE,UAAQ,EAACC,OAAK,EAACrE,YAAU,EAAC/J,UAAU,WAAU,UAC3D,iCAEE,gCAEE,8BAAI,SACJ,8BAAI,UACJ,8BAAI,aACJ,8BAAI,UACJ,8BAAI,UACJ,6BAIJ,iCACGhF,EACE0B,QAAO,SAACd,GAAO,OAAKA,EAAQmL,cAAgB,CAAC,IAC7CtK,KAAI,SAACb,GAAO,OACX,gCAEE,8BAAKA,EAAQgE,OACb,gCAAI,KAAGhE,EAAQyH,SACf,8BAAKzH,EAAQ6G,WACb,8BAAK7G,EAAQwT,QACb,8BAAKxT,EAAQmL,eAEb,gCACE,eAAC,iBAAa,CAACtF,GAAE,yBAAoB7F,EAAQ+G,IAAG,SAAQ,SACtD,eAAC1C,GAAA,EAAM,CAACC,QAAQ,QAAQF,UAAU,SAAQ,SACxC,oBAAGA,UAAU,oBAIjB,eAACC,GAAA,EAAM,CACLC,QAAQ,SACRF,UAAU,SACVkC,QAAS,kBAAM6L,EAAcnS,EAAQ+G,IAAI,EAAC,SAE1C,oBAAG3C,UAAU,wBApBVpE,EAAQ+G,IAuBZ,MAIX,8BAAI,kBAEN,gBAACkH,GAAA,EAAK,CAACC,SAAO,EAACqE,UAAQ,EAACC,OAAK,EAACrE,YAAU,EAAC/J,UAAU,WAAU,UAC3D,iCACE,gCACE,8BAAI,OACJ,8BAAI,SACJ,8BAAI,UACJ,8BAAI,aACJ,8BAAI,UAEJ,6BAIJ,iCACGhF,EAASyB,KAAI,SAACb,GAAO,OACpB,gCACE,8BAAKA,EAAQ+G,MACb,8BAAK/G,EAAQgE,OACb,gCAAI,KAAGhE,EAAQyH,SACf,8BAAKzH,EAAQ6G,WACb,8BAAK7G,EAAQwT,QAGb,gCACE,eAAC,iBAAa,CAAC3N,GAAE,yBAAoB7F,EAAQ+G,IAAG,SAAQ,SACtD,eAAC1C,GAAA,EAAM,CAACC,QAAQ,QAAQF,UAAU,SAAQ,SACxC,oBAAGA,UAAU,oBAIjB,eAACC,GAAA,EAAM,CACLC,QAAQ,SACRF,UAAU,SACVkC,QAAS,kBAAM6L,EAAcnS,EAAQ+G,IAAI,EAAC,SAE1C,oBAAG3C,UAAU,wBApBVpE,EAAQ+G,IAuBZ,cAQrB,ECiCe0M,OArNf,SAA2B,GAAqB,IAAnB9I,EAAK,EAALA,MAAOvH,EAAO,EAAPA,QAC5B2I,EAAYpB,EAAMG,OAAOtG,GAE/B,EAAwBvB,mBAAS,IAAG,oBAA7Be,EAAI,KAAEuJ,EAAO,KACpB,EAA0BtK,mBAAS,GAAE,oBAA9BwE,EAAK,KAAEiM,EAAQ,KACtB,EAA0BzQ,mBAAS,IAAG,oBAA/BiE,EAAK,KAAEyM,EAAQ,KACtB,EAA0B1Q,mBAAS,IAAG,oBAA/BuQ,EAAK,KAAEI,EAAQ,KACtB,EAAgC3Q,mBAAS,IAAG,oBAArC4D,EAAQ,KAAEqC,EAAW,KAC5B,EAAwCjG,mBAAS,GAAE,oBAA5CkI,EAAY,KAAE0I,EAAe,KACpC,EAAsC5Q,mBAAS,IAAG,oBAA3CsE,EAAW,KAAEuM,EAAc,KAClC,EAAkC7Q,oBAAS,GAAM,oBAA1C8Q,EAAS,KAAEC,EAAY,KAExBvP,EAAWc,cAEXxF,EAAiBuF,aAAY,SAACnG,GAAK,OAAKA,EAAMY,cAAc,IAC1DJ,EAA4BI,EAA5BJ,MAAOJ,EAAqBQ,EAArBR,QAASS,EAAYD,EAAZC,QAElBK,EAAgBiF,aAAY,SAACnG,GAAK,OAAKA,EAAMkB,aAAa,IAEvDuS,EAGLvS,EAHFV,MACSkT,EAEPxS,EAFFd,QACSuT,EACPzS,EADFF,QAGFoJ,qBAAU,WACJuJ,GACFrO,EAAS,CAAEnF,KAAM5D,IACjB0H,EAAQM,KAAK,sBACb7D,QAAQC,IAAI,sBAEPE,EAAQgE,MAAQhE,EAAQ+G,MAAQiF,OAAOD,IAI1CwB,EAAQvN,EAAQgE,MAChB0P,EAAS1T,EAAQyH,OACjBkM,EAAS3T,EAAQkH,OACjB0M,EAAS5T,EAAQwT,OACjBtK,EAAYlJ,EAAQ6G,UACpBgN,EAAgB7T,EAAQmL,cACxB2I,EAAe9T,EAAQuH,aACvB1H,QAAQC,IAAI,aAVZ2E,EAAS+D,GAAmBuD,IAC5BlM,QAAQC,IAAI,oBAYlB,GAAG,CAAC2E,EAAUzE,EAAS+L,EAAW3I,EAAS0P,IAE3C,IAgBMmB,EAAiB,mDAAG,WAAOzQ,GAAC,0FAc7B,OAbG0Q,EAAO1Q,EAAEU,OAAOiQ,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAcvI,GAE9BiI,GAAa,GAAM,SAGXrP,EAAS,CACbC,QAAS,CACP,eAAgB,wBAElB,EAAD,OAEsBG,KAAMiI,KAC3B,wBACAoH,EACAzP,GACA,KAAD,WAJOM,EAAI,EAAJA,KAKRpF,QAAQC,IAAIsU,GAEZT,EAAS1O,GACT+O,GAAa,GAAO,kDAEpBA,GAAa,GAAO,0DAEvB,gBA5BsB,sCA8BvB,OACE,iCACE,eAAC,QAAI,CAACnO,GAAG,qBAAoB,SAAC,YAE9B,gBAAC,GAAa,WACZ,8BAAI,iBACHgN,GAAiB,eAAC,GAAM,IACxBD,GAAe,eAAC,GAAO,CAACtO,QAAQ,SAAQ,SAAEsO,IAE1CrT,EACC,eAAC,GAAM,IACLI,EACF,eAAC,GAAO,CAAC2E,QAAQ,SAAQ,SAAE3E,IAE3B,gBAAC2D,GAAA,EAAI,CAACC,SA5DQ,SAACC,GACrBA,EAAEC,iBACFgB,ErBkJyB,SAACzE,GAAO,0DAAK,WAAOyE,EAAUC,GAAQ,wGAEvD1E,EAAQyH,MAAQ,GAAKzH,EAAQmL,aAAe,GAAC,sBACvC,IAAIoJ,MAAM,8CAA8C,KAAD,EAgBhE,OAbD9P,EAAS,CACLnF,KAAM/D,IACR,EAIEmJ,IADazD,EAAQ,EAArBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAEzC,SAEsBC,KAAMgJ,IAAI,wBAAD,OACJ/N,EAAQ+G,IAAG,KACnC/G,EACA2E,GACH,OAJW,GAIX,YAJOM,EAAI,EAAJA,MAMCwC,MAAQ,GAAKxC,EAAKkG,aAAe,GAAC,uBACjC,IAAIoJ,MAAM,8CAA8C,KAAD,GAGjE9P,EAAS,CACLnF,KAAM9D,EACNgE,QAASyF,IAGbR,EAAS,CACLnF,KAAMxE,EACN0E,QAASyF,IACX,kDAGFR,EAAS,CACLnF,KAAM7D,EACN+D,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UACd,0DAET,qDAjDoC,EAiDpC,CqBlMKoP,CAAc,CACZzN,IAAKgF,EACL/H,OACAyD,QACAP,QACAsM,QACA3M,WACAsE,eACA5D,gBAGN,EA8CsC,UAC5B,gBAACjE,GAAA,EAAK4J,MAAK,CAACC,UAAU,OAAM,UAC1B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,SACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACXxE,KAAK,OACLyE,YAAY,aACZI,MAAOH,EACPC,SAAU,SAACT,GAAC,OAAK+J,EAAQ/J,EAAEU,OAAOC,MAAM,OAI5C,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UAC3B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,UACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACXxE,KAAK,SACLyE,YAAY,cACZI,MAAOsD,EACPxD,SAAU,SAACT,GAAC,OAAKkQ,EAASlQ,EAAEU,OAAOC,MAAM,OAI7C,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UAC3B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,UACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACXxE,KAAK,OACLyE,YAAY,cACZI,MAAO+C,EACPjD,SAAU,SAACT,GAAC,OAAKmQ,EAASnQ,EAAEU,OAAOC,MAAM,IAG3C,eAACb,GAAA,EAAKmR,KAAI,CACRjQ,GAAG,aACHgL,MAAM,cACNkF,QAAM,EACNzQ,SAAUgQ,IAEXF,GAAa,eAAC,GAAM,OAGvB,gBAACzQ,GAAA,EAAK4J,MAAK,CAACC,UAAU,QAAO,UAC3B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,UACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACXxE,KAAK,OACLyE,YAAY,cACZI,MAAOqP,EACPvP,SAAU,SAACT,GAAC,OAAKoQ,EAASpQ,EAAEU,OAAOC,MAAM,OAI7C,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,eAAc,UAClC,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,UACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACXxE,KAAK,SACLyE,YAAY,cACZI,MAAOgH,EACPlH,SAAU,SAACT,GAAC,OAAKqQ,EAAgBrQ,EAAEU,OAAOC,MAAM,OAIpD,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,WAAU,UAC9B,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,aAgBZ,0BACEjJ,MAAO0C,EACP5C,SAAU,SAACT,GAAC,OAAK0F,EAAY1F,EAAEU,OAAOC,MAAM,EAAC,UAE7C,yBAAQA,MAAM,aAAY,SAAC,eAC3B,yBAAQA,MAAM,OAAM,SAAC,SACrB,yBAAQA,MAAM,UAAS,SAAC,YACxB,yBAAQA,MAAM,QAAO,SAAC,gBAI1B,gBAACb,GAAA,EAAK4J,MAAK,CAACC,UAAU,cAAa,UACjC,eAAC7J,GAAA,EAAK8J,MAAK,UAAC,gBACZ,eAAC9J,GAAA,EAAKQ,QAAO,CACXxE,KAAK,OACLyE,YAAY,oBACZI,MAAOoD,EACPtD,SAAU,SAACT,GAAC,OAAKsQ,EAAetQ,EAAEU,OAAOC,MAAM,OAInD,eAACE,GAAA,EAAM,CAAC/E,KAAK,SAASgF,QAAQ,UAAS,SAAC,mBAQpD,ECvKeqQ,OAhCf,WACE,OACE,gBAAC,cAAM,WACL,eAAC,GAAM,IACP,uBAAMvQ,UAAU,OAAM,SACpB,gBAACwB,GAAA,EAAS,WACR,eAAC,KAAK,CAACgP,KAAK,IAAIC,UAAWpM,GAAYqM,OAAK,IAC5C,eAAC,KAAK,CAACF,KAAK,SAASC,UAAWnI,KAChC,eAAC,KAAK,CAACkI,KAAK,YAAYC,UAAWvH,KACnC,eAAC,KAAK,CAACsH,KAAK,WAAWC,UAAWjH,KAClC,eAAC,KAAK,CAACgH,KAAK,YAAYC,UAAW/F,KACnC,eAAC,KAAK,CAAC8F,KAAK,cAAcC,UAAWzE,KACrC,eAAC,KAAK,CAACwE,KAAK,aAAaC,UAAWtE,KACpC,eAAC,KAAK,CAACqE,KAAK,WAAWC,UAAWxF,KAClC,eAAC,KAAK,CAACuF,KAAK,eAAeC,UAAWnK,KACtC,eAAC,KAAK,CAACkK,KAAK,aAAaC,UAAW/I,KAEpC,eAAC,KAAK,CAAC8I,KAAK,kBAAkBC,UAAW5C,KAEzC,eAAC,KAAK,CAAC2C,KAAK,uBAAuBC,UAAWpC,KAE9C,eAAC,KAAK,CAACmC,KAAK,qBAAqBC,UAAW7B,KAC5C,eAAC,KAAK,CAAC4B,KAAK,0BAA0BC,UAAWpB,UAKrD,eAAC,GAAM,MAGb,ECzCesB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECAAQ,IAASC,OACP,eAAC,IAAQ,CAAC7S,MAAOA,GAAM,SACrB,eAAC,GAAG,MAENsO,SAASwE,eAAe,SAI1BX,I","file":"static/js/main.6a1e3d34.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\n\n\nexport const PRODUCT_CATEGORY_LIST_REQUEST = 'PRODUCT_CATEGORY_LIST_REQUEST'\nexport const PRODUCT_CATEGORY_LIST_SUCCESS = 'PRODUCT_CATEGORY_LIST_SUCCESS'\nexport const PRODUCT_CATEGORY_LIST_FAIL = 'PRODUCT_CATEGORY_LIST_FAIL'\n\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productCategoryReducer\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productCategory: productCategoryReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n\n} from '../constants/productConstants'\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const productCategoryReducer = (state = { products: [] }, action) => {\n    console.log(action)\n    switch (action.type) {\n        case 'PRODUCT_CATEGORY_REQUEST':\n            return { loading: true, products: [] }\n\n        case 'PRODUCT_CATEGORY_SUCCESS':\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case 'PRODUCT_CATEGORY_FAIL':\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\n\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    \n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n            \n            placeholder='search'\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            <Button\n            \n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Search\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\n\n\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>nothin</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                \n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    \n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                     \n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Stocks</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    \n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy;BikerMart</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product ,category}) {\n    // console.log('here is product')\n    // console.log(category)\n    // console.log(product);\n    return (\n        <Card className=\"my-3 p-3 rounded card-product\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img className=\"product-image\" src={product.image} />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                <Card.Text as=\"div\">\n                    {product.description.slice(0, 30)}...\n                </Card.Text>\n                <Card.Text as=\"h3\">Rs {product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\n\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    \n\n\n\n\n\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n        console.log('value of data');\n        console.log(data);\n        // let info = {\n        //     products:[]\n        // }\n        //  info.products = data.products.filter(e => {\n        //     return e.category === 'coconut';\n        // })\n        // console.log(info);\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        console.log('here is error')\n        console.log(error);\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listProductsCategory = (category) => async (dispatch) => {\n    try {\n        dispatch({ type: 'PRODUCT_CATEGORY_REQUEST' })\n\n        const { data } = await axios.get(`/api/products`)\n        console.log('value of data inside category');\n        console.log(data);\n        let info = {\n            page:1,\n            pages:1,\n            products:[]\n        }\n        console.log('inside category');\n        console.log(category);\n         info.products = data.products.filter(e => {\n            return e.category === category;\n        })\n        console.log(info);\n\n\n        dispatch({\n            type: 'PRODUCT_CATEGORY_SUCCESS',\n            payload: info\n        })\n\n    } catch (error) {\n        console.log('here is error')\n        console.log(error);\n        dispatch({\n            type: 'PRODUCT_CATEGORY_FAIL',\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n    \n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        if (product.price < 0 || product.countInStock < 0) {\n            throw new Error(\"Price or count in stock cannot be negative\");\n        }\n\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n\n        if (data.price < 0 || data.countInStock < 0) {\n            throw new Error(\"Price or count in stock cannot be negative\");\n        }\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport { AiOutlineDown } from \"react-icons/ai\";\n\nimport { listProducts, listProductsCategory } from \"../actions/productActions\";\n\nfunction HomeScreen({ history }) {\n  const [click, setClick] = useState(false);\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const productCategory = useSelector((state) => state.productCategory);\n  const list = useSelector((state) => state);\n  console.log(list);\n  const { error, loading, products, page, pages } = click\n    ? productCategory\n    : productList;\n  // const { error, loading, products, page, pages } = productCategory;\n\n  let keyword = history.location.search;\n  console.log(\"value of keyboard \");\n  console.log(keyword);\n  // let info = products;\n\n  const [isShown, setIsShown] = useState(false);\n  const reference = useRef([]);\n\n  const [category, setCategory] = useState(\"\");\n  let nothing = '';\n  const [no, setNo] = useState(products);\n  // console.log(\"value of no\");\n  // console.log(productList);\n  const [info, setInfo] = useState(productList.products);\n  useEffect(() => {\n    // console.log(no);\n    reference.current = no;\n    // console.log(\"referenced\");\n    // console.log(productList);\n\n    // console.log(reference.current)\n    // console.log(products);\n    dispatch(listProducts(keyword));\n    // setInfo(products);\n  }, [dispatch, keyword, category, reference, no]);\n\n  // console.log(\"here is all\");\n  // console.log(typeof info)\n  // console.log(typeof reference.current)\n\n  const filterCategory = () => {\n    console.log('category dejljsd')\n    console.log(nothing)\n    dispatch(listProductsCategory(nothing));\n    // dispatch({category: category})\n    setClick(true);\n\n    let details = products.filter((p) => {\n      // console.log(\"inside filter\");\n      // console.log(p);\n      return p.category === category;\n    });\n    setNo(details);\n    setInfo(details);\n    // console.log(category);\n    // console.log(\"here is filter\");\n    // console.log(details);\n    reference.current = details;\n    // console.log(info);\n  };\n\n  return (\n    <div style={{}}>\n      <div style={{ display: \"flex\", \"align-items\": \"center\" }}>\n        <div\n          className='text-lg font-bold'\n          style={{\n            position: \"absolute\",\n            left: \"4vw\",\n            top: \"125px\",\n            \"font-size\": \"15px\",\n            \"font-weight\": \"semi-bold\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n          onMouseEnter={() => setIsShown(true)}\n          onMouseLeave={() => setIsShown(false)}\n        >\n          <span>\n            categories\n            <AiOutlineDown />\n          </span>\n          {isShown && (\n            <div>\n              <div\n                onClick={() => {\n                  nothing = 'coconut'\n                  setCategory(\"coconut\");\n                  filterCategory();\n                }}\n              >\n                coconut\n              </div>\n              <div\n                onClick={() => {\n                  nothing = 'lime'\n\n                  setCategory(\"lime\");\n                  filterCategory();\n                }}\n              >lime</div>\n              <div\n              onClick={() => {\n                setCategory(\"lime\");\n                filterCategory();\n              }}\n              >helelo</div>\n              <div\n              onClick={() => {\n                setCategory(\"lime\");\n                filterCategory();\n              }}\n              >helelo</div>\n            </div>\n          )}\n        </div>\n        <h1>Latest Products</h1>\n      </div>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <div>\n          <Row xs={1} sm={2} md={3} lg={4} xl={4} className='g-4'>\n            {products.map((product) => (\n              <Col key={product._id} xs={6} sm={6} md={4} lg={3} xl={3}>\n                <Product product={product} category={category} />\n              </Col>\n            ))}\n          </Row>\n          {/* <Paginate page={page} pages={pages} keyword={keyword} /> */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails } from '../actions/productActions'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    return (\n        <div>\n            <Link to='/' className='btn btn-success my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        \n\n                                        <ListGroup.Item>\n                                            Price: Rs {product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>RS {product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                            <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                    {product.countInStock > 0 ? \n                                                    (product.countInStock <= 5 ? \n                                                        `Only ${product.countInStock} left` : \n                                                        'In Stock') : \n                                                        <span style={{color: \"red\", fontWeight: \"bold\"}}>Out of Stock</span> \n  }\n                                                         </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                            <ListGroup.Item><Row>\n                                                <Col>Qty</Col>\n                                                <Col xs='auto' className='my-1'>\n                                                    <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => setQty(Math.max(qty - 1, 1))}>-</Button>\n                                                    <span className=\"mx-3\">{qty}</span>\n                                                    <Button variant=\"success\" style={{ padding: \"5px 10px\" }} onClick={() => setQty(Math.min(qty + 1, Math.min(5, product.countInStock)))}>+</Button>\n                                                    </Col></Row></ListGroup.Item>\n                                                    )}\n                                                    <ListGroup.Item>\n                                                <Button variant=\"info\"\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            \n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                    {cartItems.map(item => (\n                      <ListGroup.Item key={item.product}>\n                        <Row>\n                          <Col md={2}>\n                            <Image src={item.image} alt={item.name} fluid rounded />\n                          </Col>\n                          <Col md={3}>\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                          </Col>\n                          <Col md={2}>\n                            Rs{item.price}\n                          </Col>\n                          <Col md={3}>\n                            <Button variant=\"danger\" style={{ padding: \"5px 10px\" }} onClick={() => dispatch(addToCart(item.product, Math.max(item.qty - 1, 1)))}>-</Button>\n                            <span className=\"mx-3\">{item.qty}</span>\n                            <Button variant=\"success\"style={{ padding: \"5px 10px\" }}  onClick={() => dispatch(addToCart(item.product, Math.min(item.qty + 1, (item.countInStock < 5 ? item.countInStock : 5))))}>+</Button>\n                          </Col>\n                          <Col md={1}>\n                            <Button\n                              type='button'\n                              variant='light'\n                              onClick={() => removeFromCartHandler(item.product)}\n                            >\n                              <i className='fas fa-trash'></i>\n                            </Button>\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            Rs {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button \n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                            \n                        </Button>\n                        \n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Log In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Log In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Log In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Login</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    \n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                {/* <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group> */}\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('khalti')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='khalti'\n                            id='khalti'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import myKey from \"./KhaltiKey\";\r\nlet config = {\r\n    // replace this key with yours\r\n    \"publicKey\": myKey.publicTestKey,\r\n    \"productIdentity\": \"1234567890\",\r\n    \"productName\": \"Bikiemart\",\r\n    \"productUrl\": \"http://127.0.0.1:8000\",\r\n    \"eventHandler\": {\r\n        onSuccess (payload) {\r\n            // hit merchant api for initiating verfication\r\n            console.log(payload);\r\n        },\r\n        // onError handler is optional\r\n        onError (error) {\r\n            // handle errors\r\n            console.log(error);\r\n        },\r\n        onClose () {\r\n            console.log('widget is closing');\r\n        }\r\n    },\r\n    \"paymentPreference\": [\"KHALTI\", \"EBANKING\",\"MOBILE_BANKING\", \"CONNECT_IPS\", \"SCT\"],\r\n};\r\nexport default config;","let myKey={\r\n    publicTestKey:'test_public_key_912f1b95e0d24b1b90bd75a850ae0475',\r\n    secretKey:'test_secret_key_631a6d6f32da4e85b1ddedc31cd29590'\r\n}\r\nexport default myKey;","import React from 'react'\r\nimport KhaltiCheckout from \"khalti-checkout-web\";\r\nimport config from './KhaltiConfig';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Khalti() {\r\n    const cart = useSelector(state => state.cart);\r\n    const checkout = new KhaltiCheckout(config);\r\n\r\n    const handleClick = () => {\r\n        checkout.show({amount: cart.totalPrice * 100});\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleClick}> Pay Via Khalti </button>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport Khalti from '../khalti/Khalti'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n\n\n    cart.totalPrice = (Number(cart.itemsPrice) ).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                \n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>Rs{cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            \n\n                            \n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>Rs{cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Khalti/>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    \n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductListScreen({ history, match }) {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search;\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n              <h1>Minimum Stocks</h1>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n\n              <tr>\n                {/* <th>ID</th> */}\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th>stock</th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products\n                .filter((product) => product.countInStock <= 5)\n                .map((product) => (\n                  <tr key={product._id}>\n                    {/* <td>{product._id}</td> */}\n                    <td>{product.name}</td>\n                    <td>Rs{product.price}</td>\n                    <td>{product.category}</td>\n                    <td>{product.brand}</td>\n                    <td>{product.countInStock}</td>\n\n                    <td>\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                        <Button variant=\"light\" className=\"btn-sm\">\n                          <i className=\"fas fa-edit\"></i>\n                        </Button>\n                      </LinkContainer>\n\n                      <Button\n                        variant=\"danger\"\n                        className=\"btn-sm\"\n                        onClick={() => deleteHandler(product._id)}\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n\n            <h1>All Stocks</h1>\n          </Table>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                {/* <th>stock</th> */}\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>Rs{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  {/* <td>{product.countInStock}</td> */}\n\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nfunction ProductEditScreen({ match, history }) {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { error, loading, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n      console.log(\"update successful\");\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n        console.log(\"not product name\");\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n        console.log(\"details\");\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", productId);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/products/upload/\",\n        formData,\n        config\n      );\n      console.log(formData);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Link to='/admin/productlist'>Go Back</Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countinstock'>\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter stock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              {/* <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control> */}\n              {/* <Form.Select aria-label='Default select example'>\n                <option>Open this select menu</option>\n                <option value='1'>One</option>\n                <option value='2'>Two</option>\n                <option value='3'>Three</option>\n              </Form.Select> */}\n\n              <select\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              >\n                <option value='grapefruit'>Grapefruit</option>\n                <option value='lime'>Lime</option>\n                <option value='coconut'>Coconut</option>\n                <option value='mango'>Mango</option>\n              </select>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default ProductEditScreen;\n","\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          \n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          \n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}