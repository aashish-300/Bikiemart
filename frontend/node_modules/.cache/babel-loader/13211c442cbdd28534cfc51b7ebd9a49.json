{"ast":null,"code":"import _slicedToArray from\"D:/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{saveShippingAddress}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter address\",value:address?address:'',onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter city\",value:city?city:'',onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter postal code\",value:postalCode?postalCode:'',onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Enter country\",value:country?country:'',onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});}export default ShippingScreen;","map":{"version":3,"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","push","target","value"],"sources":["D:/Ecommerce_Bikiemart/frontend/src/screens/ShippingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}