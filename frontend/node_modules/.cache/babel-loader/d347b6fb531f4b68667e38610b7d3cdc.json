{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n// import { Table, Button, Row, Col,Card } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import Paginate from '../components/Paginate'\n// import { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n// import { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n// function ProductListScreen({ history, match }) {\n//     const dispatch = useDispatch()\n//     const productList = useSelector(state => state.productList)\n//     const { loading, error, products, pages, page } = productList\n//     const productDelete = useSelector(state => state.productDelete)\n//     const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n//     const productCreate = useSelector(state => state.productCreate)\n//     const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n//     let keyword = history.location.search\n//     useEffect(() => {\n//         dispatch({ type: PRODUCT_CREATE_RESET })\n//         if (!userInfo.isAdmin) {\n//             history.push('/login')\n//         }\n//         if (successCreate) {\n//             history.push(`/admin/product/${createdProduct._id}/edit`)\n//         } else {\n//             dispatch(listProducts(keyword))\n//         }\n//     }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n//     const deleteHandler = (id) => {\n//         if (window.confirm('Are you sure you want to delete this product?')) {\n//             dispatch(deleteProduct(id))\n//         }\n//     }\n//     const createProductHandler = () => {\n//         dispatch(createProduct())\n//     }\n//     return (\n//         <div>\n//             <Row className='align-items-center'>\n//                 <Col>\n//                     <h1>Stocks/Inventory</h1>\n//                 </Col>\n//             </Row>\n//             {loadingDelete && <Loader />}\n//             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n//             {loadingCreate && <Loader />}\n//             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n//             {loading\n//                 ? (<Loader />)\n//                 : error\n//                     ? (<Message variant='danger'>{error}</Message>)\n//                     : (\n//                         <div>\n//                             <h4>Minimum Stocks</h4>\n//   <Row className=\"my-1\">\n//     {Object.entries(products.filter(product => product.countInStock < 10)\n//       .reduce((result, product) => {\n//         if (!result[product.category]) {\n//           result[product.category] = [];\n//         }\n//         result[product.category].push(product);\n//         return result;\n//       }, {}))\n//       .map(([category, products]) => (\n//         <Col xs={12} key={category}>\n//           <h5 class=\"center-heading\">{category}</h5>\n//           <Row>\n//             {products.map(product => (\n//               <Col xs={12} md={4} key={product._id} className=\"my-3\">\n//                 <Card>\n//                   <Card.Img variant=\"top\" src={product.image} />\n//                   <Card.Body>\n//                     <Card.Title>{product.name}</Card.Title>\n//                     <Card.Text>\n//                       Price:Rs {product.price}\n//                     </Card.Text>\n//                     <Card.Text>\n//                       Count in Stock: <span style={{color: \"red\", fontWeight: \"bold\"}}>{product.countInStock}</span>\n//                     </Card.Text>\n//                   </Card.Body>\n//                 </Card>\n//               </Col>\n//             ))}\n//           </Row>\n//         </Col>\n//       ))}\n//   </Row>\n//         <Paginate pages={pages} page={page} isAdmin={true} />\n//         </div>\n//         )}\n//     </div>\n//     )\n// }\n// export default ProductListScreen\n//this is it\nimport React,{useState,useEffect}from'react';import{LinkContainer}from'react-router-bootstrap';import{Table,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Loader from'../components/Loader';import Message from'../components/Message';import Paginate from'../components/Paginate';import{listProducts,deleteProduct,createProduct}from'../actions/productActions';import{PRODUCT_CREATE_RESET}from'../constants/productConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProductListScreen(_ref){var history=_ref.history,match=_ref.match;var dispatch=useDispatch();var productList=useSelector(function(state){return state.productList;});var loading=productList.loading,error=productList.error,products=productList.products,pages=productList.pages,page=productList.page;var productDelete=useSelector(function(state){return state.productDelete;});var loadingDelete=productDelete.loading,errorDelete=productDelete.error,successDelete=productDelete.success;var productCreate=useSelector(function(state){return state.productCreate;});var loadingCreate=productCreate.loading,errorCreate=productCreate.error,successCreate=productCreate.success,createdProduct=productCreate.product;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var keyword=history.location.search;useEffect(function(){dispatch({type:PRODUCT_CREATE_RESET});if(!userInfo.isAdmin){history.push('/login');}if(successCreate){history.push(\"/admin/product/\".concat(createdProduct._id,\"/edit\"));}else{dispatch(listProducts(keyword));}},[dispatch,history,userInfo,successDelete,successCreate,createdProduct,keyword]);var deleteHandler=function deleteHandler(id){if(window.confirm('Are you sure you want to delete this product?')){dispatch(deleteProduct(id));}};var createProductHandler=function createProductHandler(){dispatch(createProduct());};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Products\"})}),/*#__PURE__*/_jsx(Col,{className:\"text-right\",children:/*#__PURE__*/_jsxs(Button,{className:\"my-3\",onClick:createProductHandler,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\" Create Product\"]})})]}),loadingDelete&&/*#__PURE__*/_jsx(Loader,{}),errorDelete&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorDelete}),loadingCreate&&/*#__PURE__*/_jsx(Loader,{}),errorCreate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorCreate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,responsive:true,className:\"table-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"NAME\"}),/*#__PURE__*/_jsx(\"th\",{children:\"PRICE\"}),/*#__PURE__*/_jsx(\"th\",{children:\"CATEGORY\"}),/*#__PURE__*/_jsx(\"th\",{children:\"BRAND\"}),/*#__PURE__*/_jsx(\"th\",{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:products.map(function(product){return product.countInStock<5&&/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:product._id}),/*#__PURE__*/_jsx(\"td\",{children:product.name}),/*#__PURE__*/_jsx(\"td\",{children:product.price}),/*#__PURE__*/_jsx(\"td\",{children:product.category}),/*#__PURE__*/_jsx(\"td\",{children:product.brand}),/*#__PURE__*/_jsx(\"td\",{children:product.countInStock}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(LinkContainer,{to:\"/admin/product/\".concat(product._id,\"/edit\"),children:/*#__PURE__*/_jsx(Button,{variant:\"light\",className:\"btn-sm\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"})})}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",className:\"btn-sm\",onClick:function onClick(){return deleteHandler(product._id);},children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"})})]})]},product._id);})})]}),/*#__PURE__*/_jsx(Paginate,{pages:pages,page:page,isAdmin:true})]})]});}export default ProductListScreen;","map":{"version":3,"names":["React","useState","useEffect","LinkContainer","Table","Button","Row","Col","useDispatch","useSelector","Loader","Message","Paginate","listProducts","deleteProduct","createProduct","PRODUCT_CREATE_RESET","ProductListScreen","history","match","dispatch","productList","state","loading","error","products","pages","page","productDelete","loadingDelete","errorDelete","successDelete","success","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","product","userLogin","userInfo","keyword","location","search","type","isAdmin","push","_id","deleteHandler","id","window","confirm","createProductHandler","map","countInStock","name","price","category","brand"],"sources":["D:/fyp/Ecommerce_Bikiemart/frontend/src/screens/ProductListScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n\n// import { Table, Button, Row, Col,Card } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import Paginate from '../components/Paginate'\n// import { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n// import { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\n// function ProductListScreen({ history, match }) {\n\n//     const dispatch = useDispatch()\n\n//     const productList = useSelector(state => state.productList)\n//     const { loading, error, products, pages, page } = productList\n\n//     const productDelete = useSelector(state => state.productDelete)\n//     const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n//     const productCreate = useSelector(state => state.productCreate)\n//     const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n\n//     let keyword = history.location.search\n//     useEffect(() => {\n//         dispatch({ type: PRODUCT_CREATE_RESET })\n\n//         if (!userInfo.isAdmin) {\n//             history.push('/login')\n//         }\n\n//         if (successCreate) {\n//             history.push(`/admin/product/${createdProduct._id}/edit`)\n//         } else {\n//             dispatch(listProducts(keyword))\n//         }\n\n//     }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n//     const deleteHandler = (id) => {\n\n//         if (window.confirm('Are you sure you want to delete this product?')) {\n//             dispatch(deleteProduct(id))\n//         }\n//     }\n\n//     const createProductHandler = () => {\n//         dispatch(createProduct())\n//     }\n\n//     return (\n//         <div>\n//             <Row className='align-items-center'>\n//                 <Col>\n//                     <h1>Stocks/Inventory</h1>\n//                 </Col>\n\n                \n//             </Row>\n\n//             {loadingDelete && <Loader />}\n//             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n//             {loadingCreate && <Loader />}\n//             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n//             {loading\n//                 ? (<Loader />)\n//                 : error\n//                     ? (<Message variant='danger'>{error}</Message>)\n//                     : (\n//                         <div>\n                            \n//                             <h4>Minimum Stocks</h4>\n//   <Row className=\"my-1\">\n//     {Object.entries(products.filter(product => product.countInStock < 10)\n//       .reduce((result, product) => {\n//         if (!result[product.category]) {\n//           result[product.category] = [];\n//         }\n//         result[product.category].push(product);\n//         return result;\n//       }, {}))\n//       .map(([category, products]) => (\n//         <Col xs={12} key={category}>\n//           <h5 class=\"center-heading\">{category}</h5>\n//           <Row>\n//             {products.map(product => (\n//               <Col xs={12} md={4} key={product._id} className=\"my-3\">\n//                 <Card>\n//                   <Card.Img variant=\"top\" src={product.image} />\n//                   <Card.Body>\n//                     <Card.Title>{product.name}</Card.Title>\n//                     <Card.Text>\n//                       Price:Rs {product.price}\n//                     </Card.Text>\n//                     <Card.Text>\n//                       Count in Stock: <span style={{color: \"red\", fontWeight: \"bold\"}}>{product.countInStock}</span>\n//                     </Card.Text>\n//                   </Card.Body>\n//                 </Card>\n//               </Col>\n//             ))}\n//           </Row>\n//         </Col>\n//       ))}\n//   </Row>\n\n//         <Paginate pages={pages} page={page} isAdmin={true} />\n//         </div>\n//         )}\n//     </div>\n//     )\n// }\n\n// export default ProductListScreen\n\n//this is it\nimport React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n        {products.map(product => (\n            product.countInStock < 5 && (\n                <tr key={product._id}>\n                    <td>{product._id}</td>\n                    <td>{product.name}</td>\n                    <td>{product.price}</td>\n                    <td>{product.category}</td>\n                    <td>{product.brand}</td>\n                    <td>{product.countInStock}</td>\n                    <td>\n                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                            <Button variant='light' className='btn-sm'>\n                                <i className='fas fa-edit'></i>\n                            </Button>\n                        </LinkContainer>\n                        <Button\n                            variant='danger'\n                            className='btn-sm'\n                            onClick={() => deleteHandler(product._id)}\n                        >\n                            <i className='fas fa-trash'></i>\n                        </Button>\n                    </td>\n                </tr>\n            )\n        ))}\n    </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen"],"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"},"metadata":{},"sourceType":"module"}