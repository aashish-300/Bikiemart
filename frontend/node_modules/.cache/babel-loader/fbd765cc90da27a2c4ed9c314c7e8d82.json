{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar shared = require('../shared');\nvar MimeNode = require('../mime-node');\nvar mimeFuncs = require('../mime-funcs');\nvar MailMessage = /*#__PURE__*/function () {\n  function MailMessage(mailer, data) {\n    var _this = this;\n    _classCallCheck(this, MailMessage);\n    this.mailer = mailer;\n    this.data = {};\n    this.message = null;\n    data = data || {};\n    var options = mailer.options || {};\n    var defaults = mailer._defaults || {};\n    Object.keys(data).forEach(function (key) {\n      _this.data[key] = data[key];\n    });\n    this.data.headers = this.data.headers || {};\n\n    // apply defaults\n    Object.keys(defaults).forEach(function (key) {\n      if (!(key in _this.data)) {\n        _this.data[key] = defaults[key];\n      } else if (key === 'headers') {\n        // headers is a special case. Allow setting individual default headers\n        Object.keys(defaults.headers).forEach(function (key) {\n          if (!(key in _this.data.headers)) {\n            _this.data.headers[key] = defaults.headers[key];\n          }\n        });\n      }\n    });\n\n    // force specific keys from transporter options\n    ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(function (key) {\n      if (key in options) {\n        _this.data[key] = options[key];\n      }\n    });\n  }\n  _createClass(MailMessage, [{\n    key: \"resolveContent\",\n    value: function resolveContent() {\n      return shared.resolveContent.apply(shared, arguments);\n    }\n  }, {\n    key: \"resolveAll\",\n    value: function resolveAll(callback) {\n      var _this2 = this;\n      var keys = [[this.data, 'html'], [this.data, 'text'], [this.data, 'watchHtml'], [this.data, 'amp'], [this.data, 'icalEvent']];\n      if (this.data.alternatives && this.data.alternatives.length) {\n        this.data.alternatives.forEach(function (alternative, i) {\n          keys.push([_this2.data.alternatives, i]);\n        });\n      }\n      if (this.data.attachments && this.data.attachments.length) {\n        this.data.attachments.forEach(function (attachment, i) {\n          if (!attachment.filename) {\n            attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n            if (attachment.filename.indexOf('.') < 0) {\n              attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n            }\n          }\n          if (!attachment.contentType) {\n            attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n          }\n          keys.push([_this2.data.attachments, i]);\n        });\n      }\n      var mimeNode = new MimeNode();\n      var addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n      addressKeys.forEach(function (address) {\n        var value;\n        if (_this2.message) {\n          value = [].concat(mimeNode._parseAddresses(_this2.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n        } else if (_this2.data[address]) {\n          value = [].concat(mimeNode._parseAddresses(_this2.data[address]) || []);\n        }\n        if (value && value.length) {\n          _this2.data[address] = value;\n        } else if (address in _this2.data) {\n          _this2.data[address] = null;\n        }\n      });\n      var singleKeys = ['from', 'sender'];\n      singleKeys.forEach(function (address) {\n        if (_this2.data[address]) {\n          _this2.data[address] = _this2.data[address].shift();\n        }\n      });\n      var pos = 0;\n      var resolveNext = function resolveNext() {\n        if (pos >= keys.length) {\n          return callback(null, _this2.data);\n        }\n        var args = keys[pos++];\n        if (!args[0] || !args[0][args[1]]) {\n          return resolveNext();\n        }\n        shared.resolveContent.apply(shared, _toConsumableArray(args).concat([function (err, value) {\n          if (err) {\n            return callback(err);\n          }\n          var node = {\n            content: value\n          };\n          if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n            Object.keys(args[0][args[1]]).forEach(function (key) {\n              if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                node[key] = args[0][args[1]][key];\n              }\n            });\n          }\n          args[0][args[1]] = node;\n          resolveNext();\n        }]));\n      };\n      setImmediate(function () {\n        return resolveNext();\n      });\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(callback) {\n      var _this3 = this;\n      var envelope = this.data.envelope || this.message.getEnvelope();\n      var messageId = this.message.messageId();\n      this.resolveAll(function (err, data) {\n        if (err) {\n          return callback(err);\n        }\n        data.envelope = envelope;\n        data.messageId = messageId;\n        ['html', 'text', 'watchHtml', 'amp'].forEach(function (key) {\n          if (data[key] && data[key].content) {\n            if (typeof data[key].content === 'string') {\n              data[key] = data[key].content;\n            } else if (Buffer.isBuffer(data[key].content)) {\n              data[key] = data[key].content.toString();\n            }\n          }\n        });\n        if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n          data.icalEvent.content = data.icalEvent.content.toString('base64');\n          data.icalEvent.encoding = 'base64';\n        }\n        if (data.alternatives && data.alternatives.length) {\n          data.alternatives.forEach(function (alternative) {\n            if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n              alternative.content = alternative.content.toString('base64');\n              alternative.encoding = 'base64';\n            }\n          });\n        }\n        if (data.attachments && data.attachments.length) {\n          data.attachments.forEach(function (attachment) {\n            if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n              attachment.content = attachment.content.toString('base64');\n              attachment.encoding = 'base64';\n            }\n          });\n        }\n        data.normalizedHeaders = {};\n        Object.keys(data.headers || {}).forEach(function (key) {\n          var value = [].concat(data.headers[key] || []).shift();\n          value = value && value.value || value;\n          if (value) {\n            if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n              value = _this3.message._encodeHeaderValue(key, value);\n            }\n            data.normalizedHeaders[key] = value;\n          }\n        });\n        if (data.list && typeof data.list === 'object') {\n          var listHeaders = _this3._getListHeaders(data.list);\n          listHeaders.forEach(function (entry) {\n            data.normalizedHeaders[entry.key] = entry.value.map(function (val) {\n              return val && val.value || val;\n            }).join(', ');\n          });\n        }\n        if (data.references) {\n          data.normalizedHeaders.references = _this3.message._encodeHeaderValue('references', data.references);\n        }\n        if (data.inReplyTo) {\n          data.normalizedHeaders['in-reply-to'] = _this3.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n        }\n        return callback(null, data);\n      });\n    }\n  }, {\n    key: \"setMailerHeader\",\n    value: function setMailerHeader() {\n      if (!this.message || !this.data.xMailer) {\n        return;\n      }\n      this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n  }, {\n    key: \"setPriorityHeaders\",\n    value: function setPriorityHeaders() {\n      if (!this.message || !this.data.priority) {\n        return;\n      }\n      switch ((this.data.priority || '').toString().toLowerCase()) {\n        case 'high':\n          this.message.setHeader('X-Priority', '1 (Highest)');\n          this.message.setHeader('X-MSMail-Priority', 'High');\n          this.message.setHeader('Importance', 'High');\n          break;\n        case 'low':\n          this.message.setHeader('X-Priority', '5 (Lowest)');\n          this.message.setHeader('X-MSMail-Priority', 'Low');\n          this.message.setHeader('Importance', 'Low');\n          break;\n        default:\n        // do not add anything, since all messages are 'Normal' by default\n      }\n    }\n  }, {\n    key: \"setListHeaders\",\n    value: function setListHeaders() {\n      var _this4 = this;\n      if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n        return;\n      }\n      // add optional List-* headers\n      if (this.data.list && typeof this.data.list === 'object') {\n        this._getListHeaders(this.data.list).forEach(function (listHeader) {\n          listHeader.value.forEach(function (value) {\n            _this4.message.addHeader(listHeader.key, value);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"_getListHeaders\",\n    value: function _getListHeaders(listData) {\n      var _this5 = this;\n      // make sure an url looks like <protocol:url>\n      return Object.keys(listData).map(function (key) {\n        return {\n          key: 'list-' + key.toLowerCase().trim(),\n          value: [].concat(listData[key] || []).map(function (value) {\n            return {\n              prepared: true,\n              foldLines: true,\n              value: [].concat(value || []).map(function (value) {\n                if (typeof value === 'string') {\n                  value = {\n                    url: value\n                  };\n                }\n                if (value && value.url) {\n                  if (key.toLowerCase().trim() === 'id') {\n                    // List-ID: \"comment\" <domain>\n                    var _comment = value.comment || '';\n                    if (mimeFuncs.isPlainText(_comment)) {\n                      _comment = '\"' + _comment + '\"';\n                    } else {\n                      _comment = mimeFuncs.encodeWord(_comment);\n                    }\n                    return (value.comment ? _comment + ' ' : '') + _this5._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                  }\n\n                  // List-*: <http://domain> (comment)\n                  var comment = value.comment || '';\n                  if (!mimeFuncs.isPlainText(comment)) {\n                    comment = mimeFuncs.encodeWord(comment);\n                  }\n                  return _this5._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                }\n                return '';\n              }).filter(function (value) {\n                return value;\n              }).join(', ')\n            };\n          })\n        };\n      });\n    }\n  }, {\n    key: \"_formatListUrl\",\n    value: function _formatListUrl(url) {\n      url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n      if (/^(https?|mailto|ftp):/.test(url)) {\n        return '<' + url + '>';\n      }\n      if (/^[^@]+@[^@]+$/.test(url)) {\n        return '<mailto:' + url + '>';\n      }\n      return '<http://' + url + '>';\n    }\n  }]);\n  return MailMessage;\n}();\nmodule.exports = MailMessage;","map":{"version":3,"names":["shared","require","MimeNode","mimeFuncs","MailMessage","mailer","data","message","options","defaults","_defaults","Object","keys","forEach","key","headers","resolveContent","callback","alternatives","length","alternative","i","push","attachments","attachment","filename","path","href","split","pop","shift","indexOf","detectExtension","contentType","detectMimeType","mimeNode","addressKeys","address","value","concat","_parseAddresses","getHeader","singleKeys","pos","resolveNext","args","err","node","content","Buffer","isBuffer","includes","setImmediate","envelope","getEnvelope","messageId","resolveAll","toString","icalEvent","encoding","normalizedHeaders","_encodeHeaderValue","list","listHeaders","_getListHeaders","entry","map","val","join","references","inReplyTo","xMailer","setHeader","priority","toLowerCase","listHeader","addHeader","listData","trim","prepared","foldLines","url","comment","isPlainText","encodeWord","_formatListUrl","replace","filter","test","module","exports"],"sources":["D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/nodemailer/lib/mailer/mail-message.js"],"sourcesContent":["'use strict';\n\nconst shared = require('../shared');\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\nclass MailMessage {\n    constructor(mailer, data) {\n        this.mailer = mailer;\n        this.data = {};\n        this.message = null;\n\n        data = data || {};\n        let options = mailer.options || {};\n        let defaults = mailer._defaults || {};\n\n        Object.keys(data).forEach(key => {\n            this.data[key] = data[key];\n        });\n\n        this.data.headers = this.data.headers || {};\n\n        // apply defaults\n        Object.keys(defaults).forEach(key => {\n            if (!(key in this.data)) {\n                this.data[key] = defaults[key];\n            } else if (key === 'headers') {\n                // headers is a special case. Allow setting individual default headers\n                Object.keys(defaults.headers).forEach(key => {\n                    if (!(key in this.data.headers)) {\n                        this.data.headers[key] = defaults.headers[key];\n                    }\n                });\n            }\n        });\n\n        // force specific keys from transporter options\n        ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(key => {\n            if (key in options) {\n                this.data[key] = options[key];\n            }\n        });\n    }\n\n    resolveContent(...args) {\n        return shared.resolveContent(...args);\n    }\n\n    resolveAll(callback) {\n        let keys = [\n            [this.data, 'html'],\n            [this.data, 'text'],\n            [this.data, 'watchHtml'],\n            [this.data, 'amp'],\n            [this.data, 'icalEvent']\n        ];\n\n        if (this.data.alternatives && this.data.alternatives.length) {\n            this.data.alternatives.forEach((alternative, i) => {\n                keys.push([this.data.alternatives, i]);\n            });\n        }\n\n        if (this.data.attachments && this.data.attachments.length) {\n            this.data.attachments.forEach((attachment, i) => {\n                if (!attachment.filename) {\n                    attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                    if (attachment.filename.indexOf('.') < 0) {\n                        attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n                    }\n                }\n\n                if (!attachment.contentType) {\n                    attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n                }\n\n                keys.push([this.data.attachments, i]);\n            });\n        }\n\n        let mimeNode = new MimeNode();\n\n        let addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n\n        addressKeys.forEach(address => {\n            let value;\n            if (this.message) {\n                value = [].concat(mimeNode._parseAddresses(this.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n            } else if (this.data[address]) {\n                value = [].concat(mimeNode._parseAddresses(this.data[address]) || []);\n            }\n            if (value && value.length) {\n                this.data[address] = value;\n            } else if (address in this.data) {\n                this.data[address] = null;\n            }\n        });\n\n        let singleKeys = ['from', 'sender'];\n        singleKeys.forEach(address => {\n            if (this.data[address]) {\n                this.data[address] = this.data[address].shift();\n            }\n        });\n\n        let pos = 0;\n        let resolveNext = () => {\n            if (pos >= keys.length) {\n                return callback(null, this.data);\n            }\n            let args = keys[pos++];\n            if (!args[0] || !args[0][args[1]]) {\n                return resolveNext();\n            }\n            shared.resolveContent(...args, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                let node = {\n                    content: value\n                };\n                if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n                    Object.keys(args[0][args[1]]).forEach(key => {\n                        if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                            node[key] = args[0][args[1]][key];\n                        }\n                    });\n                }\n\n                args[0][args[1]] = node;\n                resolveNext();\n            });\n        };\n\n        setImmediate(() => resolveNext());\n    }\n\n    normalize(callback) {\n        let envelope = this.data.envelope || this.message.getEnvelope();\n        let messageId = this.message.messageId();\n\n        this.resolveAll((err, data) => {\n            if (err) {\n                return callback(err);\n            }\n\n            data.envelope = envelope;\n            data.messageId = messageId;\n\n            ['html', 'text', 'watchHtml', 'amp'].forEach(key => {\n                if (data[key] && data[key].content) {\n                    if (typeof data[key].content === 'string') {\n                        data[key] = data[key].content;\n                    } else if (Buffer.isBuffer(data[key].content)) {\n                        data[key] = data[key].content.toString();\n                    }\n                }\n            });\n\n            if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n                data.icalEvent.content = data.icalEvent.content.toString('base64');\n                data.icalEvent.encoding = 'base64';\n            }\n\n            if (data.alternatives && data.alternatives.length) {\n                data.alternatives.forEach(alternative => {\n                    if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n                        alternative.content = alternative.content.toString('base64');\n                        alternative.encoding = 'base64';\n                    }\n                });\n            }\n\n            if (data.attachments && data.attachments.length) {\n                data.attachments.forEach(attachment => {\n                    if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n                        attachment.content = attachment.content.toString('base64');\n                        attachment.encoding = 'base64';\n                    }\n                });\n            }\n\n            data.normalizedHeaders = {};\n            Object.keys(data.headers || {}).forEach(key => {\n                let value = [].concat(data.headers[key] || []).shift();\n                value = (value && value.value) || value;\n                if (value) {\n                    if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n                        value = this.message._encodeHeaderValue(key, value);\n                    }\n                    data.normalizedHeaders[key] = value;\n                }\n            });\n\n            if (data.list && typeof data.list === 'object') {\n                let listHeaders = this._getListHeaders(data.list);\n                listHeaders.forEach(entry => {\n                    data.normalizedHeaders[entry.key] = entry.value.map(val => (val && val.value) || val).join(', ');\n                });\n            }\n\n            if (data.references) {\n                data.normalizedHeaders.references = this.message._encodeHeaderValue('references', data.references);\n            }\n\n            if (data.inReplyTo) {\n                data.normalizedHeaders['in-reply-to'] = this.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n            }\n\n            return callback(null, data);\n        });\n    }\n\n    setMailerHeader() {\n        if (!this.message || !this.data.xMailer) {\n            return;\n        }\n        this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n\n    setPriorityHeaders() {\n        if (!this.message || !this.data.priority) {\n            return;\n        }\n        switch ((this.data.priority || '').toString().toLowerCase()) {\n            case 'high':\n                this.message.setHeader('X-Priority', '1 (Highest)');\n                this.message.setHeader('X-MSMail-Priority', 'High');\n                this.message.setHeader('Importance', 'High');\n                break;\n            case 'low':\n                this.message.setHeader('X-Priority', '5 (Lowest)');\n                this.message.setHeader('X-MSMail-Priority', 'Low');\n                this.message.setHeader('Importance', 'Low');\n                break;\n            default:\n            // do not add anything, since all messages are 'Normal' by default\n        }\n    }\n\n    setListHeaders() {\n        if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n            return;\n        }\n        // add optional List-* headers\n        if (this.data.list && typeof this.data.list === 'object') {\n            this._getListHeaders(this.data.list).forEach(listHeader => {\n                listHeader.value.forEach(value => {\n                    this.message.addHeader(listHeader.key, value);\n                });\n            });\n        }\n    }\n\n    _getListHeaders(listData) {\n        // make sure an url looks like <protocol:url>\n        return Object.keys(listData).map(key => ({\n            key: 'list-' + key.toLowerCase().trim(),\n            value: [].concat(listData[key] || []).map(value => ({\n                prepared: true,\n                foldLines: true,\n                value: []\n                    .concat(value || [])\n                    .map(value => {\n                        if (typeof value === 'string') {\n                            value = {\n                                url: value\n                            };\n                        }\n\n                        if (value && value.url) {\n                            if (key.toLowerCase().trim() === 'id') {\n                                // List-ID: \"comment\" <domain>\n                                let comment = value.comment || '';\n                                if (mimeFuncs.isPlainText(comment)) {\n                                    comment = '\"' + comment + '\"';\n                                } else {\n                                    comment = mimeFuncs.encodeWord(comment);\n                                }\n\n                                return (value.comment ? comment + ' ' : '') + this._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                            }\n\n                            // List-*: <http://domain> (comment)\n                            let comment = value.comment || '';\n                            if (!mimeFuncs.isPlainText(comment)) {\n                                comment = mimeFuncs.encodeWord(comment);\n                            }\n\n                            return this._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                        }\n\n                        return '';\n                    })\n                    .filter(value => value)\n                    .join(', ')\n            }))\n        }));\n    }\n\n    _formatListUrl(url) {\n        url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n        if (/^(https?|mailto|ftp):/.test(url)) {\n            return '<' + url + '>';\n        }\n        if (/^[^@]+@[^@]+$/.test(url)) {\n            return '<mailto:' + url + '>';\n        }\n\n        return '<http://' + url + '>';\n    }\n}\n\nmodule.exports = MailMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}