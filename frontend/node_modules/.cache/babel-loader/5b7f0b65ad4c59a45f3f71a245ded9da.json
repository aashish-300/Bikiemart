{"ast":null,"code":"import _regeneratorRuntime from\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState, useEffect } from 'react'\n// import { Table, Button, Row, Col,Card } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import Paginate from '../components/Paginate'\n// import { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n// import { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n// function ProductListScreen({ history, match }) {\n//     const dispatch = useDispatch()\n//     const productList = useSelector(state => state.productList)\n//     const { loading, error, products, pages, page } = productList\n//     const productDelete = useSelector(state => state.productDelete)\n//     const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n//     const productCreate = useSelector(state => state.productCreate)\n//     const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n//     let keyword = history.location.search\n//     useEffect(() => {\n//         dispatch({ type: PRODUCT_CREATE_RESET })\n//         if (!userInfo.isAdmin) {\n//             history.push('/login')\n//         }\n//         if (successCreate) {\n//             history.push(`/admin/product/${createdProduct._id}/edit`)\n//         } else {\n//             dispatch(listProducts(keyword))\n//         }\n//     }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n//     const deleteHandler = (id) => {\n//         if (window.confirm('Are you sure you want to delete this product?')) {\n//             dispatch(deleteProduct(id))\n//         }\n//     }\n//     const createProductHandler = () => {\n//         dispatch(createProduct())\n//     }\n//     return (\n//         <div>\n//             <Row className='align-items-center'>\n//                 <Col>\n//                     <h1>Stocks/Inventory</h1>\n//                 </Col>\n//             </Row>\n//             {loadingDelete && <Loader />}\n//             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n//             {loadingCreate && <Loader />}\n//             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n//             {loading\n//                 ? (<Loader />)\n//                 : error\n//                     ? (<Message variant='danger'>{error}</Message>)\n//                     : (\n//                         <div>\n//                             <h4>Minimum Stocks</h4>\n//   <Row className=\"my-1\">\n//     {Object.entries(products.filter(product => product.countInStock < 10)\n//       .reduce((result, product) => {\n//         if (!result[product.category]) {\n//           result[product.category] = [];\n//         }\n//         result[product.category].push(product);\n//         return result;\n//       }, {}))\n//       .map(([category, products]) => (\n//         <Col xs={12} key={category}>\n//           <h5 class=\"center-heading\">{category}</h5>\n//           <Row>\n//             {products.map(product => (\n//               <Col xs={12} md={4} key={product._id} className=\"my-3\">\n//                 <Card>\n//                   <Card.Img variant=\"top\" src={product.image} />\n//                   <Card.Body>\n//                     <Card.Title>{product.name}</Card.Title>\n//                     <Card.Text>\n//                       Price:Rs {product.price}\n//                     </Card.Text>\n//                     <Card.Text>\n//                       Count in Stock: <span style={{color: \"red\", fontWeight: \"bold\"}}>{product.countInStock}</span>\n//                     </Card.Text>\n//                   </Card.Body>\n//                 </Card>\n//               </Col>\n//             ))}\n//           </Row>\n//         </Col>\n//       ))}\n//   </Row>\n//         <Paginate pages={pages} page={page} isAdmin={true} />\n//         </div>\n//         )}\n//     </div>\n//     )\n// }\n// export default ProductListScreen\n// //this is it\n// import React, { useState, useEffect } from \"react\";\n// import { LinkContainer } from \"react-router-bootstrap\";\n// import { Table, Button, Row, Col, Modal } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Loader from \"../components/Loader\";\n// import Message from \"../components/Message\";\n// import Paginate from \"../components/Paginate\";\n// import {\n//   listProducts,\n//   deleteProduct,\n//   createProduct,\n// } from \"../actions/productActions\";\n// import { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n// function ProductListScreen({ history, match }) {\n//   const dispatch = useDispatch();\n//   const [selectedImage, setSelectedImage] = useState(null);\n//   const productList = useSelector((state) => state.productList);\n//   const { loading, error, products, pages, page } = productList;\n//   const productDelete = useSelector((state) => state.productDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = productDelete;\n//   const productCreate = useSelector((state) => state.productCreate);\n//   const {\n//     loading: loadingCreate,\n//     error: errorCreate,\n//     success: successCreate,\n//     product: createdProduct,\n//   } = productCreate;\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n//   let keyword = history.location.search;\n//   useEffect(() => {\n//     dispatch({ type: PRODUCT_CREATE_RESET });\n//     if (!userInfo.isAdmin) {\n//       history.push(\"/login\");\n//     }\n//     if (successCreate) {\n//       history.push(`/admin/product/${createdProduct._id}/edit`);\n//     } else {\n//       dispatch(listProducts(keyword));\n//     }\n//   }, [\n//     dispatch,\n//     history,\n//     userInfo,\n//     successDelete,\n//     successCreate,\n//     createdProduct,\n//     keyword,\n//   ]);\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this product?\")) {\n//       dispatch(deleteProduct(id));\n//     }\n//   };\n//   const createProductHandler = () => {\n//     dispatch(createProduct());\n//   };\n//   return (\n//     <div>\n//       <Row className=\"align-items-center\">\n//         <Col>\n//           <h1>Products</h1>\n//         </Col>\n//         <Col className=\"text-right\">\n//           <Button className=\"my-3\" onClick={createProductHandler}>\n//             <i className=\"fas fa-plus\"></i> Create Product\n//           </Button>\n//         </Col>\n//       </Row>\n//       {loadingDelete && <Loader />}\n//       {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n//       {loadingCreate && <Loader />}\n//       {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <div>\n//           <Table striped bordered hover responsive className=\"table-sm\">\n//             <thead>\n//               <tr>\n//                 <th>ID</th>\n//                 <th>NAME</th>\n//                 <th>PRICE</th>\n//                 <th>CATEGORY</th>\n//                 <th>BRAND</th>\n//                 <th>countInStock</th>\n//                 <th>image</th>\n//                 <th></th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map(\n//                 (product) =>\n//                   product.countInStock < 5 && (\n//                     <tr key={product._id}>\n//                       <td>{product._id}</td>\n//                       <td>{product.name}</td>\n//                       <td>{product.price}</td>\n//                       <td>{product.category}</td>\n//                       <td>{product.brand}</td>\n//                       <td>{product.countInStock}</td>\n//                       <td>\n//                         <Button\n//                           variant=\"link\"\n//                           onClick={() =>\n//                             setSelectedImage(`/images/${product.image}`)\n//                           }\n//                         >\n//                           <img\n//                             src={`/images/${product.image}`}\n//                             alt={product.name}\n//                             width=\"50\"\n//                           />\n//                         </Button>\n//                       </td>\n//                       <td>\n//                         <LinkContainer\n//                           to={`/admin/product/${product._id}/edit`}\n//                         >\n//                           <Button variant=\"light\" className=\"btn-sm\">\n//                             <i className=\"fas fa-edit\"></i>\n//                           </Button>\n//                         </LinkContainer>\n//                         <Button\n//                           variant=\"danger\"\n//                           className=\"btn-sm\"\n//                           onClick={() => deleteHandler(product._id)}\n//                         >\n//                           <i className=\"fas fa-trash\"></i>\n//                         </Button>\n//                       </td>\n//                     </tr>\n//                   )\n//               )}\n//             </tbody>\n//           </Table>\n//           <Paginate pages={pages} page={page} isAdmin={true} />\n//         </div>\n//       )}\n//       {selectedImage && (\n//         <Modal show={true} onHide={() => setSelectedImage(null)}>\n//           <Modal.Body>\n//             <img src={selectedImage} alt=\"\" />\n//           </Modal.Body>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// }\n// export default ProductListScreen;\nimport React,{useState,useEffect}from'react';import axios from'axios';import{Link}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Loader from'../components/Loader';import Message from'../components/Message';import FormContainer from'../components/FormContainer';import{listProductDetails,updateProduct}from'../actions/productActions';import{PRODUCT_UPDATE_RESET}from'../constants/productConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProductEditScreen(_ref){var match=_ref.match,history=_ref.history;var productId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),price=_useState4[0],setPrice=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),image=_useState6[0],setImage=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),brand=_useState8[0],setBrand=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),category=_useState10[0],setCategory=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),countInStock=_useState12[0],setCountInStock=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),description=_useState14[0],setDescription=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),uploading=_useState16[0],setUploading=_useState16[1];var dispatch=useDispatch();var productDetails=useSelector(function(state){return state.productDetails;});var error=productDetails.error,loading=productDetails.loading,product=productDetails.product;var productUpdate=useSelector(function(state){return state.productUpdate;});var errorUpdate=productUpdate.error,loadingUpdate=productUpdate.loading,successUpdate=productUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:PRODUCT_UPDATE_RESET});history.push('/admin/productlist');}else{if(!product.name||product._id!==Number(productId)){dispatch(listProductDetails(productId));}else{setName(product.name);setPrice(product.price);setImage(product.image);setBrand(product.brand);setCategory(product.category);setCountInStock(product.countInStock);setDescription(product.description);}}},[dispatch,product,productId,history,successUpdate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateProduct({_id:productId,name:name,price:price,image:image,brand:brand,category:category,countInStock:countInStock,description:description}));};var uploadFileHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var file,formData,config,_yield$axios$post,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:file=e.target.files[0];formData=new FormData();formData.append('image',file);formData.append('product_id',productId);setUploading(true);_context.prev=5;config={headers:{'Content-Type':'multipart/form-data'}};_context.next=9;return axios.post('/api/products/upload/',formData,config);case 9:_yield$axios$post=_context.sent;data=_yield$axios$post.data;setImage(data);setUploading(false);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](5);setUploading(false);case 18:case\"end\":return _context.stop();}},_callee,null,[[5,15]]);}));return function uploadFileHandler(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/productlist\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit Product\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"price\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Price\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"Enter price\",value:price,onChange:function onChange(e){return setPrice(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"image\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Image\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter image\",value:image,onChange:function onChange(e){return setImage(e.target.value);}}),/*#__PURE__*/_jsx(Form.File,{id:\"image-file\",label:\"Choose File\",custom:true,onChange:uploadFileHandler}),uploading&&/*#__PURE__*/_jsx(Loader,{})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"brand\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Brand\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter brand\",value:brand,onChange:function onChange(e){return setBrand(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"countinstock\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Stock\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",placeholder:\"Enter stock\",value:countInStock,onChange:function onChange(e){return setCountInStock(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"category\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Category\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter category\",value:category,onChange:function onChange(e){return setCategory(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"description\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Description\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter description\",value:description,onChange:function onChange(e){return setDescription(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});}export default ProductEditScreen;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","error","loading","product","productUpdate","errorUpdate","loadingUpdate","successUpdate","success","type","push","_id","Number","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","post","data","value"],"sources":["D:/fyp/Ecommerce_Bikiemart/frontend/src/screens/ProductListScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n\n// import { Table, Button, Row, Col,Card } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Loader from '../components/Loader'\n// import Message from '../components/Message'\n// import Paginate from '../components/Paginate'\n// import { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n// import { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\n// function ProductListScreen({ history, match }) {\n\n//     const dispatch = useDispatch()\n\n//     const productList = useSelector(state => state.productList)\n//     const { loading, error, products, pages, page } = productList\n\n//     const productDelete = useSelector(state => state.productDelete)\n//     const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n//     const productCreate = useSelector(state => state.productCreate)\n//     const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n\n//     let keyword = history.location.search\n//     useEffect(() => {\n//         dispatch({ type: PRODUCT_CREATE_RESET })\n\n//         if (!userInfo.isAdmin) {\n//             history.push('/login')\n//         }\n\n//         if (successCreate) {\n//             history.push(`/admin/product/${createdProduct._id}/edit`)\n//         } else {\n//             dispatch(listProducts(keyword))\n//         }\n\n//     }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n//     const deleteHandler = (id) => {\n\n//         if (window.confirm('Are you sure you want to delete this product?')) {\n//             dispatch(deleteProduct(id))\n//         }\n//     }\n\n//     const createProductHandler = () => {\n//         dispatch(createProduct())\n//     }\n\n//     return (\n//         <div>\n//             <Row className='align-items-center'>\n//                 <Col>\n//                     <h1>Stocks/Inventory</h1>\n//                 </Col>\n\n//             </Row>\n\n//             {loadingDelete && <Loader />}\n//             {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n//             {loadingCreate && <Loader />}\n//             {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n//             {loading\n//                 ? (<Loader />)\n//                 : error\n//                     ? (<Message variant='danger'>{error}</Message>)\n//                     : (\n//                         <div>\n\n//                             <h4>Minimum Stocks</h4>\n//   <Row className=\"my-1\">\n//     {Object.entries(products.filter(product => product.countInStock < 10)\n//       .reduce((result, product) => {\n//         if (!result[product.category]) {\n//           result[product.category] = [];\n//         }\n//         result[product.category].push(product);\n//         return result;\n//       }, {}))\n//       .map(([category, products]) => (\n//         <Col xs={12} key={category}>\n//           <h5 class=\"center-heading\">{category}</h5>\n//           <Row>\n//             {products.map(product => (\n//               <Col xs={12} md={4} key={product._id} className=\"my-3\">\n//                 <Card>\n//                   <Card.Img variant=\"top\" src={product.image} />\n//                   <Card.Body>\n//                     <Card.Title>{product.name}</Card.Title>\n//                     <Card.Text>\n//                       Price:Rs {product.price}\n//                     </Card.Text>\n//                     <Card.Text>\n//                       Count in Stock: <span style={{color: \"red\", fontWeight: \"bold\"}}>{product.countInStock}</span>\n//                     </Card.Text>\n//                   </Card.Body>\n//                 </Card>\n//               </Col>\n//             ))}\n//           </Row>\n//         </Col>\n//       ))}\n//   </Row>\n\n//         <Paginate pages={pages} page={page} isAdmin={true} />\n//         </div>\n//         )}\n//     </div>\n//     )\n// }\n\n// export default ProductListScreen\n\n// //this is it\n// import React, { useState, useEffect } from \"react\";\n// import { LinkContainer } from \"react-router-bootstrap\";\n// import { Table, Button, Row, Col, Modal } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Loader from \"../components/Loader\";\n// import Message from \"../components/Message\";\n// import Paginate from \"../components/Paginate\";\n// import {\n//   listProducts,\n//   deleteProduct,\n//   createProduct,\n// } from \"../actions/productActions\";\n// import { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\n// function ProductListScreen({ history, match }) {\n//   const dispatch = useDispatch();\n//   const [selectedImage, setSelectedImage] = useState(null);\n\n//   const productList = useSelector((state) => state.productList);\n//   const { loading, error, products, pages, page } = productList;\n\n//   const productDelete = useSelector((state) => state.productDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = productDelete;\n\n//   const productCreate = useSelector((state) => state.productCreate);\n//   const {\n//     loading: loadingCreate,\n//     error: errorCreate,\n//     success: successCreate,\n//     product: createdProduct,\n//   } = productCreate;\n\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const { userInfo } = userLogin;\n\n//   let keyword = history.location.search;\n//   useEffect(() => {\n//     dispatch({ type: PRODUCT_CREATE_RESET });\n\n//     if (!userInfo.isAdmin) {\n//       history.push(\"/login\");\n//     }\n\n//     if (successCreate) {\n//       history.push(`/admin/product/${createdProduct._id}/edit`);\n//     } else {\n//       dispatch(listProducts(keyword));\n//     }\n//   }, [\n//     dispatch,\n//     history,\n//     userInfo,\n//     successDelete,\n//     successCreate,\n//     createdProduct,\n//     keyword,\n//   ]);\n\n//   const deleteHandler = (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this product?\")) {\n//       dispatch(deleteProduct(id));\n//     }\n//   };\n\n//   const createProductHandler = () => {\n//     dispatch(createProduct());\n//   };\n\n//   return (\n//     <div>\n//       <Row className=\"align-items-center\">\n//         <Col>\n//           <h1>Products</h1>\n//         </Col>\n\n//         <Col className=\"text-right\">\n//           <Button className=\"my-3\" onClick={createProductHandler}>\n//             <i className=\"fas fa-plus\"></i> Create Product\n//           </Button>\n//         </Col>\n//       </Row>\n\n//       {loadingDelete && <Loader />}\n//       {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n//       {loadingCreate && <Loader />}\n//       {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <div>\n//           <Table striped bordered hover responsive className=\"table-sm\">\n//             <thead>\n//               <tr>\n//                 <th>ID</th>\n//                 <th>NAME</th>\n//                 <th>PRICE</th>\n//                 <th>CATEGORY</th>\n//                 <th>BRAND</th>\n//                 <th>countInStock</th>\n//                 <th>image</th>\n\n//                 <th></th>\n//               </tr>\n//             </thead>\n\n//             <tbody>\n//               {products.map(\n//                 (product) =>\n//                   product.countInStock < 5 && (\n//                     <tr key={product._id}>\n//                       <td>{product._id}</td>\n//                       <td>{product.name}</td>\n//                       <td>{product.price}</td>\n//                       <td>{product.category}</td>\n//                       <td>{product.brand}</td>\n//                       <td>{product.countInStock}</td>\n//                       <td>\n//                         <Button\n//                           variant=\"link\"\n//                           onClick={() =>\n//                             setSelectedImage(`/images/${product.image}`)\n//                           }\n//                         >\n//                           <img\n//                             src={`/images/${product.image}`}\n//                             alt={product.name}\n//                             width=\"50\"\n//                           />\n//                         </Button>\n//                       </td>\n//                       <td>\n//                         <LinkContainer\n//                           to={`/admin/product/${product._id}/edit`}\n//                         >\n//                           <Button variant=\"light\" className=\"btn-sm\">\n//                             <i className=\"fas fa-edit\"></i>\n//                           </Button>\n//                         </LinkContainer>\n//                         <Button\n//                           variant=\"danger\"\n//                           className=\"btn-sm\"\n//                           onClick={() => deleteHandler(product._id)}\n//                         >\n//                           <i className=\"fas fa-trash\"></i>\n//                         </Button>\n//                       </td>\n//                     </tr>\n//                   )\n//               )}\n//             </tbody>\n//           </Table>\n//           <Paginate pages={pages} page={page} isAdmin={true} />\n//         </div>\n//       )}\n//       {selectedImage && (\n//         <Modal show={true} onHide={() => setSelectedImage(null)}>\n//           <Modal.Body>\n//             <img src={selectedImage} alt=\"\" />\n//           </Modal.Body>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default ProductListScreen;\n\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen\n"],"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"},"metadata":{},"sourceType":"module"}