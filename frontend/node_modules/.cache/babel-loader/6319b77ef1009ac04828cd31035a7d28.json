{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classCallCheck = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar EventEmitter = require('events');\nvar shared = require('../shared');\nvar mimeTypes = require('../mime-funcs/mime-types');\nvar MailComposer = require('../mail-composer');\nvar DKIM = require('../dkim');\nvar httpProxyClient = require('../smtp-connection/http-proxy-client');\nvar util = require('util');\nvar urllib = require('url');\nvar packageData = require('../../package.json');\nvar MailMessage = require('./mail-message');\nvar net = require('net');\nvar dns = require('dns');\nvar crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nvar Mail = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Mail, _EventEmitter);\n  var _super = _createSuper(Mail);\n  function Mail(transporter, options, defaults) {\n    var _this;\n    _classCallCheck(this, Mail);\n    _this = _super.call(this);\n    _this.options = options || {};\n    _this._defaults = defaults || {};\n    _this._defaultPlugins = {\n      compile: [function () {\n        var _this2;\n        return (_this2 = _this)._convertDataImages.apply(_this2, arguments);\n      }],\n      stream: []\n    };\n    _this._userPlugins = {\n      compile: [],\n      stream: []\n    };\n    _this.meta = new Map();\n    _this.dkim = _this.options.dkim ? new DKIM(_this.options.dkim) : false;\n    _this.transporter = transporter;\n    _this.transporter.mailer = _assertThisInitialized(_this);\n    _this.logger = shared.getLogger(_this.options, {\n      component: _this.options.component || 'mail'\n    });\n    _this.logger.debug({\n      tnx: 'create'\n    }, 'Creating transport: %s', _this.getVersionString());\n\n    // setup emit handlers for the transporter\n    if (typeof _this.transporter.on === 'function') {\n      // deprecated log interface\n      _this.transporter.on('log', function (log) {\n        _this.logger.debug({\n          tnx: 'transport'\n        }, '%s: %s', log.type, log.message);\n      });\n\n      // transporter errors\n      _this.transporter.on('error', function (err) {\n        _this.logger.error({\n          err: err,\n          tnx: 'transport'\n        }, 'Transport Error: %s', err.message);\n        _this.emit('error', err);\n      });\n\n      // indicates if the sender has became idle\n      _this.transporter.on('idle', function () {\n        var _this3;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        (_this3 = _this).emit.apply(_this3, ['idle'].concat(args));\n      });\n    }\n\n    /**\n     * Optional methods passed to the underlying transport object\n     */\n    ['close', 'isIdle', 'verify'].forEach(function (method) {\n      _this[method] = function () {\n        if (typeof _this.transporter[method] === 'function') {\n          var _this$transporter;\n          if (method === 'verify' && typeof _this.getSocket === 'function') {\n            _this.transporter.getSocket = _this.getSocket;\n            _this.getSocket = false;\n          }\n          return (_this$transporter = _this.transporter)[method].apply(_this$transporter, arguments);\n        } else {\n          _this.logger.warn({\n            tnx: 'transport',\n            methodName: method\n          }, 'Non existing method %s called for transport', method);\n          return false;\n        }\n      };\n    });\n\n    // setup proxy handling\n    if (_this.options.proxy && typeof _this.options.proxy === 'string') {\n      _this.setupProxy(_this.options.proxy);\n    }\n    return _this;\n  }\n  _createClass(Mail, [{\n    key: \"use\",\n    value: function use(step, plugin) {\n      step = (step || '').toString();\n      if (!this._userPlugins.hasOwnProperty(step)) {\n        this._userPlugins[step] = [plugin];\n      } else {\n        this._userPlugins[step].push(plugin);\n      }\n      return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n  }, {\n    key: \"sendMail\",\n    value: function sendMail(data) {\n      var _this4 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var promise;\n      if (!callback) {\n        promise = new Promise(function (resolve, reject) {\n          callback = shared.callbackPromise(resolve, reject);\n        });\n      }\n      if (typeof this.getSocket === 'function') {\n        this.transporter.getSocket = this.getSocket;\n        this.getSocket = false;\n      }\n      var mail = new MailMessage(this, data);\n      this.logger.debug({\n        tnx: 'transport',\n        name: this.transporter.name,\n        version: this.transporter.version,\n        action: 'send'\n      }, 'Sending mail using %s/%s', this.transporter.name, this.transporter.version);\n      this._processPlugins('compile', mail, function (err) {\n        if (err) {\n          _this4.logger.error({\n            err: err,\n            tnx: 'plugin',\n            action: 'compile'\n          }, 'PluginCompile Error: %s', err.message);\n          return callback(err);\n        }\n        mail.message = new MailComposer(mail.data).compile();\n        mail.setMailerHeader();\n        mail.setPriorityHeaders();\n        mail.setListHeaders();\n        _this4._processPlugins('stream', mail, function (err) {\n          if (err) {\n            _this4.logger.error({\n              err: err,\n              tnx: 'plugin',\n              action: 'stream'\n            }, 'PluginStream Error: %s', err.message);\n            return callback(err);\n          }\n          if (mail.data.dkim || _this4.dkim) {\n            mail.message.processFunc(function (input) {\n              var dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : _this4.dkim;\n              _this4.logger.debug({\n                tnx: 'DKIM',\n                messageId: mail.message.messageId(),\n                dkimDomains: dkim.keys.map(function (key) {\n                  return key.keySelector + '.' + key.domainName;\n                }).join(', ')\n              }, 'Signing outgoing message with %s keys', dkim.keys.length);\n              return dkim.sign(input, mail.data._dkim);\n            });\n          }\n          _this4.transporter.send(mail, function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n            if (args[0]) {\n              _this4.logger.error({\n                err: args[0],\n                tnx: 'transport',\n                action: 'send'\n              }, 'Send Error: %s', args[0].message);\n            }\n            callback.apply(void 0, args);\n          });\n        });\n      });\n      return promise;\n    }\n  }, {\n    key: \"getVersionString\",\n    value: function getVersionString() {\n      return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n  }, {\n    key: \"_processPlugins\",\n    value: function _processPlugins(step, mail, callback) {\n      step = (step || '').toString();\n      if (!this._userPlugins.hasOwnProperty(step)) {\n        return callback();\n      }\n      var userPlugins = this._userPlugins[step] || [];\n      var defaultPlugins = this._defaultPlugins[step] || [];\n      if (userPlugins.length) {\n        this.logger.debug({\n          tnx: 'transaction',\n          pluginCount: userPlugins.length,\n          step: step\n        }, 'Using %s plugins for %s', userPlugins.length, step);\n      }\n      if (userPlugins.length + defaultPlugins.length === 0) {\n        return callback();\n      }\n      var pos = 0;\n      var block = 'default';\n      var processPlugins = function processPlugins() {\n        var curplugins = block === 'default' ? defaultPlugins : userPlugins;\n        if (pos >= curplugins.length) {\n          if (block === 'default' && userPlugins.length) {\n            block = 'user';\n            pos = 0;\n            curplugins = userPlugins;\n          } else {\n            return callback();\n          }\n        }\n        var plugin = curplugins[pos++];\n        plugin(mail, function (err) {\n          if (err) {\n            return callback(err);\n          }\n          processPlugins();\n        });\n      };\n      processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n  }, {\n    key: \"setupProxy\",\n    value: function setupProxy(proxyUrl) {\n      var _this5 = this;\n      var proxy = urllib.parse(proxyUrl);\n\n      // setup socket handler for the mailer object\n      this.getSocket = function (options, callback) {\n        var protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n        if (_this5.meta.has('proxy_handler_' + protocol)) {\n          return _this5.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n        }\n        switch (protocol) {\n          // Connect using a HTTP CONNECT method\n          case 'http':\n          case 'https':\n            httpProxyClient(proxy.href, options.port, options.host, function (err, socket) {\n              if (err) {\n                return callback(err);\n              }\n              return callback(null, {\n                connection: socket\n              });\n            });\n            return;\n          case 'socks':\n          case 'socks5':\n          case 'socks4':\n          case 'socks4a':\n            {\n              if (!_this5.meta.has('proxy_socks_module')) {\n                return callback(new Error('Socks module not loaded'));\n              }\n              var connect = function connect(ipaddress) {\n                var _connectionOpts;\n                var proxyV2 = !!_this5.meta.get('proxy_socks_module').SocksClient;\n                var socksClient = proxyV2 ? _this5.meta.get('proxy_socks_module').SocksClient : _this5.meta.get('proxy_socks_module');\n                var proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                var connectionOpts = (_connectionOpts = {\n                  proxy: {\n                    ipaddress: ipaddress,\n                    port: Number(proxy.port),\n                    type: proxyType\n                  }\n                }, _defineProperty(_connectionOpts, proxyV2 ? 'destination' : 'target', {\n                  host: options.host,\n                  port: options.port\n                }), _defineProperty(_connectionOpts, \"command\", 'connect'), _connectionOpts);\n                if (proxy.auth) {\n                  var username = decodeURIComponent(proxy.auth.split(':').shift());\n                  var password = decodeURIComponent(proxy.auth.split(':').pop());\n                  if (proxyV2) {\n                    connectionOpts.proxy.userId = username;\n                    connectionOpts.proxy.password = password;\n                  } else if (proxyType === 4) {\n                    connectionOpts.userid = username;\n                  } else {\n                    connectionOpts.authentication = {\n                      username: username,\n                      password: password\n                    };\n                  }\n                }\n                socksClient.createConnection(connectionOpts, function (err, info) {\n                  if (err) {\n                    return callback(err);\n                  }\n                  return callback(null, {\n                    connection: info.socket || info\n                  });\n                });\n              };\n              if (net.isIP(proxy.hostname)) {\n                return connect(proxy.hostname);\n              }\n              return dns.resolve(proxy.hostname, function (err, address) {\n                if (err) {\n                  return callback(err);\n                }\n                connect(Array.isArray(address) ? address[0] : address);\n              });\n            }\n        }\n        callback(new Error('Unknown proxy configuration'));\n      };\n    }\n  }, {\n    key: \"_convertDataImages\",\n    value: function _convertDataImages(mail, callback) {\n      if (!this.options.attachDataUrls && !mail.data.attachDataUrls || !mail.data.html) {\n        return callback();\n      }\n      mail.resolveContent(mail.data, 'html', function (err, html) {\n        if (err) {\n          return callback(err);\n        }\n        var cidCounter = 0;\n        html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, function (match, prefix, dataUri, mimeType) {\n          var cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n          if (!mail.data.attachments) {\n            mail.data.attachments = [];\n          }\n          if (!Array.isArray(mail.data.attachments)) {\n            mail.data.attachments = [].concat(mail.data.attachments || []);\n          }\n          mail.data.attachments.push({\n            path: dataUri,\n            cid: cid,\n            filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n          });\n          return prefix + 'cid:' + cid;\n        });\n        mail.data.html = html;\n        callback();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      return this.meta.set(key, value);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.meta.get(key);\n    }\n  }]);\n  return Mail;\n}(EventEmitter);\nmodule.exports = Mail;","map":{"version":3,"names":["EventEmitter","require","shared","mimeTypes","MailComposer","DKIM","httpProxyClient","util","urllib","packageData","MailMessage","net","dns","crypto","Mail","transporter","options","defaults","_defaults","_defaultPlugins","compile","_convertDataImages","stream","_userPlugins","meta","Map","dkim","mailer","logger","getLogger","component","debug","tnx","getVersionString","on","log","type","message","err","error","emit","args","forEach","method","getSocket","warn","methodName","proxy","setupProxy","step","plugin","toString","hasOwnProperty","push","data","callback","promise","Promise","resolve","reject","callbackPromise","mail","name","version","action","_processPlugins","setMailerHeader","setPriorityHeaders","setListHeaders","processFunc","input","messageId","dkimDomains","keys","map","key","keySelector","domainName","join","length","sign","_dkim","send","format","homepage","userPlugins","defaultPlugins","pluginCount","pos","block","processPlugins","curplugins","proxyUrl","parse","protocol","replace","toLowerCase","has","get","href","port","host","socket","connection","Error","connect","ipaddress","proxyV2","SocksClient","socksClient","proxyType","Number","connectionOpts","auth","username","decodeURIComponent","split","shift","password","pop","userId","userid","authentication","createConnection","info","isIP","hostname","address","Array","isArray","attachDataUrls","html","resolveContent","cidCounter","match","prefix","dataUri","mimeType","cid","randomBytes","attachments","concat","path","filename","detectExtension","value","set","module","exports"],"sources":["D:/fyp/Ecommerce_Bikiemart/frontend/node_modules/nodemailer/lib/mailer/index.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst shared = require('../shared');\nconst mimeTypes = require('../mime-funcs/mime-types');\nconst MailComposer = require('../mail-composer');\nconst DKIM = require('../dkim');\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\nconst util = require('util');\nconst urllib = require('url');\nconst packageData = require('../../package.json');\nconst MailMessage = require('./mail-message');\nconst net = require('net');\nconst dns = require('dns');\nconst crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nclass Mail extends EventEmitter {\n    constructor(transporter, options, defaults) {\n        super();\n\n        this.options = options || {};\n        this._defaults = defaults || {};\n\n        this._defaultPlugins = {\n            compile: [(...args) => this._convertDataImages(...args)],\n            stream: []\n        };\n\n        this._userPlugins = {\n            compile: [],\n            stream: []\n        };\n\n        this.meta = new Map();\n\n        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n\n        this.transporter = transporter;\n        this.transporter.mailer = this;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'mail'\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'create'\n            },\n            'Creating transport: %s',\n            this.getVersionString()\n        );\n\n        // setup emit handlers for the transporter\n        if (typeof this.transporter.on === 'function') {\n            // deprecated log interface\n            this.transporter.on('log', log => {\n                this.logger.debug(\n                    {\n                        tnx: 'transport'\n                    },\n                    '%s: %s',\n                    log.type,\n                    log.message\n                );\n            });\n\n            // transporter errors\n            this.transporter.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'transport'\n                    },\n                    'Transport Error: %s',\n                    err.message\n                );\n                this.emit('error', err);\n            });\n\n            // indicates if the sender has became idle\n            this.transporter.on('idle', (...args) => {\n                this.emit('idle', ...args);\n            });\n        }\n\n        /**\n         * Optional methods passed to the underlying transport object\n         */\n        ['close', 'isIdle', 'verify'].forEach(method => {\n            this[method] = (...args) => {\n                if (typeof this.transporter[method] === 'function') {\n                    if (method === 'verify' && typeof this.getSocket === 'function') {\n                        this.transporter.getSocket = this.getSocket;\n                        this.getSocket = false;\n                    }\n                    return this.transporter[method](...args);\n                } else {\n                    this.logger.warn(\n                        {\n                            tnx: 'transport',\n                            methodName: method\n                        },\n                        'Non existing method %s called for transport',\n                        method\n                    );\n                    return false;\n                }\n            };\n        });\n\n        // setup proxy handling\n        if (this.options.proxy && typeof this.options.proxy === 'string') {\n            this.setupProxy(this.options.proxy);\n        }\n    }\n\n    use(step, plugin) {\n        step = (step || '').toString();\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            this._userPlugins[step] = [plugin];\n        } else {\n            this._userPlugins[step].push(plugin);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n    sendMail(data, callback = null) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        if (typeof this.getSocket === 'function') {\n            this.transporter.getSocket = this.getSocket;\n            this.getSocket = false;\n        }\n\n        let mail = new MailMessage(this, data);\n\n        this.logger.debug(\n            {\n                tnx: 'transport',\n                name: this.transporter.name,\n                version: this.transporter.version,\n                action: 'send'\n            },\n            'Sending mail using %s/%s',\n            this.transporter.name,\n            this.transporter.version\n        );\n\n        this._processPlugins('compile', mail, err => {\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'plugin',\n                        action: 'compile'\n                    },\n                    'PluginCompile Error: %s',\n                    err.message\n                );\n                return callback(err);\n            }\n\n            mail.message = new MailComposer(mail.data).compile();\n\n            mail.setMailerHeader();\n            mail.setPriorityHeaders();\n            mail.setListHeaders();\n\n            this._processPlugins('stream', mail, err => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'plugin',\n                            action: 'stream'\n                        },\n                        'PluginStream Error: %s',\n                        err.message\n                    );\n                    return callback(err);\n                }\n\n                if (mail.data.dkim || this.dkim) {\n                    mail.message.processFunc(input => {\n                        let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n                        this.logger.debug(\n                            {\n                                tnx: 'DKIM',\n                                messageId: mail.message.messageId(),\n                                dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n                            },\n                            'Signing outgoing message with %s keys',\n                            dkim.keys.length\n                        );\n                        return dkim.sign(input, mail.data._dkim);\n                    });\n                }\n\n                this.transporter.send(mail, (...args) => {\n                    if (args[0]) {\n                        this.logger.error(\n                            {\n                                err: args[0],\n                                tnx: 'transport',\n                                action: 'send'\n                            },\n                            'Send Error: %s',\n                            args[0].message\n                        );\n                    }\n                    callback(...args);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n    getVersionString() {\n        return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n\n    _processPlugins(step, mail, callback) {\n        step = (step || '').toString();\n\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            return callback();\n        }\n\n        let userPlugins = this._userPlugins[step] || [];\n        let defaultPlugins = this._defaultPlugins[step] || [];\n\n        if (userPlugins.length) {\n            this.logger.debug(\n                {\n                    tnx: 'transaction',\n                    pluginCount: userPlugins.length,\n                    step\n                },\n                'Using %s plugins for %s',\n                userPlugins.length,\n                step\n            );\n        }\n\n        if (userPlugins.length + defaultPlugins.length === 0) {\n            return callback();\n        }\n\n        let pos = 0;\n        let block = 'default';\n        let processPlugins = () => {\n            let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n            if (pos >= curplugins.length) {\n                if (block === 'default' && userPlugins.length) {\n                    block = 'user';\n                    pos = 0;\n                    curplugins = userPlugins;\n                } else {\n                    return callback();\n                }\n            }\n            let plugin = curplugins[pos++];\n            plugin(mail, err => {\n                if (err) {\n                    return callback(err);\n                }\n                processPlugins();\n            });\n        };\n\n        processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n    setupProxy(proxyUrl) {\n        let proxy = urllib.parse(proxyUrl);\n\n        // setup socket handler for the mailer object\n        this.getSocket = (options, callback) => {\n            let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n            if (this.meta.has('proxy_handler_' + protocol)) {\n                return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n            }\n\n            switch (protocol) {\n                // Connect using a HTTP CONNECT method\n                case 'http':\n                case 'https':\n                    httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        return callback(null, {\n                            connection: socket\n                        });\n                    });\n                    return;\n                case 'socks':\n                case 'socks5':\n                case 'socks4':\n                case 'socks4a': {\n                    if (!this.meta.has('proxy_socks_module')) {\n                        return callback(new Error('Socks module not loaded'));\n                    }\n                    let connect = ipaddress => {\n                        let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n                        let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n                        let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                        let connectionOpts = {\n                            proxy: {\n                                ipaddress,\n                                port: Number(proxy.port),\n                                type: proxyType\n                            },\n                            [proxyV2 ? 'destination' : 'target']: {\n                                host: options.host,\n                                port: options.port\n                            },\n                            command: 'connect'\n                        };\n\n                        if (proxy.auth) {\n                            let username = decodeURIComponent(proxy.auth.split(':').shift());\n                            let password = decodeURIComponent(proxy.auth.split(':').pop());\n                            if (proxyV2) {\n                                connectionOpts.proxy.userId = username;\n                                connectionOpts.proxy.password = password;\n                            } else if (proxyType === 4) {\n                                connectionOpts.userid = username;\n                            } else {\n                                connectionOpts.authentication = {\n                                    username,\n                                    password\n                                };\n                            }\n                        }\n\n                        socksClient.createConnection(connectionOpts, (err, info) => {\n                            if (err) {\n                                return callback(err);\n                            }\n                            return callback(null, {\n                                connection: info.socket || info\n                            });\n                        });\n                    };\n\n                    if (net.isIP(proxy.hostname)) {\n                        return connect(proxy.hostname);\n                    }\n\n                    return dns.resolve(proxy.hostname, (err, address) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        connect(Array.isArray(address) ? address[0] : address);\n                    });\n                }\n            }\n            callback(new Error('Unknown proxy configuration'));\n        };\n    }\n\n    _convertDataImages(mail, callback) {\n        if ((!this.options.attachDataUrls && !mail.data.attachDataUrls) || !mail.data.html) {\n            return callback();\n        }\n        mail.resolveContent(mail.data, 'html', (err, html) => {\n            if (err) {\n                return callback(err);\n            }\n            let cidCounter = 0;\n            html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n                let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n                if (!mail.data.attachments) {\n                    mail.data.attachments = [];\n                }\n                if (!Array.isArray(mail.data.attachments)) {\n                    mail.data.attachments = [].concat(mail.data.attachments || []);\n                }\n                mail.data.attachments.push({\n                    path: dataUri,\n                    cid,\n                    filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n                });\n                return prefix + 'cid:' + cid;\n            });\n            mail.data.html = html;\n            callback();\n        });\n    }\n\n    set(key, value) {\n        return this.meta.set(key, value);\n    }\n\n    get(key) {\n        return this.meta.get(key);\n    }\n}\n\nmodule.exports = Mail;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,IAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtC,IAAMC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;AACnC,IAAME,SAAS,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AACrD,IAAMG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAMI,IAAI,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAC/B,IAAMK,eAAe,GAAGL,OAAO,CAAC,sCAAsC,CAAC;AACvE,IAAMM,IAAI,GAAGN,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAMO,MAAM,GAAGP,OAAO,CAAC,KAAK,CAAC;AAC7B,IAAMQ,WAAW,GAAGR,OAAO,CAAC,oBAAoB,CAAC;AACjD,IAAMS,WAAW,GAAGT,OAAO,CAAC,gBAAgB,CAAC;AAC7C,IAAMU,GAAG,GAAGV,OAAO,CAAC,KAAK,CAAC;AAC1B,IAAMW,GAAG,GAAGX,OAAO,CAAC,KAAK,CAAC;AAC1B,IAAMY,MAAM,GAAGZ,OAAO,CAAC,QAAQ,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AALA,IAMMa,IAAI;EAAA;EAAA;EACN,cAAYC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAE;IAAA;IAAA;IACxC;IAEA,MAAKD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAC5B,MAAKE,SAAS,GAAGD,QAAQ,IAAI,CAAC,CAAC;IAE/B,MAAKE,eAAe,GAAG;MACnBC,OAAO,EAAE,CAAC;QAAA;QAAA,OAAa,iBAAKC,kBAAkB,yBAAS;MAAA,EAAC;MACxDC,MAAM,EAAE;IACZ,CAAC;IAED,MAAKC,YAAY,GAAG;MAChBH,OAAO,EAAE,EAAE;MACXE,MAAM,EAAE;IACZ,CAAC;IAED,MAAKE,IAAI,GAAG,IAAIC,GAAG,EAAE;IAErB,MAAKC,IAAI,GAAG,MAAKV,OAAO,CAACU,IAAI,GAAG,IAAIrB,IAAI,CAAC,MAAKW,OAAO,CAACU,IAAI,CAAC,GAAG,KAAK;IAEnE,MAAKX,WAAW,GAAGA,WAAW;IAC9B,MAAKA,WAAW,CAACY,MAAM,gCAAO;IAE9B,MAAKC,MAAM,GAAG1B,MAAM,CAAC2B,SAAS,CAAC,MAAKb,OAAO,EAAE;MACzCc,SAAS,EAAE,MAAKd,OAAO,CAACc,SAAS,IAAI;IACzC,CAAC,CAAC;IAEF,MAAKF,MAAM,CAACG,KAAK,CACb;MACIC,GAAG,EAAE;IACT,CAAC,EACD,wBAAwB,EACxB,MAAKC,gBAAgB,EAAE,CAC1B;;IAED;IACA,IAAI,OAAO,MAAKlB,WAAW,CAACmB,EAAE,KAAK,UAAU,EAAE;MAC3C;MACA,MAAKnB,WAAW,CAACmB,EAAE,CAAC,KAAK,EAAE,UAAAC,GAAG,EAAI;QAC9B,MAAKP,MAAM,CAACG,KAAK,CACb;UACIC,GAAG,EAAE;QACT,CAAC,EACD,QAAQ,EACRG,GAAG,CAACC,IAAI,EACRD,GAAG,CAACE,OAAO,CACd;MACL,CAAC,CAAC;;MAEF;MACA,MAAKtB,WAAW,CAACmB,EAAE,CAAC,OAAO,EAAE,UAAAI,GAAG,EAAI;QAChC,MAAKV,MAAM,CAACW,KAAK,CACb;UACID,GAAG,EAAHA,GAAG;UACHN,GAAG,EAAE;QACT,CAAC,EACD,qBAAqB,EACrBM,GAAG,CAACD,OAAO,CACd;QACD,MAAKG,IAAI,CAAC,OAAO,EAAEF,GAAG,CAAC;MAC3B,CAAC,CAAC;;MAEF;MACA,MAAKvB,WAAW,CAACmB,EAAE,CAAC,MAAM,EAAE,YAAa;QAAA;QAAA,kCAATO,IAAI;UAAJA,IAAI;QAAA;QAChC,iBAAKD,IAAI,gBAAC,MAAM,SAAKC,IAAI,EAAC;MAC9B,CAAC,CAAC;IACN;;IAEA;AACR;AACA;IACQ,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAI;MAC5C,MAAKA,MAAM,CAAC,GAAG,YAAa;QACxB,IAAI,OAAO,MAAK5B,WAAW,CAAC4B,MAAM,CAAC,KAAK,UAAU,EAAE;UAAA;UAChD,IAAIA,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAKC,SAAS,KAAK,UAAU,EAAE;YAC7D,MAAK7B,WAAW,CAAC6B,SAAS,GAAG,MAAKA,SAAS;YAC3C,MAAKA,SAAS,GAAG,KAAK;UAC1B;UACA,OAAO,2BAAK7B,WAAW,EAAC4B,MAAM,CAAC,oCAAS;QAC5C,CAAC,MAAM;UACH,MAAKf,MAAM,CAACiB,IAAI,CACZ;YACIb,GAAG,EAAE,WAAW;YAChBc,UAAU,EAAEH;UAChB,CAAC,EACD,6CAA6C,EAC7CA,MAAM,CACT;UACD,OAAO,KAAK;QAChB;MACJ,CAAC;IACL,CAAC,CAAC;;IAEF;IACA,IAAI,MAAK3B,OAAO,CAAC+B,KAAK,IAAI,OAAO,MAAK/B,OAAO,CAAC+B,KAAK,KAAK,QAAQ,EAAE;MAC9D,MAAKC,UAAU,CAAC,MAAKhC,OAAO,CAAC+B,KAAK,CAAC;IACvC;IAAC;EACL;EAAC;IAAA;IAAA,OAED,aAAIE,IAAI,EAAEC,MAAM,EAAE;MACdD,IAAI,GAAG,CAACA,IAAI,IAAI,EAAE,EAAEE,QAAQ,EAAE;MAC9B,IAAI,CAAC,IAAI,CAAC5B,YAAY,CAAC6B,cAAc,CAACH,IAAI,CAAC,EAAE;QACzC,IAAI,CAAC1B,YAAY,CAAC0B,IAAI,CAAC,GAAG,CAACC,MAAM,CAAC;MACtC,CAAC,MAAM;QACH,IAAI,CAAC3B,YAAY,CAAC0B,IAAI,CAAC,CAACI,IAAI,CAACH,MAAM,CAAC;MACxC;MAEA,OAAO,IAAI;IACf;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,kBAASI,IAAI,EAAmB;MAAA;MAAA,IAAjBC,QAAQ,uEAAG,IAAI;MAC1B,IAAIC,OAAO;MAEX,IAAI,CAACD,QAAQ,EAAE;QACXC,OAAO,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;UACvCJ,QAAQ,GAAGrD,MAAM,CAAC0D,eAAe,CAACF,OAAO,EAAEC,MAAM,CAAC;QACtD,CAAC,CAAC;MACN;MAEA,IAAI,OAAO,IAAI,CAACf,SAAS,KAAK,UAAU,EAAE;QACtC,IAAI,CAAC7B,WAAW,CAAC6B,SAAS,GAAG,IAAI,CAACA,SAAS;QAC3C,IAAI,CAACA,SAAS,GAAG,KAAK;MAC1B;MAEA,IAAIiB,IAAI,GAAG,IAAInD,WAAW,CAAC,IAAI,EAAE4C,IAAI,CAAC;MAEtC,IAAI,CAAC1B,MAAM,CAACG,KAAK,CACb;QACIC,GAAG,EAAE,WAAW;QAChB8B,IAAI,EAAE,IAAI,CAAC/C,WAAW,CAAC+C,IAAI;QAC3BC,OAAO,EAAE,IAAI,CAAChD,WAAW,CAACgD,OAAO;QACjCC,MAAM,EAAE;MACZ,CAAC,EACD,0BAA0B,EAC1B,IAAI,CAACjD,WAAW,CAAC+C,IAAI,EACrB,IAAI,CAAC/C,WAAW,CAACgD,OAAO,CAC3B;MAED,IAAI,CAACE,eAAe,CAAC,SAAS,EAAEJ,IAAI,EAAE,UAAAvB,GAAG,EAAI;QACzC,IAAIA,GAAG,EAAE;UACL,MAAI,CAACV,MAAM,CAACW,KAAK,CACb;YACID,GAAG,EAAHA,GAAG;YACHN,GAAG,EAAE,QAAQ;YACbgC,MAAM,EAAE;UACZ,CAAC,EACD,yBAAyB,EACzB1B,GAAG,CAACD,OAAO,CACd;UACD,OAAOkB,QAAQ,CAACjB,GAAG,CAAC;QACxB;QAEAuB,IAAI,CAACxB,OAAO,GAAG,IAAIjC,YAAY,CAACyD,IAAI,CAACP,IAAI,CAAC,CAAClC,OAAO,EAAE;QAEpDyC,IAAI,CAACK,eAAe,EAAE;QACtBL,IAAI,CAACM,kBAAkB,EAAE;QACzBN,IAAI,CAACO,cAAc,EAAE;QAErB,MAAI,CAACH,eAAe,CAAC,QAAQ,EAAEJ,IAAI,EAAE,UAAAvB,GAAG,EAAI;UACxC,IAAIA,GAAG,EAAE;YACL,MAAI,CAACV,MAAM,CAACW,KAAK,CACb;cACID,GAAG,EAAHA,GAAG;cACHN,GAAG,EAAE,QAAQ;cACbgC,MAAM,EAAE;YACZ,CAAC,EACD,wBAAwB,EACxB1B,GAAG,CAACD,OAAO,CACd;YACD,OAAOkB,QAAQ,CAACjB,GAAG,CAAC;UACxB;UAEA,IAAIuB,IAAI,CAACP,IAAI,CAAC5B,IAAI,IAAI,MAAI,CAACA,IAAI,EAAE;YAC7BmC,IAAI,CAACxB,OAAO,CAACgC,WAAW,CAAC,UAAAC,KAAK,EAAI;cAC9B,IAAI5C,IAAI,GAAGmC,IAAI,CAACP,IAAI,CAAC5B,IAAI,GAAG,IAAIrB,IAAI,CAACwD,IAAI,CAACP,IAAI,CAAC5B,IAAI,CAAC,GAAG,MAAI,CAACA,IAAI;cAChE,MAAI,CAACE,MAAM,CAACG,KAAK,CACb;gBACIC,GAAG,EAAE,MAAM;gBACXuC,SAAS,EAAEV,IAAI,CAACxB,OAAO,CAACkC,SAAS,EAAE;gBACnCC,WAAW,EAAE9C,IAAI,CAAC+C,IAAI,CAACC,GAAG,CAAC,UAAAC,GAAG;kBAAA,OAAIA,GAAG,CAACC,WAAW,GAAG,GAAG,GAAGD,GAAG,CAACE,UAAU;gBAAA,EAAC,CAACC,IAAI,CAAC,IAAI;cACvF,CAAC,EACD,uCAAuC,EACvCpD,IAAI,CAAC+C,IAAI,CAACM,MAAM,CACnB;cACD,OAAOrD,IAAI,CAACsD,IAAI,CAACV,KAAK,EAAET,IAAI,CAACP,IAAI,CAAC2B,KAAK,CAAC;YAC5C,CAAC,CAAC;UACN;UAEA,MAAI,CAAClE,WAAW,CAACmE,IAAI,CAACrB,IAAI,EAAE,YAAa;YAAA,mCAATpB,IAAI;cAAJA,IAAI;YAAA;YAChC,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;cACT,MAAI,CAACb,MAAM,CAACW,KAAK,CACb;gBACID,GAAG,EAAEG,IAAI,CAAC,CAAC,CAAC;gBACZT,GAAG,EAAE,WAAW;gBAChBgC,MAAM,EAAE;cACZ,CAAC,EACD,gBAAgB,EAChBvB,IAAI,CAAC,CAAC,CAAC,CAACJ,OAAO,CAClB;YACL;YACAkB,QAAQ,eAAId,IAAI,CAAC;UACrB,CAAC,CAAC;QACN,CAAC,CAAC;MACN,CAAC,CAAC;MAEF,OAAOe,OAAO;IAClB;EAAC;IAAA;IAAA,OAED,4BAAmB;MACf,OAAOjD,IAAI,CAAC4E,MAAM,CAAC,qBAAqB,EAAE1E,WAAW,CAACqD,IAAI,EAAErD,WAAW,CAACsD,OAAO,EAAEtD,WAAW,CAAC2E,QAAQ,EAAE,IAAI,CAACrE,WAAW,CAAC+C,IAAI,EAAE,IAAI,CAAC/C,WAAW,CAACgD,OAAO,CAAC;IAC3J;EAAC;IAAA;IAAA,OAED,yBAAgBd,IAAI,EAAEY,IAAI,EAAEN,QAAQ,EAAE;MAClCN,IAAI,GAAG,CAACA,IAAI,IAAI,EAAE,EAAEE,QAAQ,EAAE;MAE9B,IAAI,CAAC,IAAI,CAAC5B,YAAY,CAAC6B,cAAc,CAACH,IAAI,CAAC,EAAE;QACzC,OAAOM,QAAQ,EAAE;MACrB;MAEA,IAAI8B,WAAW,GAAG,IAAI,CAAC9D,YAAY,CAAC0B,IAAI,CAAC,IAAI,EAAE;MAC/C,IAAIqC,cAAc,GAAG,IAAI,CAACnE,eAAe,CAAC8B,IAAI,CAAC,IAAI,EAAE;MAErD,IAAIoC,WAAW,CAACN,MAAM,EAAE;QACpB,IAAI,CAACnD,MAAM,CAACG,KAAK,CACb;UACIC,GAAG,EAAE,aAAa;UAClBuD,WAAW,EAAEF,WAAW,CAACN,MAAM;UAC/B9B,IAAI,EAAJA;QACJ,CAAC,EACD,yBAAyB,EACzBoC,WAAW,CAACN,MAAM,EAClB9B,IAAI,CACP;MACL;MAEA,IAAIoC,WAAW,CAACN,MAAM,GAAGO,cAAc,CAACP,MAAM,KAAK,CAAC,EAAE;QAClD,OAAOxB,QAAQ,EAAE;MACrB;MAEA,IAAIiC,GAAG,GAAG,CAAC;MACX,IAAIC,KAAK,GAAG,SAAS;MACrB,IAAIC,cAAc,GAAG,SAAjBA,cAAc,GAAS;QACvB,IAAIC,UAAU,GAAGF,KAAK,KAAK,SAAS,GAAGH,cAAc,GAAGD,WAAW;QACnE,IAAIG,GAAG,IAAIG,UAAU,CAACZ,MAAM,EAAE;UAC1B,IAAIU,KAAK,KAAK,SAAS,IAAIJ,WAAW,CAACN,MAAM,EAAE;YAC3CU,KAAK,GAAG,MAAM;YACdD,GAAG,GAAG,CAAC;YACPG,UAAU,GAAGN,WAAW;UAC5B,CAAC,MAAM;YACH,OAAO9B,QAAQ,EAAE;UACrB;QACJ;QACA,IAAIL,MAAM,GAAGyC,UAAU,CAACH,GAAG,EAAE,CAAC;QAC9BtC,MAAM,CAACW,IAAI,EAAE,UAAAvB,GAAG,EAAI;UAChB,IAAIA,GAAG,EAAE;YACL,OAAOiB,QAAQ,CAACjB,GAAG,CAAC;UACxB;UACAoD,cAAc,EAAE;QACpB,CAAC,CAAC;MACN,CAAC;MAEDA,cAAc,EAAE;IACpB;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAWE,QAAQ,EAAE;MAAA;MACjB,IAAI7C,KAAK,GAAGvC,MAAM,CAACqF,KAAK,CAACD,QAAQ,CAAC;;MAElC;MACA,IAAI,CAAChD,SAAS,GAAG,UAAC5B,OAAO,EAAEuC,QAAQ,EAAK;QACpC,IAAIuC,QAAQ,GAAG/C,KAAK,CAAC+C,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACC,WAAW,EAAE;QAE7D,IAAI,MAAI,CAACxE,IAAI,CAACyE,GAAG,CAAC,gBAAgB,GAAGH,QAAQ,CAAC,EAAE;UAC5C,OAAO,MAAI,CAACtE,IAAI,CAAC0E,GAAG,CAAC,gBAAgB,GAAGJ,QAAQ,CAAC,CAAC/C,KAAK,EAAE/B,OAAO,EAAEuC,QAAQ,CAAC;QAC/E;QAEA,QAAQuC,QAAQ;UACZ;UACA,KAAK,MAAM;UACX,KAAK,OAAO;YACRxF,eAAe,CAACyC,KAAK,CAACoD,IAAI,EAAEnF,OAAO,CAACoF,IAAI,EAAEpF,OAAO,CAACqF,IAAI,EAAE,UAAC/D,GAAG,EAAEgE,MAAM,EAAK;cACrE,IAAIhE,GAAG,EAAE;gBACL,OAAOiB,QAAQ,CAACjB,GAAG,CAAC;cACxB;cACA,OAAOiB,QAAQ,CAAC,IAAI,EAAE;gBAClBgD,UAAU,EAAED;cAChB,CAAC,CAAC;YACN,CAAC,CAAC;YACF;UACJ,KAAK,OAAO;UACZ,KAAK,QAAQ;UACb,KAAK,QAAQ;UACb,KAAK,SAAS;YAAE;cACZ,IAAI,CAAC,MAAI,CAAC9E,IAAI,CAACyE,GAAG,CAAC,oBAAoB,CAAC,EAAE;gBACtC,OAAO1C,QAAQ,CAAC,IAAIiD,KAAK,CAAC,yBAAyB,CAAC,CAAC;cACzD;cACA,IAAIC,OAAO,GAAG,SAAVA,OAAO,CAAGC,SAAS,EAAI;gBAAA;gBACvB,IAAIC,OAAO,GAAG,CAAC,CAAC,MAAI,CAACnF,IAAI,CAAC0E,GAAG,CAAC,oBAAoB,CAAC,CAACU,WAAW;gBAC/D,IAAIC,WAAW,GAAGF,OAAO,GAAG,MAAI,CAACnF,IAAI,CAAC0E,GAAG,CAAC,oBAAoB,CAAC,CAACU,WAAW,GAAG,MAAI,CAACpF,IAAI,CAAC0E,GAAG,CAAC,oBAAoB,CAAC;gBACjH,IAAIY,SAAS,GAAGC,MAAM,CAAChE,KAAK,CAAC+C,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;gBAC9D,IAAIiB,cAAc;kBACdjE,KAAK,EAAE;oBACH2D,SAAS,EAATA,SAAS;oBACTN,IAAI,EAAEW,MAAM,CAAChE,KAAK,CAACqD,IAAI,CAAC;oBACxBhE,IAAI,EAAE0E;kBACV;gBAAC,oCACAH,OAAO,GAAG,aAAa,GAAG,QAAQ,EAAG;kBAClCN,IAAI,EAAErF,OAAO,CAACqF,IAAI;kBAClBD,IAAI,EAAEpF,OAAO,CAACoF;gBAClB,CAAC,+CACQ,SAAS,mBACrB;gBAED,IAAIrD,KAAK,CAACkE,IAAI,EAAE;kBACZ,IAAIC,QAAQ,GAAGC,kBAAkB,CAACpE,KAAK,CAACkE,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,EAAE,CAAC;kBAChE,IAAIC,QAAQ,GAAGH,kBAAkB,CAACpE,KAAK,CAACkE,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,EAAE,CAAC;kBAC9D,IAAIZ,OAAO,EAAE;oBACTK,cAAc,CAACjE,KAAK,CAACyE,MAAM,GAAGN,QAAQ;oBACtCF,cAAc,CAACjE,KAAK,CAACuE,QAAQ,GAAGA,QAAQ;kBAC5C,CAAC,MAAM,IAAIR,SAAS,KAAK,CAAC,EAAE;oBACxBE,cAAc,CAACS,MAAM,GAAGP,QAAQ;kBACpC,CAAC,MAAM;oBACHF,cAAc,CAACU,cAAc,GAAG;sBAC5BR,QAAQ,EAARA,QAAQ;sBACRI,QAAQ,EAARA;oBACJ,CAAC;kBACL;gBACJ;gBAEAT,WAAW,CAACc,gBAAgB,CAACX,cAAc,EAAE,UAAC1E,GAAG,EAAEsF,IAAI,EAAK;kBACxD,IAAItF,GAAG,EAAE;oBACL,OAAOiB,QAAQ,CAACjB,GAAG,CAAC;kBACxB;kBACA,OAAOiB,QAAQ,CAAC,IAAI,EAAE;oBAClBgD,UAAU,EAAEqB,IAAI,CAACtB,MAAM,IAAIsB;kBAC/B,CAAC,CAAC;gBACN,CAAC,CAAC;cACN,CAAC;cAED,IAAIjH,GAAG,CAACkH,IAAI,CAAC9E,KAAK,CAAC+E,QAAQ,CAAC,EAAE;gBAC1B,OAAOrB,OAAO,CAAC1D,KAAK,CAAC+E,QAAQ,CAAC;cAClC;cAEA,OAAOlH,GAAG,CAAC8C,OAAO,CAACX,KAAK,CAAC+E,QAAQ,EAAE,UAACxF,GAAG,EAAEyF,OAAO,EAAK;gBACjD,IAAIzF,GAAG,EAAE;kBACL,OAAOiB,QAAQ,CAACjB,GAAG,CAAC;gBACxB;gBACAmE,OAAO,CAACuB,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC;cAC1D,CAAC,CAAC;YACN;QAAC;QAELxE,QAAQ,CAAC,IAAIiD,KAAK,CAAC,6BAA6B,CAAC,CAAC;MACtD,CAAC;IACL;EAAC;IAAA;IAAA,OAED,4BAAmB3C,IAAI,EAAEN,QAAQ,EAAE;MAC/B,IAAK,CAAC,IAAI,CAACvC,OAAO,CAACkH,cAAc,IAAI,CAACrE,IAAI,CAACP,IAAI,CAAC4E,cAAc,IAAK,CAACrE,IAAI,CAACP,IAAI,CAAC6E,IAAI,EAAE;QAChF,OAAO5E,QAAQ,EAAE;MACrB;MACAM,IAAI,CAACuE,cAAc,CAACvE,IAAI,CAACP,IAAI,EAAE,MAAM,EAAE,UAAChB,GAAG,EAAE6F,IAAI,EAAK;QAClD,IAAI7F,GAAG,EAAE;UACL,OAAOiB,QAAQ,CAACjB,GAAG,CAAC;QACxB;QACA,IAAI+F,UAAU,GAAG,CAAC;QAClBF,IAAI,GAAG,CAACA,IAAI,IAAI,EAAE,EAAEhF,QAAQ,EAAE,CAAC4C,OAAO,CAAC,wDAAwD,EAAE,UAACuC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAK;UACnI,IAAIC,GAAG,GAAG7H,MAAM,CAAC8H,WAAW,CAAC,EAAE,CAAC,CAACxF,QAAQ,CAAC,KAAK,CAAC,GAAG,YAAY;UAC/D,IAAI,CAACU,IAAI,CAACP,IAAI,CAACsF,WAAW,EAAE;YACxB/E,IAAI,CAACP,IAAI,CAACsF,WAAW,GAAG,EAAE;UAC9B;UACA,IAAI,CAACZ,KAAK,CAACC,OAAO,CAACpE,IAAI,CAACP,IAAI,CAACsF,WAAW,CAAC,EAAE;YACvC/E,IAAI,CAACP,IAAI,CAACsF,WAAW,GAAG,EAAE,CAACC,MAAM,CAAChF,IAAI,CAACP,IAAI,CAACsF,WAAW,IAAI,EAAE,CAAC;UAClE;UACA/E,IAAI,CAACP,IAAI,CAACsF,WAAW,CAACvF,IAAI,CAAC;YACvByF,IAAI,EAAEN,OAAO;YACbE,GAAG,EAAHA,GAAG;YACHK,QAAQ,EAAE,QAAQ,GAAG,EAAEV,UAAU,GAAG,GAAG,GAAGlI,SAAS,CAAC6I,eAAe,CAACP,QAAQ;UAChF,CAAC,CAAC;UACF,OAAOF,MAAM,GAAG,MAAM,GAAGG,GAAG;QAChC,CAAC,CAAC;QACF7E,IAAI,CAACP,IAAI,CAAC6E,IAAI,GAAGA,IAAI;QACrB5E,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OAED,aAAIoB,GAAG,EAAEsE,KAAK,EAAE;MACZ,OAAO,IAAI,CAACzH,IAAI,CAAC0H,GAAG,CAACvE,GAAG,EAAEsE,KAAK,CAAC;IACpC;EAAC;IAAA;IAAA,OAED,aAAItE,GAAG,EAAE;MACL,OAAO,IAAI,CAACnD,IAAI,CAAC0E,GAAG,CAACvB,GAAG,CAAC;IAC7B;EAAC;EAAA;AAAA,EAjZc3E,YAAY;AAoZ/BmJ,MAAM,CAACC,OAAO,GAAGtI,IAAI"},"metadata":{},"sourceType":"script"}